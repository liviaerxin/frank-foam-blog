[{"title":"Avalonia","type":0,"sectionRef":"#","url":"/blog/avalonia","content":"","keywords":"practice avalonia"},{"title":"SkiaSharp​","type":1,"pageTitle":"Avalonia","url":"/blog/avalonia#skiasharp","content":"SkiaSharp/GRContextTest.cs at main · mono/SkiaSharp · GitHub "},{"title":"C/C++ Build System","type":0,"sectionRef":"#","url":"/blog/c-build-system","content":"","keywords":"practice avalonia"},{"title":"Build System​","type":1,"pageTitle":"C/C++ Build System","url":"/blog/c-build-system#build-system","content":"Make Ninja MSBuild "},{"title":"Build System Generator​","type":1,"pageTitle":"C/C++ Build System","url":"/blog/c-build-system#build-system-generator","content":"CMake Meson "},{"title":"CI​","type":1,"pageTitle":"C/C++ Build System","url":"/blog/c-build-system#ci","content":""},{"title":"C++ Package Management","type":0,"sectionRef":"#","url":"/blog/c-package-management","content":"vcpkg [learn-vcpkg] conan","keywords":"c++ package vcpkg conan"},{"title":"CIL(Common Intermediate Language)","type":0,"sectionRef":"#","url":"/blog/common-intermediate-language","content":"","keywords":""},{"title":"What is CIl/IL​","type":1,"pageTitle":"CIL(Common Intermediate Language)","url":"/blog/common-intermediate-language#what-is-cilil","content":"For C# or Java, the program is not directly compiled to machine code, but intermediate language code. For C#, the intermediate code is called Common Intermediate Language(CIL, or IL). So whether the *.dll or *.exe compiled from C#, is composed of IL code and its corresponding meta data. At runtime, the JIT(Just-In-Compiler) compile the IL code to the native machine code. "},{"title":"What is JIT​","type":1,"pageTitle":"CIL(Common Intermediate Language)","url":"/blog/common-intermediate-language#what-is-jit","content":"./ilasm ~/Documents/peggy-foam-wiki/docs/IL/test/test.il -dll ./ildasm ~/Documents/peggy-foam-wiki/docs/IL/test/test.dll -t dotnet myapp.dll  "},{"title":"Code Snippet Management","type":0,"sectionRef":"#","url":"/blog/code-snippet-management","content":"","keywords":"code snippet manager"},{"title":"Data Center","type":0,"sectionRef":"#","url":"/blog/data-center","content":"","keywords":""},{"title":"Economic Data​","type":1,"pageTitle":"Data Center","url":"/blog/data-center#economic-data","content":"FRED ECONOMIC DATA US inflation cpi "},{"title":"Hello from Docusaurus","type":0,"sectionRef":"#","url":"/blog/doc-with-tags","content":"","keywords":""},{"title":"Headers​","type":1,"pageTitle":"Hello from Docusaurus","url":"/blog/doc-with-tags#headers","content":"will show up on the table of contents on the upper right So that your users will know what this page is all about without scrolling down or even without reading too much. "},{"title":"Only h2 and h3 will be in the TOC by default.​","type":1,"pageTitle":"Hello from Docusaurus","url":"/blog/doc-with-tags#only-h2-and-h3-will-be-in-the-toc-by-default","content":"You can configure the TOC heading levels either per-document or in the theme configuration. The headers are well-spaced so that the hierarchy is clear. lists will help youpresent the key pointsthat you want your users to remember and you may nest them multiple times "},{"title":"Tools","type":0,"sectionRef":"#","url":"/blog/diagram-tools","content":"","keywords":""},{"title":"Generic Tools​","type":1,"pageTitle":"Tools","url":"/blog/diagram-tools#generic-tools","content":"drawio: draw.io is a JavaScript, client-side editor for general diagramming and whiteboarding Intelligent Diagramming | Lucidchart The Visual Collaboration Platform for Every Team | Miro "},{"title":"Code as Diagram Tools​","type":1,"pageTitle":"Tools","url":"/blog/diagram-tools#code-as-diagram-tools","content":"GitHub - mermaid-js/mermaid: Generation of diagrams like flowcharts or sequence diagrams from text in a similar manner as markdown GitHub - plantuml/plantuml: Generate diagrams from textual description "},{"title":"ERD Diagram Tools​","type":1,"pageTitle":"Tools","url":"/blog/diagram-tools#erd-diagram-tools","content":""},{"title":"Share Data between Docker Containers","type":0,"sectionRef":"#","url":"/blog/docker-containers-data-sharing","content":"","keywords":"Docker Containters Data Sharing"},{"title":"Use a volume to bind a local folder​","type":1,"pageTitle":"Share Data between Docker Containers","url":"/blog/docker-containers-data-sharing#use-a-volume-to-bind-a-local-folder","content":"In default, the volume is created by Docker and its corresponding folder resides in Docker managed folder like /var/lib/docker/volumes/: $ docker create volume xxx  $ docker volume inspect xxx [ { &quot;CreatedAt&quot;: &quot;2023-07-19T14:41:18+08:00&quot;, &quot;Driver&quot;: &quot;local&quot;, &quot;Labels&quot;: {}, &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/xxx/_data&quot;, &quot;Name&quot;: &quot;xxx&quot;, &quot;Options&quot;: {}, &quot;Scope&quot;: &quot;local&quot; } ]  However, sometimes you would like to bind the volume into a specified local folder(like /data/volumes/testvol) in hosts(only available in Linux) $ docker volume create --opt type=none --opt o=bind --opt device=/data/volumes/testvol testvol  $ docker inspect testvol [ { &quot;CreatedAt&quot;: &quot;2023-07-13T04:36:16Z&quot;, &quot;Driver&quot;: &quot;local&quot;, &quot;Labels&quot;: {}, &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/testvol/_data&quot;, &quot;Name&quot;: &quot;testvol&quot;, &quot;Options&quot;: { &quot;device&quot;: &quot;/data/volumes/testvol&quot;, &quot;o&quot;: &quot;bind&quot;, &quot;type&quot;: &quot;none&quot; }, &quot;Scope&quot;: &quot;local&quot; }  In Docker compose yaml, services: frontend: image: node:lts volumes: - testvol:/home/node/app volumes: db-data: testvol: driver: local driver_opts: type: none o: bind device: /data/volumes/testvol  "},{"title":"Use NFS volume​","type":1,"pageTitle":"Share Data between Docker Containers","url":"/blog/docker-containers-data-sharing#use-nfs-volume","content":""},{"title":"Use Samba volume​","type":1,"pageTitle":"Share Data between Docker Containers","url":"/blog/docker-containers-data-sharing#use-samba-volume","content":""},{"title":"References​","type":1,"pageTitle":"Share Data between Docker Containers","url":"/blog/docker-containers-data-sharing#references","content":"Volumes | Docker Documentation "},{"title":"Communication Between Docker Containers","type":0,"sectionRef":"#","url":"/blog/docker-containers-communication","content":"","keywords":""},{"title":"Using --link flag(Legacy)​","type":1,"pageTitle":"Communication Between Docker Containers","url":"/blog/docker-containers-communication#using---link-flaglegacy","content":"Start a postgres db container: docker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres  Run a postgres client container to connect the db container with user postgres and password mysecretpassword: docker run -it --rm --link postgres-db:db postgres psql -h db -U postgres psql (14.3) Type &quot;help&quot; for help. postgres=# SELECT 1; ?column? ---------- 1 (1 row)  Or run a utility container: docker run -it --rm --link postgres-db:db busybox sh # in `busybox` ping db  "},{"title":"Using Default Bridge Network​","type":1,"pageTitle":"Communication Between Docker Containers","url":"/blog/docker-containers-communication#using-default-bridge-network","content":"If you are running your container without specifying attached network, it will use the docker default bridge network. However The default bridge network allows container-to-container communication by IP address only. To use hostname or alias name in connecting rather than IP address, see the following methods. So before connecting, we need get the container IP address by docker inspect. Start a postgres db container: docker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres  Get the IP address of the postgres db container: docker inspect mynginx | grep IPAddress &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,  Run a postgres client container to connect the db container: docker run -it --rm postgres psql -h &quot;172.17.0.2&quot; -U postgres psql (14.3) Type &quot;help&quot; for help. postgres=# SELECT 1; ?column? ---------- 1 (1 row)  "},{"title":"Using Private Defined Bridge Network​","type":1,"pageTitle":"Communication Between Docker Containers","url":"/blog/docker-containers-communication#using-private-defined-bridge-network","content":"The private defined bridge network will give you more privacy that it only allows only containers belonging to it can talk to each other. Moreover, you can use hostname or alias name to connect without regard of IP address changing due to re-start. Create a private bridge network: docker network create postgres-net  Start a postgres db container: docker run --rm --net postgres-net --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres  Run a postgres client container to connect the db container: docker run -it --rm --net postgres-net postgres psql -h postgres-db -U postgres psql (14.3) Type &quot;help&quot; for help. postgres=# SELECT 1; ?column? ---------- 1 (1 row)  "},{"title":"Using Docker Compose​","type":1,"pageTitle":"Communication Between Docker Containers","url":"/blog/docker-containers-communication#using-docker-compose","content":"Actually, docker compose will create its private bridge network, and when it start containers, containers will be attached to that network in default. docker-compose-postgres.yml # Use below credentials to access in `adminer` web to access `db`, # server: db (db1, db2 are also available!) # user: postgres # password: example version: '3.1' services: db: image: postgres restart: always environment: # POSTGRES_USER: postgres # `postgres` in default. POSTGRES_PASSWORD: example networks: default: aliases: - db1 - db2 adminer: image: adminer restart: always ports: - 8080:8080  "},{"title":"Dotfiles Guide","type":0,"sectionRef":"#","url":"/blog/dotfiles-guide","content":"Tutorials - dotfiles.github.io Getting started with dotfilesFrontend Ramblings RSS feedThe content of this website on GitHubMy Mastodon profileMy Twitter profileShare this article on TwitterShare this article on Hacker News","keywords":"dotfiles"},{"title":".NET Finalizer","type":0,"sectionRef":"#","url":"/blog/dotnet-finalizer","content":"","keywords":""},{"title":"Tips​","type":1,"pageTitle":".NET Finalizer","url":"/blog/dotnet-finalizer#tips","content":"finalizers should not be accessing managed objects. "},{"title":"Setup NFS Sever In Docker","type":0,"sectionRef":"#","url":"/blog/docker-setup-nfs-sever","content":"","keywords":"Setup NFS Sever"},{"title":"Setup a NFS server​","type":1,"pageTitle":"Setup NFS Sever In Docker","url":"/blog/docker-setup-nfs-sever#setup-a-nfs-server","content":"docker run -it --rm \\ --name nfs \\ --privileged \\ -v /data/volume/test:/nfs-share \\ -e SHARED_DIRECTORY=/nfs-share \\ -p 2049:2049 \\ itsthenetwork/nfs-server-alpine:latest  Get the ip address of the nfs server, docker inspect \\ -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \\ nfs  Here the output is 172.17.0.2  "},{"title":"Test NFS server by manual mount in the container​","type":1,"pageTitle":"Setup NFS Sever In Docker","url":"/blog/docker-setup-nfs-sever#test-nfs-server-by-manual-mount-in-the-container","content":"NOTE: run container as root by option --privileged or --cap-add SYS_ADMIN when permissions denied inside the container: docker run -it --rm --privileged busybox sh  Inside the container: NOTE: Due to the fsid=0 parameter set in the /etc/exports file, there's no need to specify the folder name when mounting from a client. For example, this works fine even though the folder being mounted and shared is /nfs-share: mkdir /mnt mount -v -o vers=4,loud 172.17.0.2:/ /mnt echo &quot;some text here&quot; &gt; /mnt/file1.txt  Then go to the Host to list directory /data/volume/test, where you will find the file1.txt is sitting. cat /data/volume/test/file1.txt  "},{"title":"Test NFS server in a Docker container with creating a NFS volume​","type":1,"pageTitle":"Setup NFS Sever In Docker","url":"/blog/docker-setup-nfs-sever#test-nfs-server-in-a-docker-container-with-creating-a-nfs-volume","content":"Create a NFS volume in Docker docker volume create --driver local \\ --opt type=nfs \\ --opt o=addr=172.17.0.2,nfsvers=4 \\ --opt device=:/ \\ nfs-volume  docker inspect nfs-volume  Then run a container with the created volume nfs-volume. docker run -it --rm \\ --name nfs-test \\ -v nfs-volume:/mnt \\ busybox \\ sh  Or use the combined one command which will create a volume nfsvolume, docker run -it --rm \\ --name nfs-test \\ --mount 'type=volume,source=nfsvolume,volume-driver=local,volume-opt=type=nfs,volume-opt=device=:/,&quot;volume-opt=o=addr=172.17.0.2,rw,nfsvers=4,async&quot;,target=/mnt' \\ busybox \\ sh  "},{"title":"Setup a NFS Server and Mount NFS Volume int Docker Compose​","type":1,"pageTitle":"Setup NFS Sever In Docker","url":"/blog/docker-setup-nfs-sever#setup-a-nfs-server-and-mount-nfs-volume-int-docker-compose","content":"version: '3' services: nfs-client: image: busybox ports: - 8001:8000 environment: - ROOT_PATH=/upload working_dir: /app command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-config=log_conf.yaml volumes: - type: volume source: nfs-volume target: /data volume: nocopy: true depends_on: - nfs-server networks: backend: nfs-server: image: itsthenetwork/nfs-server-alpine:latest privileged: true # ports: # - 2049:2049 environment: SHARED_DIRECTORY: /nfs-share working_dir: /usr/src/app/docusaurus volumes: - /data/volume/mtr:/nfs-share networks: backend: ipv4_address: 172.28.0.2 networks: backend: driver: bridge ipam: config: - subnet: 172.28.0.0/16 gateway: 172.28.0.1 volumes: nfs-volume: driver: local driver_opts: type: nfs o: &quot;addr=172.28.0.2,nfsvers=4,async&quot; device: &quot;:/&quot;  "},{"title":"FastAPI Best Practices","type":0,"sectionRef":"#","url":"/blog/fastapi-best-practices","content":"","keywords":"limit only one access to endpoint at a time lock access to endpoint at a time"},{"title":"Limit Only One Access to Endpoint at a Time​","type":1,"pageTitle":"FastAPI Best Practices","url":"/blog/fastapi-best-practices#limit-only-one-access-to-endpoint-at-a-time","content":"Limit only one access to an endpoint at a time with asyncio.Lock in asyncio in FastAPI. ../code-snippets/app_request_lock.py # main.py from fastapi import FastAPI import asyncio app = FastAPI() lock = asyncio.Lock() counter = 0 @app.post(&quot;/limit&quot;) async def func(): global counter async with lock: print(&quot;Hello&quot;) counter = counter + 1 await asyncio.sleep(2) print(&quot;bye&quot;) await asyncio.sleep(2) return {&quot;counter&quot;: counter} &quot;&quot;&quot; Make 2 requests at a time, output from server: INFO: 127.0.0.1:60228 - &quot;POST /limit HTTP/1.1&quot; 200 OK Hello bye INFO: 127.0.0.1:51010 - &quot;POST /limit HTTP/1.1&quot; 200 OK Hello bye INFO: 127.0.0.1:51022 - &quot;POST /limit HTTP/1.1&quot; 200 OK Request 1: ❯ curl -X 'POST' \\ 'http://127.0.0.1:8000/limit' \\ -H 'accept: application/json' \\ -d '' {&quot;counter&quot;:1}% Request 2: ❯ curl -X 'POST' \\ 'http://127.0.0.1:8000/limit' \\ -H 'accept: application/json' \\ -d '' {&quot;counter&quot;:2}% &quot;&quot;&quot;  NOTE: The asyncio.Lock only take effect in the asyncio loop level, if using unicorn to run server in multiple processes, it can not lock the request! No limitation. ../code-snippets/app_request_nolock.py # main.py from fastapi import FastAPI import asyncio app = FastAPI() lock = asyncio.Lock() counter = 0 @app.post(&quot;/limit&quot;) async def func(): global counter print(&quot;Hello&quot;) counter = counter + 1 await asyncio.sleep(2) print(&quot;bye&quot;) await asyncio.sleep(2) return {&quot;counter&quot;: counter} &quot;&quot;&quot; Make 2 requests at a time, output from server: Hello Hello bye bye INFO: 127.0.0.1:45160 - &quot;POST /limit HTTP/1.1&quot; 200 OK INFO: 127.0.0.1:45172 - &quot;POST /limit HTTP/1.1&quot; 200 OK Request 1: ❯ curl -X 'POST' \\ 'http://127.0.0.1:8000/limit' \\ -H 'accept: application/json' \\ -d '' {&quot;counter&quot;:2}% Request 2: ❯ curl -X 'POST' \\ 'http://127.0.0.1:8000/limit' \\ -H 'accept: application/json' \\ -d '' {&quot;counter&quot;:2}% &quot;&quot;&quot;  Limit only one access to an endpoint at a time with thread.Lock Limit only one access to an endpoint at a time with process.Lock "},{"title":"Attach A Background Service Into the Application​","type":1,"pageTitle":"FastAPI Best Practices","url":"/blog/fastapi-best-practices#attach-a-background-service-into-the-application","content":"Run a background service behind the FastAPI server: share the same asyncio main loop with the serverthe service start when the server starts and stop when the server stopsit should be light-weight and non-CPU heavy workload Coroutines and Tasks — Python 3.11.4 documentationEvent Loop — Python 3.11.4 documentation ../code-snippets/app_background_service.py from fastapi import FastAPI import asyncio import os app = FastAPI() class BackgroundService: def __init__(self, loop: asyncio.AbstractEventLoop, tasks: list): self.loop = loop self.running = False async def work(self): print(f&quot;Start background service&quot;) while True: print(f&quot;Run background service...&quot;) # Sleep for 1 second await asyncio.sleep(1) async def start(self): self.task = self.loop.create_task(self.work()) async def stop(self): self.task.cancel() try: await self.task except asyncio.CancelledError: print(&quot;Clean up background service&quot;) service = BackgroundService(asyncio.get_running_loop()) @app.on_event(&quot;startup&quot;) async def startup(): print(f&quot;PID[{os.getpid()}] app startup&quot;) # schedule a task on main loop await service.start() @app.on_event(&quot;shutdown&quot;) async def shutdown(): # close ProcessPoolExecutor print(f&quot;PID[{os.getpid()}] app shutdown&quot;) await service.stop() @app.post(&quot;/&quot;) async def hello(): return {&quot;value&quot;: f&quot;hello world [{service.task.done()}] [{service.task.get_name()}]&quot;}  "},{"title":"Frequently Asked Questions","type":0,"sectionRef":"#","url":"/blog/frequently-asked-questions","content":"","keywords":""},{"title":"Links/Graphs/BackLinks don't work. How do I enable them?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/blog/frequently-asked-questions#linksgraphsbacklinks-dont-work-how-do-i-enable-them","content":"Ensure that you have all the [[recommended-extensions]] installed in Visual Studio CodeReload Visual Studio Code by running Cmd + Shift + P (Ctrl + Shift + P for Windows), type &quot;reload&quot; and run the Developer: Reload Window command to for the updated extensions take effectCheck the formatting rules for links on [[foam-file-format]] and [[wikilinks]] "},{"title":"I don't want Foam enabled for all my workspaces​","type":1,"pageTitle":"Frequently Asked Questions","url":"/blog/frequently-asked-questions#i-dont-want-foam-enabled-for-all-my-workspaces","content":"Any extension you install in Visual Studio Code is enabled by default. Given the philosophy of Foam, it works out of the box without doing any configuration upfront. In case you want to disable Foam for a specific workspace, or disable Foam by default and enable it for specific workspaces, it is advised to follow the best practices as documented by Visual Studio Code "},{"title":"I want to publish the graph view to GitHub pages or Vercel​","type":1,"pageTitle":"Frequently Asked Questions","url":"/blog/frequently-asked-questions#i-want-to-publish-the-graph-view-to-github-pages-or-vercel","content":"If you want a different front-end look to your published foam and a way to see your graph view, we'd recommend checking out these templates: foam-gatsby by Mathieu Dutourfoam-gatsby-kb by hikerpig "},{"title":"Git Best Practices","type":0,"sectionRef":"#","url":"/blog/git-best-practices","content":"","keywords":"Git Submodules"},{"title":"Git SSH Key​","type":1,"pageTitle":"Git Best Practices","url":"/blog/git-best-practices#git-ssh-key","content":"How to Authenticate Your Git to GitHub with SSH Keys "},{"title":"Git Credentials​","type":1,"pageTitle":"Git Best Practices","url":"/blog/git-best-practices#git-credentials","content":"Store username/password instead of ssh for multiple remotes To enable git credentials # local git config credential.helper store # global git config --global credential.helper store  Each credential is stored in ~/.git-credentials file on its own line as a URL like: https://&lt;USERNAME&gt;:&lt;PASSWORD&gt;@github.com  Configure credentials, # Global git config --global credential.https://github.com.username &lt;your_username&gt; # Or git config --local user.name &lt;your_username&gt; git config --local user.email &lt;your_useremail&gt; # Then git pull or git push to let it cache your username/password after it prompt you to input password in the first time  Alternatively, we can directly edit our global Git config file ~/.gitconfig, [credential &quot;https://github.com&quot;] username = &lt;username&gt;  Git - Config Username &amp; Password - Store Credentials - ShellHacks Configuring Git Credentials "},{"title":"Git Submodules​","type":1,"pageTitle":"Git Best Practices","url":"/blog/git-best-practices#git-submodules","content":"Pull the repo and its all submodules in the first time. git clone http://10.6.64.66:30000/mtr/mtr.git cd mtr git submodule update --init --recursive --progress  Or just one command to clone with all the submodules. git clone --recursive http://10.6.64.66:30000/mtr/mtr.git  Pull the repo and its all submodules later git submodule update --recursive --progress  Pull the latest of main branch in each repository, when the parent repo does point to the latest branch of its submodules! git submodule foreach git pull origin main  git submodule update --recursive --remote  "},{"title":"Inspect Shared Library","type":0,"sectionRef":"#","url":"/blog/inspect-shared-library","content":"","keywords":"debug dynamic library shared library"},{"title":"Using ldd Command​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-ldd-command","content":"Available in Linux: ldd /usr/bin/vim linux-vdso.so.1 (0x00007ffc75fb1000) libgtk-3.so.0 =&gt; /usr/lib/libgtk-3.so.0 (0x00007fa4dcb5e000) libgdk-3.so.0 =&gt; /usr/lib/libgdk-3.so.0 (0x00007fa4dca64000) libXau.so.6 =&gt; /usr/lib/libXau.so.6 (0x00007fa4db7a9000) .... liblzma.so.5 =&gt; /usr/lib/liblzma.so.5 (0x00007fa4db63f000) liblz4.so.1 =&gt; /usr/lib/liblz4.so.1 (0x00007fa4db61d000) libgcrypt.so.20 =&gt; /usr/lib/libgcrypt.so.20 (0x00007fa4db4ff000) libgpg-error.so.0 =&gt; /usr/lib/libgpg-error.so.0 (0x00007fa4db4d8000)  "},{"title":"Using objdump Command​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-objdump-command","content":"Available in Linux: objdump -p /usr/bin/vim | grep 'NEEDED' NEEDED libpython3.7m.so.1.0 NEEDED libcrypt.so.2 NEEDED libpthread.so.0 NEEDED libdl.so.2 NEEDED libutil.so.1 NEEDED libm.so.6 NEEDED libselinux.so.1 NEEDED libtinfo.so.6 NEEDED libacl.so.1 NEEDED libgpm.so.2 NEEDED libc.so.6  "},{"title":"Using readelf Command​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-readelf-command","content":"Available in Linux: readelf --dynamic /usr/bin/vim | grep NEEDED 0x0000000000000001 (NEEDED) Shared library: [libpython3.7m.so.1.0] 0x0000000000000001 (NEEDED) Shared library: [libcrypt.so.2] 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0] 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2] 0x0000000000000001 (NEEDED) Shared library: [libutil.so.1] 0x0000000000000001 (NEEDED) Shared library: [libm.so.6] 0x0000000000000001 (NEEDED) Shared library: [libselinux.so.1] 0x0000000000000001 (NEEDED) Shared library: [libtinfo.so.6] 0x0000000000000001 (NEEDED) Shared library: [libacl.so.1] 0x0000000000000001 (NEEDED) Shared library: [libgpm.so.2] 0x0000000000000001 (NEEDED) Shared library: [libc.so.6]  "},{"title":"Using otool Command​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-otool-command","content":"Available in OSX: otool -L libOpenCvSharpExtern.dylib  "},{"title":"Reading the /proc/<pid>/maps File​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#reading-the-procpidmaps-file","content":"Available in Linux: cat /proc/179015/maps ... 7f2cb67c3000-7f2cb67c6000 r--p 00000000 08:13 3810274 /usr/lib/libnss_files-2.31.so 7f2cb67c6000-7f2cb67cd000 r-xp 00003000 08:13 3810274 /usr/lib/libnss_files-2.31.so .. 7f2cb6a89000-7f2cb6a8a000 r--p 00002000 08:13 3810903 /usr/lib/libutil-2.31.so 7f2cb6a8a000-7f2cb6a8b000 r--p 00002000 08:13 3810903 /usr/lib/libutil-2.31.so ... 7f2cb9802000-7f2cb9803000 rw-p 00000000 00:00 0 7ffe77658000-7ffe7767a000 rw-p 00000000 00:00 0 [stack] 7ffe776c8000-7ffe776cc000 r--p 00000000 00:00 0 [vvar] 7ffe776cc000-7ffe776ce000 r-xp 00000000 00:00 0 [vdso] ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0 [vsyscall]  awk '$NF!~/\\.so/{next} {$0=$NF} !a[$0]++' /proc/179015/maps ... /usr/lib/libpython3.8.so.1.0 /usr/lib/libgpg-error.so.0.29.0 /usr/lib/libgcrypt.so.20.2.5 /usr/lib/liblz4.so.1.9.2 /usr/lib/liblzma.so.5.2.5 /usr/lib/libsystemd.so.0.28.0 /usr/lib/libogg.so.0.8.4 /usr/lib/libvorbis.so.0.4.8 /usr/lib/libblkid.so.1.1.0 /usr/lib/libXdmcp.so.6.0.0 /usr/lib/libXau.so.6.0.0 /usr/lib/libdatrie.so.1.3.5 ...  "},{"title":"Using vmmap Command​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-vmmap-command","content":""},{"title":"Using ctypes in Python​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-ctypes-in-python","content":"import ctypes ctypes.cdll.LoadLibrary(&quot;libOpenCvSharpExtern.so&quot;) ctypes.CDLL(&quot;libOpenCvSharpExtern.so&quot;)  dlopen() DYLD_PRINT_LIBRARIES=1 dlopen_test.out /opt/vcpkg/installed/arm64-osx-dynamic/lib/libpng16.dylib  objdump -p /usr/local/lib/libOpenCvSharpExtern.so  "},{"title":"Using nm​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-nm","content":"Show list of symbols: ❯ nm -g /opt/vcpkg/installed/arm64-osx-dynamic/lib/libintl.8.dylib U _CFArrayGetCount U _CFArrayGetValueAtIndex U _CFGetTypeID U _CFLocaleCopyPreferredLanguages U _CFPreferencesCopyAppValue U _CFRelease U _CFStringGetCString U _CFStringGetTypeID U __DefaultRuneLocale U ___CFConstantStringClassReference  "},{"title":"Using dumpbin​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-dumpbin","content":"Available in Windows Show dependent dynamic libraries(DLL): dumpbin /dependents your_dll_file.dll  "},{"title":"Using Microsoft.PowerShell​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#using-microsoftpowershell","content":"(Get-Command &quot;C:\\Path\\To\\Thing.dll&quot;).FileVersionInfo (Get-Item &quot;C:\\Windows\\System32\\nvcuda.dll&quot;).VersionInfo  "},{"title":"Useful Environment Variables​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#useful-environment-variables","content":"OSX: DYLD_LIBRARY_PATHDYLD_PRINT_LIBRARIESDYLD_PRINT_STATISTICS Linux: LD_LIBRARY_PATHLD_DEBUG=libs "},{"title":"References​","type":1,"pageTitle":"Inspect Shared Library","url":"/blog/inspect-shared-library#references","content":"Additional MSVC Build Tools How to Show All Shared Libraries Used by Executables in Linux "},{"title":"Graphical User Interface(GUI)","type":0,"sectionRef":"#","url":"/blog/graphical-user-interface","content":"","keywords":""},{"title":"Android graphics​","type":1,"pageTitle":"Graphical User Interface(GUI)","url":"/blog/graphical-user-interface#android-graphics","content":"two core pieces: SurfaceFlingerSkia Graphics | Android Open Source ProjectAndroid Graphics Internals - Stack Overflow "},{"title":"WayLand​","type":1,"pageTitle":"Graphical User Interface(GUI)","url":"/blog/graphical-user-interface#wayland","content":"What is Wayland? · Writing Wayland clients The Hello Wayland Tutorial | FLOSS &amp; Cia How to use Wayland with C to make a Linux app | by Sergey Bugaev | Medium "},{"title":"IoC","type":0,"sectionRef":"#","url":"/blog/ioc","content":"Introduction IoC, DIP, DI and IoC Container Lazily resolving services to fix circular dependencies in .NET Core - Thomas Levesque's .NET Blog Dealing With Circular Dependency Injection References - .NET Core Tutorials","keywords":""},{"title":"Learn ASGI","type":0,"sectionRef":"#","url":"/blog/learn-asgi","content":"Nowadays as web server framework is getting easy to use and work with. In Python areas, FastAPI obtains nearly 60k stars and becomes the most popular web framework for Pythoners. Looking at the advantage of FastAPI, it simplifies everything from parsing http requests, middleware processing, authentication, database manipulation and more. Let's dive into the behind-the-scenes technique stacks of FastAPI. Before research, there are some common questions around the web server development: How to process messages on HTTP protocol on TCP protocol? What're the favorite library used to do that?What are the differences between WSGI and ASGI?Data model used for database and users stacks from low-level to high-level Uvicorn: ASGI web server implementation/interface scopereceivesend h11 to process HTTP messageswebsocket to process websocket messages Starlette: ASGI frameworkabstract Request class for receive in Uvicornabstract Response class for send in Uvicornprovide middleware FastAPI: Fast to codeOpenAPI docsPydantic native model APIRoute APIRouter Application &lt;-- APIRouter &lt;-- APIRoute","keywords":"Learn ASGI"},{"title":"Learn CMake","type":0,"sectionRef":"#","url":"/blog/learn-cmake","content":"","keywords":"cmake project structure"},{"title":"CMake Project Structure​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#cmake-project-structure","content":"A typical CMake project can be regarded to has three Tree: Source Tree: project_root ├── CMakeLists.txt ├── simple_example.cpp ├── simple_lib.cpp └── simple_lib.hpp  Build Tree: project_root ├── CMakeLists.txt ├── simple_example.cpp ├── simple_lib.cpp ├── simple_lib.hpp └── build └── CMakeCache.txt  Install Tree: This tree is located in the CMAKE_INSTALL_PREFIX, of which default value is platform-dependent. By default, it is set to /usr/local on Unix-like systems (Linux, macOS) and C:/Program Files/&lt;Project Name&gt; on Windows.. To change it, you can pass -DCMAKE_INSTALL_PREFIX argument during CMake configuration step, like this: cmake -B build -S . -DCMAKE_INSTALL_PREFIX=/my/custom/installation/path  Alternatively, you can change it by passing --prefix(it can be relative path) argument during CMake install step, like this: cmake --install build --prefix &quot;/my/custom/installation/path&quot;  It's recommended to use a default install layout as GNUInstallDirs. When setting cmake --install build --prefix &quot;./install, the install tree will be like: project_root ├── CMakeLists.txt ├── simple_example.cpp ├── simple_lib.cpp ├── simple_lib.hpp ├── build │ └── CMakeCache.txt └── install ├── bin │ └── executables ├── sbin │ └── sysadmin executables ├── lib │ ├── compiled libraries (*.so (unix) or *.dll (windows)) │ └── library archive files (*.lib (windows)) ├── libexec │ └── executables not directly invoked by user ├── include │ └── header files └── doc └── documentation  "},{"title":"How CMake Works​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#how-cmake-works","content":"A typical workflow of CMake includes Configure, Build and Install steps, combined with the above mentioned Trees concepts. Configure step will generate a sort of configuration files, the most important ones among them are CMakeCache.txt, cmake_install.cmake and Makefile if using Make as building system. With these generated configuration files, the later steps Build and Install will run according to them.Build step will generate the build binary directory.Install step will generate the install binary directory. "},{"title":"How to make your package be found by others by find_package()​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#how-to-make-your-package-be-found-by-others-by-find_package","content":"package configuration files: find_package Title "},{"title":"RPATH in CMake​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#rpath-in-cmake","content":"rpath "},{"title":"CMake Variables​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#cmake-variables","content":"There are some useful and important CMake variables that will be introduced here: CMAKE_PREFIX_PATH CMAKE_IGNORE_PATH "},{"title":"References​","type":1,"pageTitle":"Learn CMake","url":"/blog/learn-cmake#references","content":"CMake hands-on workshop — CMake Workshoprpath: RPATH handling from official cmake "},{"title":"Learn CUDA","type":0,"sectionRef":"#","url":"/blog/learn-cuda","content":"","keywords":"gpu cuda"},{"title":"CUDA on WSL​","type":1,"pageTitle":"Learn CUDA","url":"/blog/learn-cuda#cuda-on-wsl","content":"NVIDIA CUDA software stack on WSL 2:  "},{"title":"References​","type":1,"pageTitle":"Learn CUDA","url":"/blog/learn-cuda#references","content":"CUDA And Nvidia Graphics Driver CUDA on WSL User Guide "},{"title":"Learn FFmpeg","type":0,"sectionRef":"#","url":"/blog/learn-ffmpeg","content":"","keywords":"learn ffmpeg"},{"title":"FFmpeg Command Samples​","type":1,"pageTitle":"Learn FFmpeg","url":"/blog/learn-ffmpeg#ffmpeg-command-samples","content":"It's note worthing to look over FFmpeg Wiki ffmpeg List all available container formats: ffmpeg -formats  List all available codec formats: ffmpeg -codecs  List private options of the codec: # Show available `presets` ffmpeg -h encoder=h264_nvenc  List all frames timestamp: ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -i input.mp4  List all keyframe(I-frame) timestamp: ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -skip_frame nokey -i input.mp4  Convert video: you can convert either the container formats or the codecs formats, such as: # To `mp4` container and `h.264` codecs(the lower crf, the higher quality) ffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 output.mp4 # To `mp4` container and `mpeg4` codecs ffmpeg -i input.avi -c:v libxvid -preset fast output.mp4 # To be friendly for streaming, adding necessary metadata to begin playback faster! ffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -movflags +faststart output.mp4 # Remove audio ffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -an output.mp4 # Use NVIDIA GPU ffmpeg -i input.avi -c:v h264_nvenc -preset fast output.avi # keep quality ffmpeg -i input.avi -c:v h264_nvenc -preset fast -rc constqp -cq 19 output.avi  Set keyframe interval: # mpeg4 ffmpeg -i input.avi -vcodec libxvid -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi # NVIDIA GPU # This sets the I-frame interval at 10 and ensures that no I-frames will be inserted in scene changes ffmpeg -i input.avi -vcodec h264_nvenc -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi  Trim video: # Fast clip with stream copy and faster seeking(700x) ffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v copy output.mp4 # Fast clip with stream copy and slower seeking(600x) ffmpeg -i video.mp4 -ss 00:00:10 -to 00:00:50 -c:v copy output.mp4 # Slow clip with re-encoding and faster seeking(1x) ffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v libx264 output.mp4  NOTE: Cutting video with stream copy will lead the start frame is not precise! Slow down/Speed up video: # Slow down to 1/2x in fast way ffmpeg -y -itsscale 2 -i video.mp4 -c:v copy output.mp4 # Speed up to 2x in fast way ffmpeg -y -itsscale 0.5 -i video.mp4 -c:v copy output.mp4 # Speed up to 2x with re-encoding in slow way ffmpeg -y -itsscale 0.5 -i video.mp4 -c:v libx264 output.mp4 # Speed up to 2x with `setpts filter`(which requires re-encoding) in slow way ffmpeg -i video.mp4 -filter:v &quot;setpts=0.5*PTS&quot; output.mp4 # Change fps to slow down/speed up but keeping duration ffmpeg -i video.mp4 -filter:v &quot;fps=30&quot; output.mp4  "},{"title":"References​","type":1,"pageTitle":"Learn FFmpeg","url":"/blog/learn-ffmpeg#references","content":"Chrome Audio/Video Support↩FFmpeg Wiki↩ "},{"title":"Learn PowerShell","type":0,"sectionRef":"#","url":"/blog/learn-powershell","content":"Set environment variables permanently [Environment]::SetEnvironmentVariable(&quot;VCPKG_ROOT&quot;, &quot;Whatever you need it to be&quot;, &quot;Machine&quot;) Get environment variables # Get all variables [Environment]::GetEnvironmentVariable() # Get specific variable [Environment]::GetEnvironmentVariable(&quot;VCPKG_ROOT&quot;) ","keywords":"learn powershell"},{"title":"Learn Vcpkg","type":0,"sectionRef":"#","url":"/blog/learn-vcpkg","content":"","keywords":"docs docusaurus"},{"title":"Manifest Mode​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#manifest-mode","content":""},{"title":"Classic Mode​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#classic-mode","content":""},{"title":"Useful Environment variables​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#useful-environment-variables","content":"CURRENT_INSTALLED_DIRCURRENT_PACKAGES_DIR set(VCPKG_RELEASE_LIBDIR &quot;${CURRENT_INSTALLED_DIR}/lib&quot;) set(VCPKG_DEBUG_LIBDIR &quot;${CURRENT_INSTALLED_DIR}/debug/lib&quot;) set(VCPKG_TOOLS_DIR &quot;${CURRENT_INSTALLED_DIR}/tools&quot;) set(VCPKG_SHARE_DIR &quot;${CURRENT_INSTALLED_DIR}/share&quot;) set(VCPKG_INCLUDE_DIR &quot;${CURRENT_INSTALLED_DIR}/include&quot;)  "},{"title":"Tips and Tricks​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#tips-and-tricks","content":""},{"title":"Reinstall packages without caching​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#reinstall-packages-without-caching","content":"vcpkg remove icu --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic vcpkg install icu --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --no-binarycaching vcpkg install libpq --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --binarysource=clear vcpkg remove libpq --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic vcpkg remove &quot;qtbase[gui,widgets]&quot; --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic vcpkg install &quot;qtbase[gui,widgets]&quot; --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --no-binarycaching vcpkg install &quot;qtbase[gui,widgets]&quot; --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --binarysource=clear  "},{"title":"Clean up all packages​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#clean-up-all-packages","content":"rm -rf /opt/vcpkg/installed/ rm -rf /opt/vcpkg/packages/ rm -rf /opt/vcpkg/buildtrees/    "},{"title":"Clean up all caching packages​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#clean-up-all-caching-packages","content":"rm -rf ~/.cache/vcpkg/archives/  "},{"title":"INSTALL_RPATH_USE_LINK_PATH different behaviours in manifest and classic mode​","type":1,"pageTitle":"Learn Vcpkg","url":"/blog/learn-vcpkg#install_rpath_use_link_path-different-behaviours-in-manifest-and-classic-mode","content":"INSTALL_RPATH_USE_LINK_PATH will not work properly when being used in the manifest mode, because CMake will don't handle libraries located in buildtree: set_target_properties(${PROJECT_NAME} PROPERTIES INSTALL_RPATH &quot;@executable_path/../Frameworks&quot; INSTALL_RPATH_USE_LINK_PATH ON )  After ${PROJECT_NAME} installed, in the manifest mode: ❯ otoolll /Users/frankchen/Documents/vcpkg-qt-app/install/./helloworld.app/Contents/MacOS/helloworld cmd LC_RPATH cmdsize 48 path @executable_path/../Frameworks (offset 12)  After ${PROJECT_NAME} installed, in the classic mode: ❯ otoolll /Users/frankchen/Documents/vcpkg-qt-app/install/./helloworld.app/Contents/MacOS/helloworld cmd LC_RPATH cmdsize 56 path /opt/vcpkg/installed/arm64-osx-dynamic/lib (offset 12) Load command 27 cmd LC_FUNCTION_STARTS -- cmd LC_RPATH cmdsize 48 path @executable_path/../Frameworks (offset 12)  [learn-cmake#RPATH in CMake] "},{"title":"Your markdown including PlantUML code block","type":0,"sectionRef":"#","url":"/blog/markdown-plantuml","content":"@startuml :User: --&gt; (Use) &quot;Main Admin&quot; as Admin &quot;Use the application&quot; as (Use) Admin --&gt; (Admin the application) @enduml ","keywords":""},{"title":"LevelDB","type":0,"sectionRef":"#","url":"/blog/leveldb","content":"Principle and use of leveldb - Birost SSTable and Log Structured Storage: LevelDB - igvita.com LevelDB Benchmarks","keywords":""},{"title":"Network Diagnosis","type":0,"sectionRef":"#","url":"/blog/network-diagnosis","content":"","keywords":""},{"title":"Show IP Address​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#show-ip-address","content":"ifconfig  "},{"title":"Show Routing Table​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#show-routing-table","content":"# linux route # osx netstat -rn  The -r flag means to show routes. The -n flag means to not resolve IPs to hostnames. "},{"title":"Find Gateway Used for Routing​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#find-gateway-used-for-routing","content":"# linux ip route get 8.8.8.8 # osx route get 8.8.8.8  "},{"title":"Show Routes across Network​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#show-routes-across-network","content":"traceroute # en0 interface traceroute -i en0  "},{"title":"Ping Through Specific Interface​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#ping-through-specific-interface","content":"# linux ping -I en0 sslvpn.astri.org # osx ping -b en0 sslvpn.astri.org  "},{"title":"Find Out Address Used by Which Process​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#find-out-address-used-by-which-process","content":"# osx netstat -avn -p tcp  "},{"title":"Add a Route​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#add-a-route","content":"# osx route -n add 10.0.0.0/24 10.0.0.1 # linux route -n add -net 10.0.0.0/24 gw 10.0.0.1  "},{"title":"FireWall Rule​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#firewall-rule","content":"osx: # show all information/stats sudo pfctl -sa # show rules sudo pfctl -sr # sanity check edited configuration file sudo pfctl -v -n -f /etc/pf.conf # load pf with new rules sudo pfctl -f /etc/pf.conf # enable pf sudo pfctl -e # disable pf sudo pfctl -d # add information on the fly sudo pfctl -t localsub -T add 127.0.0.0/24 # flush added rules later sudo pfctl -Fa -f /etc/pf.conf sudo pfctl -si sudo pfctl -q  "},{"title":"Get Geolocation of IP Address​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#get-geolocation-of-ip-address","content":"curl ipinfo.io/103.216.223.161  "},{"title":"Packet Analyzer​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#packet-analyzer","content":"# list which interfaces are available for capture tcpdump --list-interfaces # capture all packets in any interface sudo tcpdump --interface any # limit the number of packets captured then stop `-c number` sudo tcpdump -i any -c 5 # disable name resolution with using `-n` and port resolution with `-nn` sudo tcpdump -i any -c5 -nn # filter packets by protocol, only capture `ICMP` packets sudo tcpdump -i any -c5 icmp # capture packets related with host `8.8.8.8` sudo tcpdump -i any -c5 -nn host 8.8.8.8 # capture packets related with port `80` sudo tcpdump -i any -c5 -nn port 80 # capture packets with source address 192.168.0.1 sudo tcpdump -i any -c5 -nn src 192.168.0.1 # capture packets with destination address 8.8.8.8 sudo tcpdump -i any -c5 -nn dst 8.8.8.8  "},{"title":"USB Virtual Ethernet​","type":1,"pageTitle":"Network Diagnosis","url":"/blog/network-diagnosis#usb-virtual-ethernet","content":"An explanation on the USB virtual ethernet "},{"title":"OpenCV tips","type":0,"sectionRef":"#","url":"/blog/opencv-tips","content":"Q: Whether the image/frame from VideoCapture is in BGR or YUV pixels format? A: VideoCapture will convert the image automatically to BGR colorspace. you can disable this conversion (and receive YUV) by setting the CAP_PROP_CONVERT_RGB property to false.","keywords":""},{"title":"Python Module","type":0,"sectionRef":"#","url":"/blog/py-module","content":"","keywords":""},{"title":"Python Module Search Path​","type":1,"pageTitle":"Python Module","url":"/blog/py-module#python-module-search-path","content":"The Module Search Path Introduction to Python module search path "},{"title":"Python Benchmark","type":0,"sectionRef":"#","url":"/blog/python-benchmark","content":"Ok, here is the cost of acquiring and releasing an uncontended lock under Linux, with Python 3.2: $ ./python -m timeit \\ -s &quot;from threading import Lock; l=Lock(); a=l.acquire; r=l.release&quot; \\ &quot;a(); r()&quot; 10000000 loops, best of 3: 0.127 usec per loop And here is the cost of calling a dummy Python function: $ ./python -m timeit -s &quot;def a(): pass&quot; &quot;a(); a()&quot; 1000000 loops, best of 3: 0.221 usec per loop And here is the cost of calling a trivial C function (which returns the False singleton): $ ./python -m timeit -s &quot;a=bool&quot; &quot;a(); a()&quot; 10000000 loops, best of 3: 0.164 usec per loop Also, note that using the lock as a context manager is actually slower, not faster as you might imagine: $ ./python -m timeit -s &quot;from threading import Lock; l=Lock()&quot; \\ &quot;with l: pass&quot; 1000000 loops, best of 3: 0.242 usec per loop At least under Linux, there doesn't seem to be a lot of room for improvement in lock performance, to say the least. PS: RLock is now as fast as Lock: $ ./python -m timeit \\ -s &quot;from threading import RLock; l=RLock(); a=l.acquire; r=l.release&quot; \\ &quot;a(); r()&quot; 10000000 loops, best of 3: 0.114 usec per loop ","keywords":""},{"title":"Python Package Management","type":0,"sectionRef":"#","url":"/blog/python-package-management","content":"","keywords":"docs docusaurus"},{"title":"Todo List​","type":1,"pageTitle":"Python Package Management","url":"/blog/python-package-management#todo-list","content":"First tabstopA second tabstopA third tabstop Note Created: 2023-06-26  Try out the above example by running the Foam: Create New Note From Template command and selecting the your-first-template template. Notice what happens when your new note is created! To remove this template, simply delete the .foam/templates/your-first-template.md file. Enjoy! "},{"title":"REST API Filtering, Sorting and Pagination","type":0,"sectionRef":"#","url":"/blog/rest-api-filtering-sorting-pagination","content":"api-guidelines/Guidelines.md at vNext · microsoft/api-guidelines · GitHub REST API Design: Filtering, Sorting, and Pagination | Moesif Blog How we write our query filter engine on our REST API (part 1) | by Adam Ben Aharon | Melio’s R&amp;D blog | Medium","keywords":"rest api filtering  sorting and pagination"},{"title":"Resumable Upload","type":0,"sectionRef":"#","url":"/blog/resumable-upload","content":"","keywords":"file upload resumable"},{"title":"A Basic Resumable Upload​","type":1,"pageTitle":"Resumable Upload","url":"/blog/resumable-upload#a-basic-resumable-upload","content":"code-snippets/app_resumable_upload.py loading... See full example on GitHub "},{"title":"TUS Resumable Upload​","type":1,"pageTitle":"Resumable Upload","url":"/blog/resumable-upload#tus-resumable-upload","content":"FastAPI implementing tus v1.0.0 server in Python code-snippets/app_tusd.py loading... See full example on GitHub Implementations | tus.io Resumable file upload GitHub - tus/tus-js-client: A pure JavaScript client for the tus resumable upload protocol GitHub - tus/tusd: Reference server implementation in Go of tus: the open protocol for resumable file uploads IO, StreamIO, FileIO high-level used by asyncio.io in socket/tcp/http Streams — Python 3.11.4 documentation starlette.Request.stream = http Request Body low-level: io — Core tools for working with streams — Python 3.11.4 documentation "},{"title":"RPC vs MQ","type":0,"sectionRef":"#","url":"/blog/rpc_vs_mq","content":"","keywords":""},{"title":"RPC​","type":1,"pageTitle":"RPC vs MQ","url":"/blog/rpc_vs_mq#rpc","content":""},{"title":"IPC​","type":1,"pageTitle":"RPC vs MQ","url":"/blog/rpc_vs_mq#ipc","content":"IPC: (local)Inter-Process Communication Using gRPC for (local) inter-process communication IPC Benchmark "},{"title":"MQ​","type":1,"pageTitle":"RPC vs MQ","url":"/blog/rpc_vs_mq#mq","content":""},{"title":"MDX Features of Docusaurus","type":0,"sectionRef":"#","url":"/blog/mdx-features","content":"","keywords":"mdx features in docusaurus"},{"title":"React Component​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#react-component","content":"Code as: docs/mdx-features.mdx export const Highlight = ({children, color}) =&gt; ( &lt;span style={{ backgroundColor: color, borderRadius: '2px', color: '#fff', padding: '0.2rem', }}&gt; {children} &lt;/span&gt; ); &lt;Highlight color=&quot;#25c2a0&quot;&gt;Docusaurus green&lt;/Highlight&gt; and &lt;Highlight color=&quot;#1877F2&quot;&gt;Facebook blue&lt;/Highlight&gt; are my favorite colors.  Render as: Docusaurus green and Facebook blue are my favorite colors.    Code as: src/components/Highlight import React from 'react'; export default function SharedHighlight({children, color}) { return ( &lt;span style={{ backgroundColor: color, borderRadius: '2px', color: '#fff', padding: '0.2rem', }}&gt; {children} &lt;/span&gt; ); }  With: docs/mdx-features.mdx import SharedHighlight from '@site/src/components/Highlight'; &lt;SharedHighlight color=&quot;#25c2a0&quot;&gt;Docusaurus green&lt;/SharedHighlight&gt; I can write **Markdown** alongside my _JSX_!  Render as: Docusaurus green I can write Markdown alongside my JSX! "},{"title":"Tabs​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#tabs","content":"Code as: docs/mdx-features.mdx import Tabs from '@theme/Tabs'; import TabItem from '@theme/TabItem'; &lt;Tabs&gt; &lt;TabItem value=&quot;apple&quot; label=&quot;Apple&quot; default&gt; This is an apple 🍎 &lt;/TabItem&gt; &lt;TabItem value=&quot;orange&quot; label=&quot;Orange&quot;&gt; This is an orange 🍊 &lt;/TabItem&gt; &lt;TabItem value=&quot;banana&quot; label=&quot;Banana&quot;&gt; This is a banana 🍌 &lt;/TabItem&gt; &lt;/Tabs&gt;  Render as: AppleOrangeBanana This is an apple 🍎 "},{"title":"NOTES​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#notes","content":"docs/mdx-features.mdx &lt;!-- Prettier doesn't change this --&gt; :::note Hello world :::  note Hello world &lt;!-- Prettier changes this --&gt; :::note Hello world :::  &lt;!-- to this --&gt; ::: note Hello world:::  docs/mdx-features.mdx :::note Your Title Some **content** with _Markdown_ `syntax`. :::  Your Title Some content with Markdown syntax. docs/mdx-features.mdx :::tip Use tabs in admonitions &lt;Tabs&gt; &lt;TabItem value=&quot;apple&quot; label=&quot;Apple&quot;&gt;This is an apple 🍎&lt;/TabItem&gt; &lt;TabItem value=&quot;orange&quot; label=&quot;Orange&quot;&gt;This is an orange 🍊&lt;/TabItem&gt; &lt;TabItem value=&quot;banana&quot; label=&quot;Banana&quot;&gt;This is a banana 🍌&lt;/TabItem&gt; &lt;/Tabs&gt; :::  Use tabs in admonitions AppleOrangeBanana This is an apple 🍎 "},{"title":"Math​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#math","content":"docs/mdx-features.mdx Let $f\\colon[a,b]\\to\\R$ be Riemann integrable. Let $F\\colon[a,b]\\to\\R$ be $F(x)=\\int_{a}^{x} f(t)\\,dt$. Then $F$ is continuous, and at all $x$ such that $f$ is continuous at $x$, $F$ is differentiable at $x$ with $F'(x)=f(x)$.  Let f ⁣:[a,b]→Rf\\colon[a,b]\\to\\Rf:[a,b]→R be Riemann integrable. Let F ⁣:[a,b]→RF\\colon[a,b]\\to\\RF:[a,b]→R beF(x)=∫axf(t) dtF(x)=\\int_{a}^{x} f(t)\\,dtF(x)=∫ax​f(t)dt. Then FFF is continuous, and at all xxx such thatfff is continuous at xxx, FFF is differentiable at xxx with F′(x)=f(x)F'(x)=f(x)F′(x)=f(x). docs/mdx-features.mdx $$ I = \\int_0^{2\\pi} \\sin(x)\\,dx $$  I=∫02πsin⁡(x) dxI = \\int_0^{2\\pi} \\sin(x)\\,dxI=∫02π​sin(x)dx "},{"title":"Diagrams​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#diagrams","content":"Example Mermaid diagram ```mermaid graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; ```  "},{"title":"Code Block​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#code-block","content":"```jsx title=&quot;/src/components/HelloCodeTitle.js&quot; function HelloCodeTitle(props) { return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;; } ```  /src/components/HelloCodeTitle.js function HelloCodeTitle(props) { return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;; }  ```js function HighlightSomeText(highlight) { if (highlight) { // highlight-next-line return 'This text is highlighted!'; } return 'Nothing highlighted'; } function HighlightMoreText(highlight) { // highlight-start if (highlight) { return 'This range is highlighted!'; } // highlight-end return 'Nothing highlighted'; } ```  function HighlightSomeText(highlight) { if (highlight) { return 'This text is highlighted!'; } return 'Nothing highlighted'; } function HighlightMoreText(highlight) { if (highlight) { return 'This range is highlighted!'; } return 'Nothing highlighted'; }  ```jsx {1,4-6,11} import React from 'react'; function MyComponent(props) { if (props.isBar) { return &lt;div&gt;Bar&lt;/div&gt;; } return &lt;div&gt;Foo&lt;/div&gt;; } export default MyComponent; ```  import React from 'react'; function MyComponent(props) { if (props.isBar) { return &lt;div&gt;Bar&lt;/div&gt;; } return &lt;div&gt;Foo&lt;/div&gt;; } export default MyComponent;  ```jsx {1,4-6,11} showLineNumbers import React from 'react'; function MyComponent(props) { if (props.isBar) { return &lt;div&gt;Bar&lt;/div&gt;; } return &lt;div&gt;Foo&lt;/div&gt;; } export default MyComponent; ```  import React from 'react'; function MyComponent(props) { if (props.isBar) { return &lt;div&gt;Bar&lt;/div&gt;; } return &lt;div&gt;Foo&lt;/div&gt;; } export default MyComponent;  JavaScriptPythonJava function helloWorld() { console.log('Hello, world!'); }  "},{"title":"Importing Code​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#importing-code","content":"npm install --save raw-loader  docs/mdx-features.mdx import CodeBlock from '@theme/CodeBlock'; import MyComponentSource from '!!raw-loader!./myComponent'; &lt;CodeBlock language=&quot;jsx&quot;&gt;{MyComponentSource}&lt;/CodeBlock&gt;  /** * Copyright (c) Facebook, Inc. and its affiliates. * * This source code is licensed under the MIT license found in the * LICENSE file in the root directory of this source tree. */ import React, { useState } from 'react'; export default function MyComponent() { const [bool, setBool] = useState(false); return ( &lt;div&gt; &lt;p&gt;MyComponent rendered !&lt;/p&gt; &lt;p&gt;bool={bool ? 'true' : 'false'}&lt;/p&gt; &lt;p&gt; &lt;button onClick={() =&gt; setBool((b) =&gt; !b)}&gt;toggle bool&lt;/button&gt; &lt;/p&gt; &lt;/div&gt; ); }  "},{"title":"Importing Markdown​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#importing-markdown","content":"docs/mdx-features.mdx import PartialExample from './_markdown-partial-example.mdx'; &lt;PartialExample name=&quot;Sebastien&quot; /&gt;  Hello Sebastien This is text some content from _markdown-partial-example.mdx. docs/mdx-features.mdx import PartialExample1 from './skia.md'; &lt;PartialExample1 /&gt;  It imports file from skia.md: What the difference between SkImage/SkPicture/SkCanvas/SkSurface? SkBitmap based SkCanvas very slow... How to improve draw speeds? How to move SkImage from CPU to GPU? How to control the SkImage GPU back cache size? As far as I understand when I load SkImage from file or SkBitmap the SkImage lives in CPU side memory. Then the moment I draw this SkImage on a GPU backed canvas it will make a copy of the CPU data into a GPU backed texture. So now we technically have two copies available on the SkImage. Then each time I draw that SkImage it will do it quickly cause it's already in the GPU side. "},{"title":"Import Code Snippets from GitHub Repositories​","type":1,"pageTitle":"MDX Features of Docusaurus","url":"/blog/mdx-features#import-code-snippets-from-github-repositories","content":"A Docusaurus v2 plugin that supports referencing code examples from public GitHub repositories. src/theme/ReferenceCodeBlock/index.tsx loading... See full example on GitHub code-snippets/XKeyIn.cpp loading... See full example on GitHub "},{"title":"Serialization","type":0,"sectionRef":"#","url":"/blog/serialization","content":"","keywords":"MessagePack msgpack json serialization Protocol Buffers Protobuf"},{"title":"Json​","type":1,"pageTitle":"Serialization","url":"/blog/serialization#json","content":""},{"title":"MessagePack​","type":1,"pageTitle":"Serialization","url":"/blog/serialization#messagepack","content":"msgpack GitHub "},{"title":"Protocol Buffers​","type":1,"pageTitle":"Serialization","url":"/blog/serialization#protocol-buffers","content":"Protocol Buffers "},{"title":"Supported Features​","type":1,"pageTitle":"Serialization","url":"/blog/serialization#supported-features","content":"Protocol\tDiscriminator Property &amp; PolymorphismJson\t✔️ MessagePack\t✔️ Protobuf\t✖️ "},{"title":"Skia","type":0,"sectionRef":"#","url":"/blog/skia","content":"What the difference between SkImage/SkPicture/SkCanvas/SkSurface? SkBitmap based SkCanvas very slow... How to improve draw speeds? How to move SkImage from CPU to GPU? How to control the SkImage GPU back cache size? As far as I understand when I load SkImage from file or SkBitmap the SkImage lives in CPU side memory. Then the moment I draw this SkImage on a GPU backed canvas it will make a copy of the CPU data into a GPU backed texture. So now we technically have two copies available on the SkImage. Then each time I draw that SkImage it will do it quickly cause it's already in the GPU side.","keywords":""},{"title":"VPN","type":0,"sectionRef":"#","url":"/blog/vpn","content":"","keywords":"vpn"},{"title":"Routers Support for VPN(OpenVPN) Client​","type":1,"pageTitle":"VPN","url":"/blog/vpn#routers-support-for-vpnopenvpn-client","content":"How to set up a router with Surfshark? – Surfshark Customer Support Routers Supporting VPN Client - Home Network Community "},{"title":"Kill Switch​","type":1,"pageTitle":"VPN","url":"/blog/vpn#kill-switch","content":"KillSwitch could be used to block outgoing traffic when the VPN connection drops and crashes. "},{"title":"PF(packet filter) MacOS​","type":1,"pageTitle":"VPN","url":"/blog/vpn#pfpacket-filter-macos","content":"Setting up correctly Packet Filter (pf) firewall on any macOS Prevent outgoing traffic unless OpenVPN connection is active using pf.conf on Mac OS X Quick and easy pf (packet filter) firewall rules on macOS A Cheat Sheet For Using pf in OS X Lion and Up OS X PF Manual "},{"title":"Set Up Firewall to Allow Access Only via VPN(KillSwitch)​","type":1,"pageTitle":"VPN","url":"/blog/vpn#set-up-firewall-to-allow-access-only-via-vpnkillswitch","content":"ENABLING VPN-ONLY ACCESS TO THE INTERNET WITH WINDOWS FIREWALL KillSwitch for macOS Prevent outgoing traffic unless OpenVPN connection is active using pf.conf on Mac OS X "},{"title":"WiFi AutoSwitch Windows","type":0,"sectionRef":"#","url":"/blog/wifi-autoswitch-windows","content":"If autoSwitch is turned on, it allows Windows to continue looking for other auto-connected wireless networks while connected to the current wireless network. If a higher priority auto-connected wireless network than the currently connected wireless network comes in range, Windows will automatically connect to it instead. It also needs to work along with priority setting. For example: There're 3 networks of profile name: TP-Link-1, TP-Link-2 and TP-Link-3. PC(windows) will try to connect TP-Link-3 if it's in range when it's already connected to TP-Link-1 or TP-Link-2. Setup autoswitch: netsh wlan set profileparameter name=&quot;TP-Link-1&quot; autoswitch=Yes netsh wlan set profileparameter name=&quot;TP-Link-2&quot; autoswitch=Yes netsh wlan set profileparameter name=&quot;TP-Link-3&quot; autoswitch=No Setup priority: netsh wlan set profileorder name=&quot;TP-Link-1&quot; interface=&quot;Wi-Fi&quot; priority=3 netsh wlan set profileorder name=&quot;TP-Link-2&quot; interface=&quot;Wi-Fi&quot; priority=2 netsh wlan set profileorder name=&quot;TP-Link-3&quot; interface=&quot;Wi-Fi&quot; priority=1 other tools: List profile name: netsh wlan show profiles List connected WiFi: netsh wlan show interfaces Enable Auto Switch for Wireless Network Connection in Windows 10 Change WiFi network priority in Windows 10","keywords":"autoswitch wifi windows"},{"title":"WPF","type":0,"sectionRef":"#","url":"/blog/wpf","content":"","keywords":""},{"title":"MVVM​","type":1,"pageTitle":"WPF","url":"/blog/wpf#mvvm","content":"MVVM Pattern Made Simple - CodeProject MVVM in Depth - CodeProject My attempt to understand MVVM pattern and questions raised during it : csharp Patterns - WPF Apps With The Model-View-ViewModel Design Pattern | Microsoft Docs Introduction to the MVVM Toolkit - Windows Community Toolkit | Microsoft Docs "},{"title":"Features​","type":1,"pageTitle":"WPF","url":"/blog/wpf#features","content":"IoC, Inversion of Control DI, Dependency Injection Navigation ViewModel-to-ViewModel Communication MVVM Light MessengerEvent Aggregator | PrismReactiveUI - Message Bus Observable Object in ViewModel Wrapping a non-observable model // https://docs.microsoft.com/en-us/windows/communitytoolkit/mvvm/observableobject#wrapping-a-non-observable-model public class ObservableUser : ObservableObject { private readonly User user; public ObservableUser(User user) =&gt; this.user = user; public string Name { get =&gt; user.Name; set =&gt; SetProperty(user.Name, value, user, (u, n) =&gt; u.Name = n); } }  "},{"title":"Principles​","type":1,"pageTitle":"WPF","url":"/blog/wpf#principles","content":" View-to-ViewModel one-to-one/many-to-one mappingViewModel-to-ViewModel communicationViewModel-to-Model one-to-one/one-to-many binding "},{"title":"Access Database​","type":1,"pageTitle":"WPF","url":"/blog/wpf#access-database","content":"DAO or Repository Entity DB Context "},{"title":"ReactiveUI​","type":1,"pageTitle":"WPF","url":"/blog/wpf#reactiveui","content":"To property - pasoft-share/ReactiveUI One of the core features of ReactiveUI is to be able to convert properties to Observables, via WhenAny , and to convert Observables into Properties, via a method called ToProperty . These properties are called Output Properties in ReactiveUI, and they are a huge part of using the framework effectively. "},{"title":"Monday, July 3, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/03","content":"As a backend engineer, there are several core skills that are important for success in the field. These skills include: Programming languages: Proficiency in one or more programming languages is crucial for backend development. Common languages for backend engineering include Python, Java, C#, Ruby, and JavaScript (Node.js). It's important to have a strong understanding of data structures, algorithms, and object-oriented programming concepts. Web frameworks: Familiarity with backend web frameworks is essential. Depending on the language you work with, you should be proficient in frameworks such as Django (Python), Spring (Java), ASP.NET (C#), Ruby on Rails (Ruby), or Express.js (Node.js). These frameworks provide tools and libraries for building robust web applications and services. Databases and query languages: Backend engineers often work with databases to store and retrieve data. Understanding relational databases like MySQL, PostgreSQL, or Oracle, as well as NoSQL databases like MongoDB or Redis, is valuable. Additionally, knowledge of SQL (Structured Query Language) for database querying is important. API development and integration: Backend engineers frequently design and build APIs (Application Programming Interfaces) to enable communication between different systems and services. You should have experience in designing and implementing RESTful APIs and be familiar with tools like Swagger or OpenAPI. Server management and deployment: Understanding server management and deployment processes is essential. Familiarity with cloud platforms like AWS (Amazon Web Services), Azure, or Google Cloud, as well as containerization technologies like Docker and orchestration tools like Kubernetes, is valuable. Security and scalability: Backend engineers need to have a strong understanding of security principles to develop secure applications. Knowledge of authentication and authorization mechanisms, data encryption, and handling user input securely is important. Additionally, understanding scalability concepts and techniques for handling high traffic and load balancing can be beneficial. Testing and debugging: Proficiency in testing and debugging is crucial to ensure the reliability and stability of backend systems. Knowledge of unit testing frameworks, integration testing, and debugging tools is important to identify and fix issues efficiently. Version control systems: Proficiency in version control systems like Git is essential for collaboration and managing code repositories. Understanding branching, merging, and pull requests is important to work effectively in a team. Continuous Integration and Continuous Deployment (CI/CD): Familiarity with CI/CD practices and tools like Jenkins, Travis CI, or CircleCI is valuable. Knowledge of automated testing, build pipelines, and deployment workflows is important to streamline development processes. Problem-solving and analytical thinking: Backend engineers often face complex problems that require analytical thinking and problem-solving skills. The ability to analyze requirements, break down problems into manageable tasks, and devise efficient solutions is highly valuable. Remember, the specific skills required may vary depending on the organization, industry, and technology stack being used. It's important to stay updated with emerging technologies and trends in backend development to remain competitive in the job market. Why Google Search Journey? Google Search Journey groups pages from your search histories by topic or intent, providing a more helpful user experience than just showing a chronological list of pages. Search can, at times, become a rabbit hole. A user may start out looking to book a trip but then get distracted by work or life- or doing several related searches for things they'll need for that trip - and totally forget to book the actual trip. Practice programming skills leetcodecodewars","keywords":""},{"title":"Tuesday, July 4, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/04","content":"Resumable upload app_resumable_uploadapp_resumable_upload Implementations | tus.io Resumable file upload GitHub - tus/tus-js-client: A pure JavaScript client for the tus resumable upload protocol GitHub - tus/tusd: Reference server implementation in Go of tus: the open protocol for resumable file uploads IO, StreamIO, FileIO high-level used by asyncio.io in socket/tcp/http: Streams — Python 3.11.4 documentation starlette.Request.stream = http Request Body low-level: io — Core tools for working with streams — Python 3.11.4 documentation","keywords":""},{"title":"Thursday, July 14, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/14","content":"Best practice: Update markdown metadata such as datetime when saving filesIntroduction | Front Matter Docusaurus refer code snippets from GitHub repositoriesGitHub - saucelabs/docusaurus-theme-github-codeblock: A Docusaurus v2 plugin that supports referencing code examples from public GitHub repositories. src/theme/ReferenceCodeBlock/index.tsx loading... See full example on GitHub code-snippets/XKeyIn.cpp loading... See full example on GitHub Test-Driven Development mindset involving CI, CD, documentation, iterative deliveries Create a local volume to bind a specific local folder, only available in Linux below. docker volume create --opt type=none --opt o=bind --opt device=/data/volumes/testvol testvol ➜ ~ docker inspect testvol [ { &quot;CreatedAt&quot;: &quot;2023-07-13T04:36:16Z&quot;, &quot;Driver&quot;: &quot;local&quot;, &quot;Labels&quot;: {}, &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/testvol/_data&quot;, &quot;Name&quot;: &quot;testvol&quot;, &quot;Options&quot;: { &quot;device&quot;: &quot;/data/volumes/testvol&quot;, &quot;o&quot;: &quot;bind&quot;, &quot;type&quot;: &quot;none&quot; }, &quot;Scope&quot;: &quot;local&quot; } In default, the created volume will just sit on /var/lib/docker/volumes docker volume create defaultvol ➜ ~ docker volume inspect defaultvol [ { &quot;CreatedAt&quot;: &quot;2023-07-13T04:51:57Z&quot;, &quot;Driver&quot;: &quot;local&quot;, &quot;Labels&quot;: null, &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/defaultvol/_data&quot;, &quot;Name&quot;: &quot;defaultvol&quot;, &quot;Options&quot;: null, &quot;Scope&quot;: &quot;local&quot; } Proxies Server: Traefik vs NGINIX Proxies have become an essential networking component and are frequently used with many popular internet services. Proxy servers facilitate requests and responses between end-users and web servers, providing helpful features that augment routing control, privacy, and security. NGINX and Traefik are the most popular tools currently offering proxy functionality. Both solutions can support traditional server-based deployments and containerized application environments, such as Kubernetes. This article will examine both tools in-depth and cover their pros, cons, and distinguishing features. Traefik vs NGINX: Use Case Comparison","keywords":""},{"title":"Sunday, July 16, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/16","content":"Admission program requirements | University of Ottawa Faculty of Graduate Studies | University of Calgary Graduate Programs - University of Alberta Temporary Foreign Workers - Job Bank 20 Common Resume Buzzwords (and What to Use Instead)","keywords":""},{"title":"Thursday, July 20, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/20","content":" HapiJS Hapi.js — Project Structure and Best Practices (Part 2) Optimizing HapiJS for Benchmarks. In the past year or so, our team… | by Joel Chen | Walmart Global Tech Blog | Medium The confused saying in Microservices: &quot;each service should own its own database and no two services should share a database&quot; No golden rule, no fast rules, no best practices suitable for all businesses, only tradeoff Q: Need separate database per service? A: Creating a separate database for each service helps to enforce domain boundaries. The Hardest Part About Microservices: Your Data – Software Blog Nodejs development practices Set default configs: author name, author email, author url, the license, and the version. npm set init.author.name &quot;Your name&quot; npm set init.author.email &quot;your@email.com&quot; npm set init.author.url &quot;https://your-url.com&quot; npm set init.license &quot;MIT&quot; npm set init.version &quot;1.0.0&quot; function node-project { git init npx license $(npm get init.license) -o &quot;$(npm get init.author.name)&quot; &gt; LICENSE npx gitignore node npx covgen &quot;$(npm get init.author.email)&quot; npm init -y git add -A git commit -m &quot;Initial commit&quot; } Setting up efficient workflows with ESLint, Prettier and TypeScript in vscode. Setting up efficient workflows with ESLint, Prettier and TypeScript - JavaScript inDepth","keywords":""},{"title":"Wednesday, July 19, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/19","content":" I still prefer os.path over Pathlib, as follows Consistency, I'm used to use path string as an argument between functions and I think Pathlib is not flexible enough to handle argumentsPure and Function, Although Pathlib brings many useful features like glob, stem, and so on. I still like the concept of simplicity that don't put all things together! Trim $ for clipboard copy in Docusaurus in code block bash. Ignore $ for clipboard copy · Issue #1745 · facebook/docusaurus · GitHub Some common issues I often hit when using git Configure username/password for different repos or remotes Global configuration git config --global --list git config --local --list GIT two popular authentication methods: ssh key How to Authenticate Your Git to GitHub with SSH Keys git credentials Store username/password instead of ssh for multiple remotes To enable git credentials # local git config credential.helper store # global git config --global credential.helper store Each credential is stored in ~/.git-credentials file on its own line as a URL like: https://&lt;USERNAME&gt;:&lt;PASSWORD&gt;@github.com Configure credentials, # Global git config --global credential.https://github.com.username &lt;your_username&gt; # Or git config --local user.name &lt;your_username&gt; git config --local user.email &lt;your_useremail&gt; # Then git pull or git push to let it cache your username/password after it prompt you to input password in the first time Alternatively, we can directly edit our global Git config file ~/.gitconfig, [credential &quot;https://github.com&quot;] username = &lt;username&gt; Git - Config Username &amp; Password - Store Credentials - ShellHacks Configuring Git Credentials Programming Algorithms Top Algorithms Every Programmer Should Know What is Algorithm | Introduction to Algorithms - GeeksforGeeks","keywords":""},{"title":"Friday, July 21, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/21","content":" Mysql, redis, or other db connections pool vs as single connection in Nodejs Since Node.js and Redis are both effectively single threaded there is no need to use multiple client instances or any pooling mechanism save for a few exceptions;","keywords":""},{"title":"Tuesday, July 25, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/25","content":" Authentication and Authorization in Microservices Authentication in microservices involves two main occasions: authentication required when end users communicate with services.authentication happens between internal services.authentication needed when external services enter internal services. OAuth 2.0 provides the industry-standard protocol for authorizing users in distributed systems. The OAuth framework reduces the burden on developers, eliminating duplications to build their own authentication mechanism in each microservice. Authentication &amp; Authorization in Microservices Architecture - Part I https://softwareengineering.stackexchange.com/questions/366815/microservice-architecture-using-auth-server-as-a-user-resource-server https://auth0.com/docs/get-started User registration flow in microservice Communication between microservices Share user data between micro services User service and Comment service populate user data into Comment service, save user data in comment service, update user data in comment service https://stackoverflow.com/questions/67543408/microservices-storing-user-data-in-separate-database Ideally, the client communicates with the each service directly, and no interaction between the services! However, there is the need for communication between these services. For example, o what happens if a user deletes his account? What if you delete a TV show? You probably want to trigger some events that will update the data in your comment microservice. In the long run you want to keep everything &quot;eventually consistent&quot;. The event-driven architecture comes up! Data retrieved from two or more services For example, you send a request from UI saying &quot;give me comments with usernames&quot;, GraphQL interface then first issues a request to comments service, then to user service and finally sends one response with combined data NOTE: issue a number of requests to various micro-services to collect all the data and return it in only 1 response Rest needs to send many. https://softwareengineering.stackexchange.com/questions/418153/design-a-correct-microservices-architecture-with-data-relations Event-Driven Data Management for Microservices - NGINX","keywords":""},{"title":"Wednesday, July 26, 2023","type":0,"sectionRef":"#","url":"/journal/2023/07/26","content":"postgres + node + data model(typescript) Build a Data Access Layer with PostgreSQL and Node.js | AppSignal Blog","keywords":""},{"title":"Friday, August 4, 2023","type":0,"sectionRef":"#","url":"/journal/2023/08/04","content":" Authentication and Authorization in Microservices Authentication and Authorization in each serviceAuthentication in a centralized service, and Authorization in each serviceAuthentication and Authorization in a centralized service Auth Service and User (Profile) Service Never write a UserService again. Or when to use external Microservices Microservices Authentication Best Strategy | Aspecto Authentication and Authorization Concepts for MicroServices · GitHub design - Microservice Architecture - using Auth Server as a User Resource server How to Run Your Own Decentralized Authentication Service Using AuthN","keywords":""}]