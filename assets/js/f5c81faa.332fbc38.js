"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2879],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var r=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(a),b=l,d=m["".concat(p,".").concat(b)]||m[b]||c[b]||n;return a?r.createElement(d,o(o({ref:t},u),{},{components:a})):r.createElement(d,o({ref:t},u))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,o=new Array(n);o[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<n;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},993:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>s});var r=a(7462),l=(a(7294),a(3905));const n={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/resumable-upload.md"},authors:["frank"],tags:["fastapi","backend","protocol","tus"],description:"Resumable Upload",keywords:["file upload","resumable"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-07-07T00:00:00.000Z"),draft:!1,enableComments:!0},o="Resumable Upload",i={permalink:"/blog/resumable-upload",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/resumable-upload.md",source:"@site/../../blog/resumable-upload.md",title:"Resumable Upload",description:"Resumable Upload",date:"2023-07-07T00:00:00.000Z",formattedDate:"July 7, 2023",tags:[{label:"fastapi",permalink:"/blog/tags/fastapi"},{label:"backend",permalink:"/blog/tags/backend"},{label:"protocol",permalink:"/blog/tags/protocol"},{label:"tus",permalink:"/blog/tags/tus"}],readingTime:.705,hasTruncateMarker:!1,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/resumable-upload.md"},authors:["frank"],tags:["fastapi","backend","protocol","tus"],description:"Resumable Upload",keywords:["file upload","resumable"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-07-07T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"WPF",permalink:"/blog/wpf"},nextItem:{title:"Learn FFmpeg",permalink:"/blog/learn-ffmpeg"}},p={authorsImageUrls:[void 0]},s=[{value:"A Basic Resumable Upload",id:"a-basic-resumable-upload",level:2},{value:"TUS Resumable Upload",id:"tus-resumable-upload",level:2}],u={toc:s},m="wrapper";function c(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"To implement a resumable file upload, it is necessary to contain three parts:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Protocol: provide a mechanism for resumable file uploads"),(0,l.kt)("li",{parentName:"ul"},"Upload Server: receive an interrupted upload and store it in local machine or in cloud storage"),(0,l.kt)("li",{parentName:"ul"},"Upload Client: upload the file which may be interrupted ")),(0,l.kt)("h2",{id:"a-basic-resumable-upload"},"A Basic Resumable Upload"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/liviaerxin/liviaerxin.github.io/blob/master/code-snippets/app_resumable_upload.py\n")),(0,l.kt)("h2",{id:"tus-resumable-upload"},"TUS Resumable Upload"),(0,l.kt)("p",null,"FastAPI implementing tus v1.0.0 server in Python"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:"reference",reference:!0},"https://github.com/liviaerxin/liviaerxin.github.io/blob/master/code-snippets/app_tusd.py\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://tus.io/implementations"},"Implementations | tus.io")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://javascript.info/resume-upload"},"Resumable file upload")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tus/tus-js-client"},"GitHub - tus/tus-js-client: A pure JavaScript client for the tus resumable upload protocol")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tus/tusd"},"GitHub - tus/tusd: Reference server implementation in Go of tus: the open protocol for resumable file uploads")),(0,l.kt)("p",null,"IO, StreamIO, FileIO"),(0,l.kt)("p",null,"high-level used by asyncio.io in socket/tcp/http"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/asyncio-stream.html#streamreader"},"Streams \u2014 Python 3.11.4 documentation")),(0,l.kt)("p",null,"starlette.Request.stream = http Request Body"),(0,l.kt)("p",null,"low-level:",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/io.html#io.RawIOBase"},"io \u2014 Core tools for working with streams \u2014 Python 3.11.4 documentation")))}c.isMDXComponent=!0}}]);