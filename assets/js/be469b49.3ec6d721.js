"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8493],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,b=m["".concat(c,".").concat(d)]||m[d]||p[d]||l;return n?a.createElement(b,i(i({ref:t},u),{},{components:n})):a.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8279:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={title:"Build System C/C++",description:"",created:new Date("2023-05-22T00:00:00.000Z"),tags:["Make","Ninja","MSBuild","CMake","Meson"]},i="C/C++ Build System",o={permalink:"/blog/build-system-c++",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/../../blog/build-system-c++.md",source:"@site/../../blog/build-system-c++.md",title:"Build System C/C++",description:"",date:"2023-06-06T13:36:16.000Z",formattedDate:"June 6, 2023",tags:[{label:"Make",permalink:"/blog/tags/make"},{label:"Ninja",permalink:"/blog/tags/ninja"},{label:"MSBuild",permalink:"/blog/tags/ms-build"},{label:"CMake",permalink:"/blog/tags/c-make"},{label:"Meson",permalink:"/blog/tags/meson"}],readingTime:.68,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Build System C/C++",description:"",created:"2023-05-22T00:00:00.000Z",tags:["Make","Ninja","MSBuild","CMake","Meson"]},nextItem:{title:"Data Center",permalink:"/blog/data-center"}},c={authorsImageUrls:[]},s=[{value:"Build System",id:"build-system",level:2},{value:"Build System Generator",id:"build-system-generator",level:2},{value:"CI",id:"ci",level:2}],u={toc:s},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_build_automation_software"},"List of build automation software - Wikipedia")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plantuml"},'@startuml\nskinparam nodesep 50\nskinparam ranksep 100\n\n!include <material/common>\n!include <material/code_braces>\n!include <material/code_array>\n!include <material/code_brackets>\n!include <material/code_parentheses>\n!include <material/code_tags>\n\ntogether {\nfolder "Project" as source <<Source Code>> {\n    file sourcefile[\n        *.cpp\n        *.c\n        *.h\n        <$ma_code_braces>\n    ]\n}\n\ncomponent "CMake" as cmake {\n    file cmakefiles[\n        CMakefiles.txt\n        <$ma_code_braces>\n    ]\n}\n}\n\ncomponent "Make" as make {\n    file makefile[\n        Makefile\n        <$ma_code_braces>\n    ]\n}\n\ncomponent "MSBuild" as msbuild {\n    file msbuildfile[\n        .vcproj\n        <$ma_code_braces>\n    ]\n}\n\npackage "Windows Application" as wa <<.exe>> <<*.DLL>> {\n}\n\npackage "Unix Application" as ua <<.>> <<*.so>> {\n}\n\n\n\ncmake --\x3e make: Generator: Make\ncmake --\x3e msbuild : Generator: Visual Studio 2022\n\nsource --\x3e wa\nmsbuild --\x3e wa\n\nsource --\x3e ua\nmake --\x3e ua\n')),(0,r.kt)("h2",{id:"build-system"},"Build System"),(0,r.kt)("p",null,"Make"),(0,r.kt)("p",null,"Ninja"),(0,r.kt)("p",null,"MSBuild"),(0,r.kt)("h2",{id:"build-system-generator"},"Build System Generator"),(0,r.kt)("p",null,"CMake"),(0,r.kt)("p",null,"Meson"),(0,r.kt)("h2",{id:"ci"},"CI"))}p.isMDXComponent=!0}}]);