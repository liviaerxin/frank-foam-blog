"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5161],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,y=u["".concat(s,".").concat(d)]||u[d]||h[d]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},45884:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={authors:["frank"],tags:["Python","Unicode"],description:"Python Unicode",keywords:["Python Unicode"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-12-13T00:00:00.000Z"),draft:!1,enableComments:!0},a="Python Unicode",c={permalink:"/blog/python-unicode",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/python-unicode.mdx",source:"@site/../../blog/python-unicode.mdx",title:"Python Unicode",description:"Python Unicode",date:"2023-12-13T00:00:00.000Z",formattedDate:"December 13, 2023",tags:[{label:"Python",permalink:"/blog/tags/python"},{label:"Unicode",permalink:"/blog/tags/unicode"}],readingTime:1.32,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{authors:["frank"],tags:["Python","Unicode"],description:"Python Unicode",keywords:["Python Unicode"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-12-13T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Wiki VPN",permalink:"/blog/wiki-vpn"},nextItem:{title:"Wiki Cryptography",permalink:"/blog/wiki-cryptography"}},s={authorsImageUrls:[void 0]},l=[{value:"Why Python doesn&#39;t use UTF-8 encoding variable-length bytes in memory?",id:"why-python-doesnt-use-utf-8-encoding-variable-length-bytes-in-memory",level:2},{value:"Inspect the internal in a string in Python 3",id:"inspect-the-internal-in-a-string-in-python-3",level:2},{value:"Resources",id:"resources",level:2}],p={toc:l},u="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Python string use ",(0,o.kt)("inlineCode",{parentName:"p"},"unicodeobject")," which is implemented in ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," in CPython:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/python/cpython/blob/main/Objects/unicodeobject.c"},"unicodeobject.c")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/python/cpython/blob/main/Include/cpython/unicodeobject.h"},"unicodeobject.h"))),(0,o.kt)("p",null,"Python chooses one of these three kinds of data type to internally represent for a Unicode-characters string, so every Unicode character of the string has the same fixed-length: 1, 2 or 4,"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"UCS-1(1 byte), for ASCII characters"),(0,o.kt)("li",{parentName:"ul"},"UCS-2(2 bytes), for Unicode characters between 0 and xxx"),(0,o.kt)("li",{parentName:"ul"},"UCS-4(4 bytes), for Unicode characters between 0 and xxx")),(0,o.kt)("h2",{id:"why-python-doesnt-use-utf-8-encoding-variable-length-bytes-in-memory"},"Why Python doesn't use UTF-8 encoding variable-length bytes in memory?"),(0,o.kt)("p",null,"A brief ",(0,o.kt)("inlineCode",{parentName:"p"},"PyUnicodeObject")," struct from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/python/cpython/blob/3aea6c4823e90172c9bc36cd20dc51b295d8a3c4/Include/cpython/unicodeobject.h#L53"},"unicodeobject.h"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c",metastring:'title="cpython/Include/cpython/unicodeobject.h"',title:'"cpython/Include/cpython/unicodeobject.h"'},"/* --- Unicode Type ------------------------------------------------------- */\ntypedef struct {\n    Py_ssize_t ob_refcnt;\n    PyTypeObject *ob_type;\n    Py_ssize_t length; \n    Py_hash_t hash;\n    struct {\n        unsigned int interned:2;\n        unsigned int kind:3;        /* 1: Py_UCS1, 2: Py_UCS2, 4: Py_UCS4 */\n        unsigned int compact:1;\n        unsigned int ascii:1;\n        unsigned int statically_allocated:1;\n        unsigned int :24;\n    } state;\n} PyASCIIObject;\n\ntypedef struct {\n    PyASCIIObject _base;\n    Py_ssize_t utf8_length;     /* Number of bytes in utf8, excluding the * terminating \\0. */\n    char *utf8;                 /* UTF-8 representation (null-terminated) */\n} PyCompactUnicodeObject;\n\ntypedef struct {\n    PyCompactUnicodeObject _base;\n    union {\n        void *any;\n        Py_UCS1 *latin1;\n        Py_UCS2 *ucs2;\n        Py_UCS4 *ucs4;\n    } data;\n} PyUnicodeObject;\n")),(0,o.kt)("h2",{id:"inspect-the-internal-in-a-string-in-python-3"},"Inspect the internal in a string in Python 3"),(0,o.kt)("p",null,":::NOTE\nYou keep the character being referred otherwise the ",(0,o.kt)("inlineCode",{parentName:"p"},"GC")," may release that memory,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'>>> i=id("\ud83e\udd28")\n### the address may be released as "\ud83e\udd28" is not referred. \n>>> PyUnicodeObject.from_address(i).kind\n1\n')),(0,o.kt)("p",null,":::"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'>>> c="\ud83e\udd28"\n>>> u=PyUnicodeObject.from_address(id(c))\n>>> u.kind\n4\n>>> u.ascii\n0\n>>> u.ob_refcnt\n1\n>>> u.utf8_length\n140505899971928\n>>> u.statically_allocated\n1\n>>> u.length\n1\n>>> u.compact\n1\n')),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://rushter.com/blog/python-strings-and-memory/"},"https://rushter.com/blog/python-strings-and-memory/")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://tenthousandmeters.com/blog/python-behind-the-scenes-9-how-python-strings-work/"},"https://tenthousandmeters.com/blog/python-behind-the-scenes-9-how-python-strings-work/")))}h.isMDXComponent=!0}}]);