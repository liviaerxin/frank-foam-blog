"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=r,f=d["".concat(i,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},66603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={tags:["network","network/diagnosis","netstat","route","traceroute"]},l="Network Diagnosis",s={permalink:"/blog/network-diagnosis",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/network-diagnosis.md",source:"@site/../../blog/network-diagnosis.md",title:"Network Diagnosis",description:"Understanding Routing Table Entry | Baeldung on Computer Science",date:"2023-12-19T08:35:40.000Z",formattedDate:"December 19, 2023",tags:[{label:"network",permalink:"/blog/tags/network"},{label:"network/diagnosis",permalink:"/blog/tags/network-diagnosis"},{label:"netstat",permalink:"/blog/tags/netstat"},{label:"route",permalink:"/blog/tags/route"},{label:"traceroute",permalink:"/blog/tags/traceroute"}],readingTime:3.18,hasTruncateMarker:!1,authors:[],frontMatter:{tags:["network","network/diagnosis","netstat","route","traceroute"]},prevItem:{title:"Your markdown including PlantUML code block",permalink:"/blog/markdown-plantuml"},nextItem:{title:"OpenCV tips",permalink:"/blog/opencv-tips"}},i={authorsImageUrls:[]},c=[{value:"Show IP Address",id:"show-ip-address",level:2},{value:"Show Routing Table",id:"show-routing-table",level:2},{value:"Find Gateway Used for Routing",id:"find-gateway-used-for-routing",level:2},{value:"Show Routes across Network",id:"show-routes-across-network",level:2},{value:"Ping Through Specific Interface",id:"ping-through-specific-interface",level:2},{value:"Find Out Address Used by Which Process",id:"find-out-address-used-by-which-process",level:2},{value:"Add a Route",id:"add-a-route",level:2},{value:"FireWall Rule",id:"firewall-rule",level:2},{value:"Get Geolocation of IP Address",id:"get-geolocation-of-ip-address",level:2},{value:"Packet Analyzer",id:"packet-analyzer",level:2},{value:"USB Virtual Ethernet",id:"usb-virtual-ethernet",level:2},{value:"Access WSL 2 from local area network(LAN)",id:"access-wsl-2-from-local-area-networklan",level:2},{value:"Find WSL 2 IP address that can be reached from Windows host",id:"find-wsl-2-ip-address-that-can-be-reached-from-windows-host",level:3},{value:"Add proxy",id:"add-proxy",level:3},{value:"Optional Add firewall rule",id:"optional-add-firewall-rule",level:3},{value:"Check current proxy",id:"check-current-proxy",level:3},{value:"Clean up",id:"clean-up",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.baeldung.com/cs/routing-table-entry"},"Understanding Routing Table Entry | Baeldung on Computer Science")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"the packs go through the gateway of interface. the same interface can have multiple gateways and different interfaces can have the same gateway.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://forums.developer.nvidia.com/t/ssh-enabled-only-if-connected-through-microusb/192708/12"},"route diagnosis")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.tecmint.com/find-out-which-process-listening-on-a-particular-port/"},"3 Ways to Find Which Linux Process Listening on a Port")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/cd/E18752_01/html/816-4554/ipconfig-142.html"},"Monitoring Network Status With the netstat Command - System Administration Guide: IP Services")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"System Administration Guide")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.xmodulo.com/geographic-location-ip-address-command-line.html"},"How to look up the geographic location of an IP address from the command line")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"#geolocation-of-ip")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://danielmiessler.com/study/tcpdump/"},"A tcpdump Tutorial with Examples \u2014 50 Ways to Isolate Traffic - Daniel Miesslersearchmailmailmail")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://resource.nvidia.com/cheatsheets/linux-networking-cheatsheet-tcpdump"},"TCPDump cheatsheet")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://opensource.com/article/18/10/introduction-tcpdump"},"An introduction to using tcpdump at the Linux command line | Opensource.com")),(0,r.kt)("p",null,"Knowing ",(0,r.kt)("inlineCode",{parentName:"p"},"simultaneously")," these three things for failing and working circumstances would be quite useful."),(0,r.kt)("h2",{id:"show-ip-address"},"Show IP Address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ifconfig\n")),(0,r.kt)("h2",{id:"show-routing-table"},"Show Routing Table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# linux\nroute\n# osx\nnetstat -rn\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"-r")," flag means to show routes."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"-n")," flag means to not resolve IPs to hostnames."),(0,r.kt)("h2",{id:"find-gateway-used-for-routing"},"Find Gateway Used for Routing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# linux\nip route get 8.8.8.8\n# osx\nroute get 8.8.8.8\n")),(0,r.kt)("h2",{id:"show-routes-across-network"},"Show Routes across Network"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"traceroute\n# en0 interface\ntraceroute -i en0\n")),(0,r.kt)("h2",{id:"ping-through-specific-interface"},"Ping Through Specific Interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# linux\nping -I en0 sslvpn.astri.org\n# osx\nping -b en0 sslvpn.astri.org\n")),(0,r.kt)("h2",{id:"find-out-address-used-by-which-process"},"Find Out Address Used by Which Process"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# osx\nnetstat -avn -p tcp\n")),(0,r.kt)("h2",{id:"add-a-route"},"Add a Route"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# osx\nroute -n add 10.0.0.0/24 10.0.0.1\n# linux\nroute -n add -net 10.0.0.0/24 gw 10.0.0.1\n")),(0,r.kt)("h2",{id:"firewall-rule"},"FireWall Rule"),(0,r.kt)("p",null,"osx:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# show all information/stats\nsudo pfctl -sa\n# show rules\nsudo pfctl -sr\n# sanity check edited configuration file\nsudo pfctl -v -n -f /etc/pf.conf\n# load pf with new rules\nsudo pfctl -f /etc/pf.conf\n# enable pf\nsudo pfctl -e\n# disable pf\nsudo pfctl -d\n# add information on the fly\nsudo pfctl -t localsub -T add 127.0.0.0/24\n# flush added rules later\nsudo pfctl -Fa -f /etc/pf.conf\n\nsudo pfctl -si\nsudo pfctl -q\n")),(0,r.kt)("h2",{id:"get-geolocation-of-ip-address"},"Get Geolocation of IP Address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl ipinfo.io/103.216.223.161\n")),(0,r.kt)("h2",{id:"packet-analyzer"},"Packet Analyzer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# list which interfaces are available for capture\ntcpdump --list-interfaces\n# capture all packets in any interface\nsudo tcpdump --interface any\n# limit the number of packets captured then stop `-c number`\nsudo tcpdump -i any -c 5\n# disable name resolution with using `-n` and port resolution with `-nn` \nsudo tcpdump -i any -c5 -nn\n# filter packets by protocol, only capture `ICMP` packets\nsudo tcpdump -i any -c5 icmp\n# capture packets related with host `8.8.8.8`\nsudo tcpdump -i any -c5 -nn host 8.8.8.8\n# capture packets related with port `80`\nsudo tcpdump -i any -c5 -nn port 80\n# capture packets with source address 192.168.0.1\nsudo tcpdump -i any -c5 -nn src 192.168.0.1\n# capture packets with destination address 8.8.8.8\nsudo tcpdump -i any -c5 -nn dst 8.8.8.8\n")),(0,r.kt)("h2",{id:"usb-virtual-ethernet"},"USB Virtual Ethernet"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://forums.developer.nvidia.com/t/provide-internet-through-micro-usb-while-doing-ssh/111326/14"},"An explanation on the USB virtual ethernet")),(0,r.kt)("h2",{id:"access-wsl-2-from-local-area-networklan"},"Access WSL 2 from local area network(LAN)"),(0,r.kt)("p",null,"After enabling ",(0,r.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/"},"systemd")," in WSL 2, I have to forward the Windows host port to the WSL 2 distribution."),(0,r.kt)("h3",{id:"find-wsl-2-ip-address-that-can-be-reached-from-windows-host"},"Find WSL 2 IP address that can be reached from Windows host"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ ip addr show eth0\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1420 qdisc mq state UP group default qlen 1000\n    link/ether 00:15:5d:98:b5:99 brd ff:ff:ff:ff:ff:ff\n    inet 172.29.6.23/20 brd 172.29.15.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::215:5dff:fe98:b599/64 scope link\n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("h3",{id:"add-proxy"},"Add proxy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"netsh interface portproxy add v4tov4 listenport=8082 connectport=8082 connectaddress=172.29.6.23,127.0.0.1\n")),(0,r.kt)("h3",{id:"optional-add-firewall-rule"},"[Optional]"," Add firewall rule"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'netsh advfirewall firewall add rule name= "Open Port 8082" dir=in action=allow protocol=TCP localport=8082\n')),(0,r.kt)("h3",{id:"check-current-proxy"},"Check current proxy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"netsh interface portproxy show all\n")),(0,r.kt)("h3",{id:"clean-up"},"Clean up"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"netsh interface portproxy delete v4tov4 listenport=8082\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'netsh advfirewall firewall delete rule name="Open port 8082"\n')))}u.isMDXComponent=!0}}]);