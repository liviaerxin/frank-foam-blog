"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[83],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},f="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),f=s(n),u=r,d=f["".concat(l,".").concat(u)]||f[u]||c[u]||p;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,i=new Array(p);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[f]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<p;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8591:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>p,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const p={foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/learn-ffmpeg.md"},authors:["frank"],description:"Learn FFmpeg",keywords:["learn","ffmpeg"],image:"https://i.imgur.com/mErPwqL.png",tags:["learn","ffmpeg"],date:new Date("2023-07-06T00:00:00.000Z"),last_update:new Date("2023-07-06T00:00:00.000Z")},i="Learn FFmpeg",o={permalink:"/blog/learn-ffmpeg",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-ffmpeg.md",source:"@site/../../blog/learn-ffmpeg.md",title:"Learn FFmpeg",description:"Learn FFmpeg",date:"2023-07-06T00:00:00.000Z",formattedDate:"July 6, 2023",tags:[{label:"learn",permalink:"/blog/tags/learn"},{label:"ffmpeg",permalink:"/blog/tags/ffmpeg"}],readingTime:2.45,hasTruncateMarker:!1,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/learn-ffmpeg.md"},authors:["frank"],description:"Learn FFmpeg",keywords:["learn","ffmpeg"],image:"https://i.imgur.com/mErPwqL.png",tags:["learn","ffmpeg"],date:"2023-07-06T00:00:00.000Z",last_update:"2023-07-06T00:00:00.000Z"},prevItem:{title:"Resumable Upload",permalink:"/blog/resumable-upload"},nextItem:{title:"MDX Features of Docusaurus",permalink:"/blog/mdx-features"}},l={authorsImageUrls:[void 0]},s=[{value:"FFmpeg Command Samples",id:"ffmpeg-command-samples",level:2},{value:"References",id:"references",level:2}],m={toc:s},f="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(f,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Examples of Container and Codec lists in Chrome",(0,r.kt)("sup",{parentName:"p",id:"fnref-chrome-0e49f5"},(0,r.kt)("a",{parentName:"sup",href:"#fn-chrome-0e49f5",className:"footnote-ref"},"chrome")),":"),(0,r.kt)("p",null,"Video Container Format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MP4 ","[",(0,r.kt)("inlineCode",{parentName:"li"},".mp4")," file extension]"),(0,r.kt)("li",{parentName:"ul"},"Ogg"),(0,r.kt)("li",{parentName:"ul"},"WebM"),(0,r.kt)("li",{parentName:"ul"},"WAV"),(0,r.kt)("li",{parentName:"ul"},"HLS ","[",(0,r.kt)("inlineCode",{parentName:"li"},".m3u8")," file extension]")),(0,r.kt)("p",null,"Video Codec Format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"VP8"),(0,r.kt)("li",{parentName:"ul"},"VP9"),(0,r.kt)("li",{parentName:"ul"},"H.264 ","[Chrome only]"),(0,r.kt)("li",{parentName:"ul"},"H.265 ","[Chrome only and also only with the underlying OS support]"),(0,r.kt)("li",{parentName:"ul"},"MPEG-4 ","[Chrome OS only, aka ",(0,r.kt)("strong",{parentName:"li"},"Xvid"),", ",(0,r.kt)("strong",{parentName:"li"},"DivX"),"]")),(0,r.kt)("h2",{id:"ffmpeg-command-samples"},"FFmpeg Command Samples"),(0,r.kt)("p",null,"It's note worthing to look over FFmpeg Wiki ",(0,r.kt)("sup",{parentName:"p",id:"fnref-ffmpeg-0e49f5"},(0,r.kt)("a",{parentName:"sup",href:"#fn-ffmpeg-0e49f5",className:"footnote-ref"},"ffmpeg"))),(0,r.kt)("p",null,"List all available ",(0,r.kt)("inlineCode",{parentName:"p"},"container")," formats:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ffmpeg -formats\n")),(0,r.kt)("p",null,"List all available ",(0,r.kt)("inlineCode",{parentName:"p"},"codec")," formats:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ffmpeg -codecs\n")),(0,r.kt)("p",null,"List private options of the ",(0,r.kt)("inlineCode",{parentName:"p"},"codec"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Show available `presets`\nffmpeg -h encoder=h264_nvenc\n")),(0,r.kt)("p",null,"List all frames timestamp:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -i input.mp4\n")),(0,r.kt)("p",null,"List all keyframe(I-frame) timestamp:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -skip_frame nokey -i input.mp4\n")),(0,r.kt)("p",null,"Convert video:"),(0,r.kt)("p",null,"you can convert either the ",(0,r.kt)("inlineCode",{parentName:"p"},"container formats")," or the ",(0,r.kt)("inlineCode",{parentName:"p"},"codecs formats"),", such as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# To `mp4` container and `h.264` codecs(the lower crf, the higher quality)\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 output.mp4\n\n# To `mp4` container and `mpeg4` codecs\nffmpeg -i input.avi -c:v libxvid -preset fast output.mp4\n\n# To be friendly for streaming, adding necessary metadata to begin playback faster! \nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -movflags +faststart output.mp4\n\n# Remove audio\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -an output.mp4\n\n# Use NVIDIA GPU\nffmpeg -i input.avi -c:v h264_nvenc -preset fast output.avi\n\n# keep quality\nffmpeg -i input.avi -c:v h264_nvenc -preset fast -rc constqp -cq 19 output.avi\n")),(0,r.kt)("p",null,"Set keyframe interval:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# mpeg4\nffmpeg -i input.avi -vcodec libxvid -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi \n\n# NVIDIA GPU\n# This sets the I-frame interval at 10 and ensures that no I-frames will be inserted in scene changes\nffmpeg -i input.avi -vcodec h264_nvenc -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi\n")),(0,r.kt)("p",null,"Trim video:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Fast clip with stream copy and faster seeking(700x)\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v copy output.mp4\n\n# Fast clip with stream copy and slower seeking(600x)\nffmpeg -i video.mp4 -ss 00:00:10 -to 00:00:50 -c:v copy output.mp4\n\n# Slow clip with re-encoding and faster seeking(1x)\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v libx264 output.mp4\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"NOTE: Cutting video with stream copy will lead the start frame is not precise!")),(0,r.kt)("p",null,"Slow down/Speed up video:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'# Slow down to 1/2x in fast way\nffmpeg -y -itsscale 2 -i video.mp4 -c:v copy output.mp4\n\n# Speed up to 2x in fast way\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v copy output.mp4\n\n# Speed up to 2x with re-encoding in slow way\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v libx264 output.mp4\n\n# Speed up to 2x with `setpts filter`(which requires re-encoding) in slow way\nffmpeg -i video.mp4 -filter:v "setpts=0.5*PTS" output.mp4\n\n# Change fps to slow down/speed up but keeping duration\nffmpeg -i video.mp4 -filter:v "fps=30" output.mp4\n')),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-chrome-0e49f5"},(0,r.kt)("a",{parentName:"li",href:"https://www.chromium.org/audio-video/"},"Chrome Audio/Video Support"),(0,r.kt)("a",{parentName:"li",href:"#fnref-chrome-0e49f5",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-ffmpeg-0e49f5"},(0,r.kt)("a",{parentName:"li",href:"https://trac.ffmpeg.org/wiki"},"FFmpeg Wiki"),(0,r.kt)("a",{parentName:"li",href:"#fnref-ffmpeg-0e49f5",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0}}]);