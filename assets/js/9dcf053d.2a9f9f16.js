"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8102],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},22750:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["openssl","certificate","best-practice"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-10-04T00:00:00.000Z"),draft:!1,enableComments:!0},i="Generate self-signed SSL/TLS certificate for local IP address or local domain",l={permalink:"/blog/certificate-sign",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/certificate-sign.mdx",source:"@site/../../blog/certificate-sign.mdx",title:"Generate self-signed SSL/TLS certificate for local IP address or local domain",description:"Self Signed Certificate",date:"2023-10-04T00:00:00.000Z",formattedDate:"October 4, 2023",tags:[{label:"openssl",permalink:"/blog/tags/openssl"},{label:"certificate",permalink:"/blog/tags/certificate"},{label:"best-practice",permalink:"/blog/tags/best-practice"}],readingTime:3.625,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["openssl","certificate","best-practice"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-10-04T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Wiki Celery",permalink:"/blog/wiki-celery"},nextItem:{title:"QEMU Direct Linux Kernel Boot",permalink:"/blog/qemu-linux-kernel-boot"}},s={authorsImageUrls:[void 0]},c=[{value:"Create root Certificate Authority(CA)",id:"create-root-certificate-authorityca",level:2},{value:"Create local server certificate",id:"create-local-server-certificate",level:2},{value:"Generate Certificate Signing Request(CSR)",id:"generate-certificate-signing-requestcsr",level:3},{value:"Submit CSR to root CA",id:"submit-csr-to-root-ca",level:3},{value:"Use the server certificate",id:"use-the-server-certificate",level:2},{value:"Trust the root CA",id:"trust-the-root-ca",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Chrome <strong>red</strong> security warning",id:"chrome-red-security-warning",level:3},{value:"Resources",id:"resources",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In real life, when we build our website and make it public, some paid or free CA(Certificate Authority) will help us sign a certificate for our website domain and enable SSL/TLS connections from user browser to our server."),(0,n.kt)("p",null,"For secure reasons, the browser will only admit those servers's certificates signed from authorized CA, of which certificate is kept in your host system trust store."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"One of the most popular Certificate Authorities is ",(0,n.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"Let's Encrypt"),", which is a free and non-profit CA.")),(0,n.kt)("p",null,"Here is an example, we will generate a local server certificate that is signed by a local CA. Finally, let Chrome can visit our local website without security warning."),(0,n.kt)("p",null,"In brief, these steps we need to sign local sever certificate actually simulate how those CA sign certificates for public servers, as following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create a local ",(0,n.kt)("strong",{parentName:"li"},"Root CA"),"."),(0,n.kt)("li",{parentName:"ol"},"Create a ",(0,n.kt)("strong",{parentName:"li"},"CSR"),"(Certificate Signing Request) file for local server ",(0,n.kt)("inlineCode",{parentName:"li"},"127.0.0.1"),"."),(0,n.kt)("li",{parentName:"ol"},"The local ",(0,n.kt)("strong",{parentName:"li"},"Root CA")," use the ",(0,n.kt)("strong",{parentName:"li"},"CSR")," to generate a ",(0,n.kt)("strong",{parentName:"li"},"certificate")," for local server ",(0,n.kt)("inlineCode",{parentName:"li"},"127.0.0.1"),"."),(0,n.kt)("li",{parentName:"ol"},"Install the local ",(0,n.kt)("strong",{parentName:"li"},"Root CA")," into our system(Windows, Ubuntu or macOS) trust store."),(0,n.kt)("li",{parentName:"ol"},"Run a simple ",(0,n.kt)("strong",{parentName:"li"},"https")," server to test local server ",(0,n.kt)("strong",{parentName:"li"},"certificate"),".")),(0,n.kt)("p",null,"For those official CA, they have to validate the domain is owned by the server before the ",(0,n.kt)("inlineCode",{parentName:"p"},"step 3"),", and we can ignore ",(0,n.kt)("inlineCode",{parentName:"p"},"step 4")," as they are already installed into the system or the browser trust store."),(0,n.kt)("p",null,"And there is nice picture from ",(0,n.kt)("a",{parentName:"p",href:"https://www.linkedin.com/pulse/how-create-your-own-self-signed-root-certificate-shankar-gomare/"},"How to create your own self-signed root Certificate Authority(CA)")," to show the relationship between ",(0,n.kt)("inlineCode",{parentName:"p"},"CA"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"server")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"browser"),"."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://media.licdn.com/dms/image/C4E12AQGJ5hl3wTAyFg/article-inline_image-shrink_400_744/0/1589170084171?e=1701907200&v=beta&t=FaVSM-fIy4dc-SIftGYEuUc7GONcMLphssfteUKoWuA",alt:null})),(0,n.kt)("h2",{id:"create-root-certificate-authorityca"},"Create root Certificate Authority(CA)"),(0,n.kt)("p",null,"Generate ",(0,n.kt)("inlineCode",{parentName:"p"},"RootCA.key")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"RootCA.crt"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'openssl req -x509 -nodes -new -sha256 -days 1024 -newkey rsa:2048 -keyout RootCA.key -out RootCA.crt -subj "/C=US/CN=Example-Root-CA"\n')),(0,n.kt)("p",null,"You can change ",(0,n.kt)("inlineCode",{parentName:"p"},"Example-Root-CA")," to others or add more fields to CA."),(0,n.kt)("h2",{id:"create-local-server-certificate"},"Create local server certificate"),(0,n.kt)("p",null,"Next, we should apply the local CA to sign a certificate for our local server, which will be accessed through the ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," from our local machine."),(0,n.kt)("h3",{id:"generate-certificate-signing-requestcsr"},"Generate Certificate Signing Request(CSR)"),(0,n.kt)("p",null,"Set up custom DNS in ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/hosts"),","),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-conf",metastring:'title="/etc/hosts"',title:'"/etc/hosts"'},"127.0.0.1   localhost\n127.0.0.1   fake1.local\n127.0.0.1   fake2.local\n")),(0,n.kt)("p",null,"Prepare a ",(0,n.kt)("inlineCode",{parentName:"p"},"server.conf"),","),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-conf",metastring:'title="server.conf"',title:'"server.conf"'},"[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 127.0.0.1: Self-signed certificate\n\n[req_ext]\nsubjectAltName = @alt_names\n\n[v3_req]\nsubjectAltName = @alt_names\n\n[alt_names]\nIP.1 = 127.0.0.1\nDNS.1 = localhost\nDNS.2 = fake1.local\nDNS.3 = fake2.local\n")),(0,n.kt)("p",null,"Generates ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.key")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.csr"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},'openssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr -config server.conf\n# Or input from line\n# openssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr -subj "/C=US/ST=YourState/L=YourCity/O=Example-Certificates/CN=localhost.local"\n')),(0,n.kt)("p",null,"Verify the Certificate Signing Request(CSR) ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.csr"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"openssl req -text -noout -verify -in localhost.csr\n")),(0,n.kt)("h3",{id:"submit-csr-to-root-ca"},"Submit CSR to root CA"),(0,n.kt)("p",null,"Employ local root CA to sign server certificate by using CSR ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.csr")," with extensions."),(0,n.kt)("p",null,"Generates ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.crt"),","),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"openssl x509 -req -sha256 -days 1024 -in localhost.csr -CA RootCA.crt -CAkey RootCA.key -CAcreateserial -extensions req_ext -extfile server.conf -out localhost.crt\n")),(0,n.kt)("p",null,"Verify the ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost.crt"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"openssl x509 -text -noout -verify -in localhost.crt\n")),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"If ",(0,n.kt)("inlineCode",{parentName:"p"},"X509")," extensions(",(0,n.kt)("inlineCode",{parentName:"p"},"subjectAltName"),") are missing from the certificate, the browser will still report security issues.")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Using the CA and Subject as the same one, the step of creating the local CA can be skipped."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout localhost.key -out localhost.crt -config server.conf\n"))),(0,n.kt)("h2",{id:"use-the-server-certificate"},"Use the server certificate"),(0,n.kt)("p",null,"Run up a node https server to use the generated local server certificate."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"npx http-server -p 8082 --ssl --cert localhost.crt --key localhost.key\n")),(0,n.kt)("p",null,"Then visit:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://127.0.0.1:8082/"},"https://127.0.0.1:8082/")),(0,n.kt)("li",{parentName:"ul"},"https://localhost:8082/")),(0,n.kt)("p",null,"The browser will give you security warning as the local ",(0,n.kt)("strong",{parentName:"p"},"root CA")," is not trusted in default."),(0,n.kt)("h2",{id:"trust-the-root-ca"},"Trust the root CA"),(0,n.kt)("p",null,"Install CA certificate ",(0,n.kt)("inlineCode",{parentName:"p"},"RootCA.crt")," into each system trust store or each browser."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Windows system trust store"),(0,n.kt)("li",{parentName:"ul"},"Ubuntu system trust store"),(0,n.kt)("li",{parentName:"ul"},"macOS system trust store")),(0,n.kt)("p",null,"Then visit again, the browser will show green!"),(0,n.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.kt)("h3",{id:"chrome-red-security-warning"},"Chrome ",(0,n.kt)("strong",{parentName:"h3"},"red")," security warning"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Go to ",(0,n.kt)("inlineCode",{parentName:"li"},"Developer Tools"),"."),(0,n.kt)("li",{parentName:"ol"},"Click ",(0,n.kt)("inlineCode",{parentName:"li"},"Security")," tab."),(0,n.kt)("li",{parentName:"ol"},"Check ",(0,n.kt)("inlineCode",{parentName:"li"},"Security overview")," issues.")),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8"},"How to create an HTTPS certificate for localhost domains \xb7 GitHub")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.golinuxcloud.com/add-x509-extensions-to-certificate-openssl/"},"How to add X.509 extensions to certificate OpenSSL | GoLinuxCloud")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/FiloSottile/mkcert"},"GitHub - FiloSottile/mkcert: A simple zero-config tool to make locally trusted development certificates with any names you'd like.")))}m.isMDXComponent=!0}}]);