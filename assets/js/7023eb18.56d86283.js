"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9176],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,g=p["".concat(c,".").concat(f)]||p[f]||m[f]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},88315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["Self Signed Certificate"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-10-04T00:00:00.000Z"),draft:!1,enableComments:!0},o="Generating self signed SSL/TLS certificate for private IP address or local domain",l={permalink:"/blog/self-signed-certificate",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/self-signed-certificate.mdx",source:"@site/../../blog/self-signed-certificate.mdx",title:"Generating self signed SSL/TLS certificate for private IP address or local domain",description:"Self Signed Certificate",date:"2023-10-04T00:00:00.000Z",formattedDate:"October 4, 2023",tags:[{label:"Self Signed Certificate",permalink:"/blog/tags/self-signed-certificate"}],readingTime:1.505,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["Self Signed Certificate"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-10-04T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Learn Vcpkg",permalink:"/blog/wiki-vcpkg"},nextItem:{title:"QEMU Direct Linux Kernel Boot",permalink:"/blog/qemu-linux-kernel-boot"}},c={authorsImageUrls:[void 0]},s=[{value:"Creating certificate authority(CA)",id:"creating-certificate-authorityca",level:2},{value:"Generating local domain certificate",id:"generating-local-domain-certificate",level:2},{value:"Generating a Certificate Signing Request(CSR)",id:"generating-a-certificate-signing-requestcsr",level:3},{value:"Submiting the CSR to the local CA",id:"submiting-the-csr-to-the-local-ca",level:3},{value:"Using the certificate",id:"using-the-certificate",level:2},{value:"Trust the local CA",id:"trust-the-local-ca",level:2},{value:"Resources",id:"resources",level:2}],u={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"creating-certificate-authorityca"},"Creating certificate authority(CA)"),(0,r.kt)("p",null,"Generate ",(0,r.kt)("inlineCode",{parentName:"p"},"RootCA.key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"RootCA.crt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'openssl req -x509 -nodes -new -sha256 -days 1024 -newkey rsa:2048 -keyout RootCA.key -out RootCA.crt -subj "/C=US/CN=Example-Root-CA"\n')),(0,r.kt)("h2",{id:"generating-local-domain-certificate"},"Generating local domain certificate"),(0,r.kt)("h3",{id:"generating-a-certificate-signing-requestcsr"},"Generating a Certificate Signing Request(CSR)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf",metastring:'title="/etc/hosts"',title:'"/etc/hosts"'},"127.0.0.1   localhost\n127.0.0.1   fake1.local\n127.0.0.1   fake2.local\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf",metastring:'title="req.conf"',title:'"req.conf"'},"[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 127.0.0.1: Self-signed certificate\n\n[req_ext]\nsubjectAltName = @alt_names\n\n[v3_req]\nsubjectAltName = @alt_names\n\n[alt_names]\nIP.1 = 127.0.0.1\nDNS.1 = localhost\nDNS.2 = fake1.local\nDNS.3 = fake2.local\n")),(0,r.kt)("p",null,"Generates ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost.key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost.csr"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'openssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr -config req.conf\n# Or input from line\n# openssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr -subj "/C=US/ST=YourState/L=YourCity/O=Example-Certificates/CN=localhost.local"\n')),(0,r.kt)("p",null,"Verify the Certificate Signing Request(CSR) file ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost.csr"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"openssl req -text -noout -verify -in localhost.csr\n")),(0,r.kt)("h3",{id:"submiting-the-csr-to-the-local-ca"},"Submiting the CSR to the local CA"),(0,r.kt)("p",null,"Generates certificate file ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost.crt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"openssl x509 -req -sha256 -days 1024 -in localhost.csr -CA RootCA.crt -CAkey RootCA.key -CAcreateserial -out localhost.crt\n")),(0,r.kt)("p",null,"Verify the ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost.crt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"openssl x509 -text -noout -verify -in localhost.crt\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Using the CA and Subject as the same one, the step of creating the local CA can be skipped."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout localhost.key -out localhost.crt -config req.conf\n"))),(0,r.kt)("h2",{id:"using-the-certificate"},"Using the certificate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx http-server -p 8082 --ssl --cert localhost.crt --key localhost.key\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://127.0.0.1:8082/"},"https://127.0.0.1:8082/"),"\nhttps://localhost:8082/"),(0,r.kt)("h2",{id:"trust-the-local-ca"},"Trust the local CA"),(0,r.kt)("p",null,"Install CA certificate ",(0,r.kt)("inlineCode",{parentName:"p"},"RootCA.crt")," into the system trust store."),(0,r.kt)("p",null,"Windows\nUbuntu\nmacOS"),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8"},"How to create an HTTPS certificate for localhost domains \xb7 GitHub")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/FiloSottile/mkcert"},"GitHub - FiloSottile/mkcert: A simple zero-config tool to make locally trusted development certificates with any names you'd like.")))}m.isMDXComponent=!0}}]);