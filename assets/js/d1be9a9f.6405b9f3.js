"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1285],{72723:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=t(74848),r=t(28453);const o={authors:["frank"],tags:["qemu","kernel","initramfs"],description:"QEMU Linux Kernel Boot",keywords:["QEMU Linux Kernel Boot"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-09-26T00:00:00.000Z"),draft:!1,enableComments:!0},l="QEMU Direct Linux Kernel Boot",s={permalink:"/blog/qemu-linux-kernel-boot",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/qemu-linux-kernel-boot.mdx",source:"@site/../../blog/qemu-linux-kernel-boot.mdx",title:"QEMU Direct Linux Kernel Boot",description:"QEMU Linux Kernel Boot",date:"2023-09-26T00:00:00.000Z",tags:[{label:"qemu",permalink:"/blog/tags/qemu"},{label:"kernel",permalink:"/blog/tags/kernel"},{label:"initramfs",permalink:"/blog/tags/initramfs"}],readingTime:2.735,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{authors:["frank"],tags:["qemu","kernel","initramfs"],description:"QEMU Linux Kernel Boot",keywords:["QEMU Linux Kernel Boot"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-09-26T00:00:00.000Z",draft:!1,enableComments:!0},unlisted:!1,prevItem:{title:"Generate self-signed SSL/TLS certificate for local IP address or local domain",permalink:"/blog/how-to-create-self-signed-certificate"},nextItem:{title:"QEMU Emulate Raspberry Pi 3 and 4",permalink:"/blog/qemu-raspberry-pi"}},a={authorsImageUrls:[void 0]},u=[];function c(e){const n={code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Here, I will employ QEMU to emulate a minimal ",(0,i.jsx)(n.strong,{children:"Linux x86_64"})," platform with a minimal root filesystem from scratch, as well as debugging with ",(0,i.jsx)(n.code,{children:"GDB"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Build ",(0,i.jsx)(n.strong,{children:"Linux x86_64"})," kernel"]}),"\n",(0,i.jsxs)(n.li,{children:["Build ",(0,i.jsx)(n.strong,{children:"Linux x86_64"})," rootfs(root filesystem)"]}),"\n",(0,i.jsx)(n.li,{children:"Run QEMU"}),"\n",(0,i.jsxs)(n.li,{children:["Debug with ",(0,i.jsx)(n.code,{children:"GDB"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Why do I use QEMU to boot Linux kernel directly with skipping BIOS/UEFI boot procedures?"}),"\n",(0,i.jsx)(n.p,{children:"Use QEMU to launch a Linux kernel directly without having to make a fully bootable disk image. This is very useful for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Linux kernel testing"}),"\n",(0,i.jsx)(n.li,{children:"root filesystem testing"}),"\n",(0,i.jsx)(n.li,{children:"arm system emulation"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);