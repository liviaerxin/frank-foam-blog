"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[785],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return n?i.createElement(k,l(l({ref:t},m),{},{components:n})):i.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},20178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const r={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/wiki-assembly.mdx"},authors:["frank"],tags:["Wiki Assembly"],description:"Wiki Assembly",keywords:["Wiki Assembly"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-11-22T00:00:00.000Z"),draft:!1,enableComments:!0},l="Wiki Assembly",o={permalink:"/blog/wiki-assembly",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/wiki-assembly.mdx",source:"@site/../../blog/wiki-assembly.mdx",title:"Wiki Assembly",description:"Wiki Assembly",date:"2023-11-22T00:00:00.000Z",formattedDate:"November 22, 2023",tags:[{label:"Wiki Assembly",permalink:"/blog/tags/wiki-assembly"}],readingTime:3.77,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/wiki-assembly.mdx"},authors:["frank"],tags:["Wiki Assembly"],description:"Wiki Assembly",keywords:["Wiki Assembly"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-11-22T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Wiki Network",permalink:"/blog/wiki-network"},nextItem:{title:"Celery",permalink:"/blog/python-celery"}},s={authorsImageUrls:[void 0]},p=[],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Why ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," language is important to to learn?"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The most low-level language that is closely tied to the hardware such as ",(0,a.kt)("inlineCode",{parentName:"li"},"CPU"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Assembly")," code implements a symbolic (human-readable) representation of the binary machine code."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Assembly")," language is written to follow the ",(0,a.kt)("inlineCode",{parentName:"li"},"CPU")," execution logic directly."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"Assembly")," language facilities a deeper understanding how ",(0,a.kt)("inlineCode",{parentName:"li"},"CPU")," actually do its job.")),(0,a.kt)("p",null,"Why ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," language is critical elementary foundation to other higher-level language, E.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"C"),"?"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," code is the important medium for compiling ",(0,a.kt)("inlineCode",{parentName:"p"},"C")," code to machine code.\nWhen ",(0,a.kt)("inlineCode",{parentName:"p"},"C")," program being compiled to an binary object file, the ",(0,a.kt)("inlineCode",{parentName:"p"},"GCC")," compiler will do following:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"C")," code will be compiled into ",(0,a.kt)("inlineCode",{parentName:"li"},"Assembly")," code"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"Assembly")," code will be translated into machine code")),(0,a.kt)("p",null,"Is ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," language cross-platform?"),(0,a.kt)("p",null,"No, ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," language is specific in the specific platform. E.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"X86")," CPU-architecture has its own ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," instruction sets as well as the ",(0,a.kt)("inlineCode",{parentName:"p"},"arm")," CPU."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Assembly")," is CPU-dependent as machine code is CPU-dependent, while ",(0,a.kt)("inlineCode",{parentName:"p"},"C")," language is CPU-independent for cross-platform."),(0,a.kt)("p",null,"Is the first version of ",(0,a.kt)("inlineCode",{parentName:"p"},"GCC")," written in ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly"),"?"),(0,a.kt)("p",null,"No, ",(0,a.kt)("inlineCode",{parentName:"p"},"C")," started with the ",(0,a.kt)("inlineCode",{parentName:"p"},"BCPL")," language, ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/18125490/how-was-the-first-c-compiler-written"})))}u.isMDXComponent=!0}}]);