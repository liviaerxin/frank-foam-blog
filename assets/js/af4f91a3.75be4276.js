"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4273],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,d=c["".concat(s,".").concat(u)]||c[u]||y[u]||i;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},71559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={authors:["frank"],tags:["Python","C","C++","Shared library","Dynamic library"],description:"Python C",keywords:["Python C"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-12-18T00:00:00.000Z"),draft:!1,enableComments:!0},o="Python C Library",l={permalink:"/blog/python-c-library",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/python-c-library.mdx",source:"@site/../../blog/python-c-library.mdx",title:"Python C Library",description:"Python C",date:"2023-12-18T00:00:00.000Z",formattedDate:"December 18, 2023",tags:[{label:"Python",permalink:"/blog/tags/python"},{label:"C",permalink:"/blog/tags/c"},{label:"Shared library",permalink:"/blog/tags/shared-library"},{label:"Dynamic library",permalink:"/blog/tags/dynamic-library"}],readingTime:1.51,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{authors:["frank"],tags:["Python","C","C++","Shared library","Dynamic library"],description:"Python C",keywords:["Python C"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-12-18T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Wiki VPN",permalink:"/blog/wiki-vpn"},nextItem:{title:"Python Unicode",permalink:"/blog/python-unicode"}},s={authorsImageUrls:[void 0]},p=[{value:"Python <code>int</code> object",id:"python-int-object",level:2},{value:"Resources",id:"resources",level:2}],m={toc:p},c="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"How many ways Python can interact with C libraries?"),(0,a.kt)("p",null,"Two. There are two different modes totally."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ctypes")," to load any dynamic library from a C libraries"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"import module")," to import a dynamic library written using the Python C API")),(0,a.kt)("p",null,"Let's clarify the terminology a bit:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"ctypes")," to Load Dynamic Libraries (including any C library):")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ctypes")," is a foreign function interface (FFI) library in Python that allows you to call functions from dynamic/shared libraries written in languages like C."),(0,a.kt)("li",{parentName:"ul"},"It can be used to load and call functions from C libraries (or any dynamic/shared libraries), and it's a more manual, low-level approach to interfacing with C code."),(0,a.kt)("li",{parentName:"ul"},"Example with ",(0,a.kt)("inlineCode",{parentName:"li"},"ctypes"),":",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-py"},"")))),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"import module")," for Dynamic Libraries written in Python C API:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If a C library is written using the Python C API and compiled as a Python extension module (",(0,a.kt)("inlineCode",{parentName:"li"},".pyd")," on Windows or ",(0,a.kt)("inlineCode",{parentName:"li"},".so")," on Unix-like systems), you can use the import statement to ",(0,a.kt)("inlineCode",{parentName:"li"},"import")," and use it in Python."),(0,a.kt)("li",{parentName:"ul"},"This ",(0,a.kt)("inlineCode",{parentName:"li"},"Pythonic")," approach typically provides a more seamless integration as it allows the C code to be treated as a native Python module."),(0,a.kt)("li",{parentName:"ul"},"Example with ",(0,a.kt)("inlineCode",{parentName:"li"},"import module"),":")))),(0,a.kt)("p",null,"What's the file's name that Python look for when using ",(0,a.kt)("inlineCode",{parentName:"p"},"import module")," to import C API libraries?"),(0,a.kt)("p",null,"Python will look for a shared library with a suitable name, as determined by the platform conventions.\nThe shared library could be named something like ",(0,a.kt)("inlineCode",{parentName:"p"},"libexample.so")," on Unix-like systems or ",(0,a.kt)("inlineCode",{parentName:"p"},"example.dll")," on Windows. The ",(0,a.kt)("inlineCode",{parentName:"p"},"PyInit_example")," function initializes the module."),(0,a.kt)("h2",{id:"python-int-object"},"Python ",(0,a.kt)("inlineCode",{parentName:"h2"},"int")," object"),(0,a.kt)("p",null,"Python uses a variable-size integer representation,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Overhead size"),": 24 bytes, including Python header object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Data size"),": 4 or 8 bytes, storing smaller ",(0,a.kt)("inlineCode",{parentName:"li"},"int")," using 4 bytes and bigger ",(0,a.kt)("inlineCode",{parentName:"li"},"int")," using 8 bytes.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},">>> sys.getsizeof(0x560f7ab1e1c0)\n32\n>>> sys.getsizeof(0xc0)\n28\n")),(0,a.kt)("h2",{id:"resources"},"Resources"))}y.isMDXComponent=!0}}]);