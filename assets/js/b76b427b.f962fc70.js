"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2763],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,d=u["".concat(c,".").concat(h)]||u[h]||f[h]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},83805:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={authors:["frank"],tags:["wiki","utf-8","encode"],description:"Wiki UTF8",keywords:["Wiki UTF8"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-12-08T00:00:00.000Z"),draft:!1,enableComments:!0},o="Wiki UTF-8",l={permalink:"/blog/wiki-utf8",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/wiki-utf8.mdx",source:"@site/../../blog/wiki-utf8.mdx",title:"Wiki UTF-8",description:"Wiki UTF8",date:"2023-12-08T00:00:00.000Z",formattedDate:"December 8, 2023",tags:[{label:"wiki",permalink:"/blog/tags/wiki"},{label:"utf-8",permalink:"/blog/tags/utf-8"},{label:"encode",permalink:"/blog/tags/encode"}],readingTime:1.695,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{authors:["frank"],tags:["wiki","utf-8","encode"],description:"Wiki UTF8",keywords:["Wiki UTF8"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-12-08T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Wiki Cryptography",permalink:"/blog/wiki-cryptography"},nextItem:{title:"Wiki Development Environment",permalink:"/blog/wiki-dev-environment"}},c={authorsImageUrls:[void 0]},s=[{value:"FAQ",id:"faq",level:2},{value:"How a character is displayed on the screen?",id:"how-a-character-is-displayed-on-the-screen",level:3},{value:"How to find out whether the file uses UTF-8 or ASCII or other encoding schemas?",id:"how-to-find-out-whether-the-file-uses-utf-8-or-ascii-or-other-encoding-schemas",level:3},{value:"How can I check a UTF-8 file has a <code>BOM</code>?",id:"how-can-i-check-a-utf-8-file-has-a-bom",level:3}],p={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"UTF8 is character-to-bytes(1 to 4 bytes) encoding standard. "),(0,a.kt)("p",null,"glyph,\ncharacter,\ncode point,\nvariable-length bytes(1 to 4 bytes)"),(0,a.kt)("p",null,"The smallest unit of all texts we see on the screen is one character."),(0,a.kt)("h2",{id:"faq"},"FAQ"),(0,a.kt)("h3",{id:"how-a-character-is-displayed-on-the-screen"},"How a character is displayed on the screen?"),(0,a.kt)("p",null,"software maps each character to its glyph(a grid of pixels), draw these pixels onto the screen."),(0,a.kt)("h3",{id:"how-to-find-out-whether-the-file-uses-utf-8-or-ascii-or-other-encoding-schemas"},"How to find out whether the file uses UTF-8 or ASCII or other encoding schemas?"),(0,a.kt)("p",null,"It's not always foolproof because there is no universal mandate or requirement that all files must specify their encoding. But it's a good practice to add BOM(Byte Order Mark) at the beginning of a UTF-8 encoded file."),(0,a.kt)("h3",{id:"how-can-i-check-a-utf-8-file-has-a-bom"},"How can I check a UTF-8 file has a ",(0,a.kt)("inlineCode",{parentName:"h3"},"BOM"),"?"),(0,a.kt)("p",null,"The file without ",(0,a.kt)("inlineCode",{parentName:"p"},"BOM"),","),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},">>> f.flush()\n>>> b'\\xe2\\x82\\xac'.decode()\n'\u20ac'\n>>> '\u20ac'.encode()\nb'\\xe2\\x82\\xac'\n>>> bom=b\"\\xef\\xbb\\xbf\"\n>>> f=open(\"a.txt\", \"wb+\")\n>>> f.write(b'\\xe2\\x82\\xac')\n3\n>>> f.flush()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ file a.txt\na.txt: Unicode text, UTF-8 text, with no line terminators\n")),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"BOM")," onto the file,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},">>> f.seek(0)\n0\n>>> f.truncate(0)\n0\n>>> f.write(b'\\xef\\xbb\\xbf\\xe2\\x82\\xac')\n6\n>>> f.flush()\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ file a.txt\na.txt: Unicode text, UTF-8 (with BOM) text, with no line terminators\n$ hexdump -C a.txt\n00000000  ef bb bf e2 82 ac                                 |......|\n00000006\n")))}f.isMDXComponent=!0}}]);