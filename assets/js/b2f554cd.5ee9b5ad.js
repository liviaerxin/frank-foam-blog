"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/c-package-management","metadata":{"permalink":"/blog/c-package-management","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/c-package-management.md","source":"@site/../../blog/c-package-management.md","title":"C++ Package Management","description":"C++ Package Management","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"c++","permalink":"/blog/tags/c"},{"label":"vcpkg","permalink":"/blog/tags/vcpkg"},{"label":"conan","permalink":"/blog/tags/conan"}],"readingTime":0.015,"hasTruncateMarker":false,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/c++-package-management.md"},"sidebar_label":"C++ Package Management","description":"C++ Package Management","keywords":["c++ package","vcpkg","conan"],"image":"https://i.imgur.com/mErPwqL.png","tags":["c++","vcpkg","conan"],"last_update":{"date":"2023-06-26T00:00:00.000Z","author":"frank"}},"nextItem":{"title":"Code Snippet Management","permalink":"/blog/code-snippet-management"}},"content":"vcpkg\\n\\n[[learn-vcpkg]](learn-vcpkg.md)\\n\\nconan"},{"id":"/code-snippet-management","metadata":{"permalink":"/blog/code-snippet-management","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/code-snippet-management.md","source":"@site/../../blog/code-snippet-management.md","title":"Code Snippet Management","description":"Code Snippet Management","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"code snippet","permalink":"/blog/tags/code-snippet"}],"readingTime":0.595,"hasTruncateMarker":true,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/code-snippet-management.md"},"sidebar_label":"Code Snippet Management","description":"Code Snippet Management","keywords":["code snippet manager"],"image":"https://i.imgur.com/mErPwqL.png","tags":["code snippet"],"last_update":{"date":"2023-06-26T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"C++ Package Management","permalink":"/blog/c-package-management"},"nextItem":{"title":"CIL(Common Intermediate Language)","permalink":"/blog/common-intermediate-language"}},"content":"\x3c!--truncate--\x3e\\n\\n```plantuml\\n@startuml\\nskinparam linetype polyline\\nskinparam linetype ortho\\ncomponent \\"Code Snippet Manager App\\" as CSMA {\\n    component \\"Categories\\" as C\\n    component \\"Search\\" as S\\n    component \\"Comments and Documentation\\" as CD\\n    component \\"Version Control\\" as VC\\n    component \\"Share and Collaborate\\" as SC\\n    C -[hidden]- S\\n    S -[hidden]- CD\\n    CD -[hidden]- VC\\n    VC -[hidden]- SC\\n}\\n\\ncomponent \\"IDE with Code Snippet Manager Extension\\" as IDE {\\n    component \\"View Feature\\" as IDE.V\\n    component \\"Write/Update Feature\\" as IDE.W\\n    component \\"AI-Assisted Code Completion\\" as IDE.A\\n}\\ndatabase \\"Local Database\\" as DB\\ncloud \\"Cloud Storage\\" as CS\\n\\nCS <--\x3e DB: sync data\\n\\nDB -l-> CSMA: read\\nDB <-- CSMA: write\\nDB --\x3e IDE.V: read\\nIDE.V --\x3e IDE.A: read\\nDB <-- IDE.W: write\\n\\n@enduml\\n```"},{"id":"/common-intermediate-language","metadata":{"permalink":"/blog/common-intermediate-language","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/common-intermediate-language.md","source":"@site/../../blog/common-intermediate-language.md","title":"CIL(Common Intermediate Language)","description":"Verifying your own .NET IL-Code","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.585,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Code Snippet Management","permalink":"/blog/code-snippet-management"},"nextItem":{"title":"Data Center","permalink":"/blog/data-center"}},"content":"[Verifying your own .NET IL-Code](https://www.dynatrace.com/news/blog/verifying-your-own-dotnet-il-code/)\\n\\n[linux - .net-core: Equivalent of ILDASM / ILASM - Stack Overflow](https://stackoverflow.com/questions/39979851/net-core-equivalent-of-ildasm-ilasm)\\n\\n[What is Just-In-Time(JIT) Compiler in .NET - GeeksforGeeks](https://www.geeksforgeeks.org/what-is-just-in-time-jit-compiler-in-dot-net/)\\n\\n[GitHub - Konard/ILProj: The example class library project, with code written in the CIL.](https://github.com/Konard/ILProj)\\n\\n## What is CIl/IL\\n\\nFor C# or Java, the program is not directly compiled to machine code, but **intermediate language** code. For C#, the `intermediate` code is called Common Intermediate Language(CIL, or IL). So whether the `*.dll` or `*.exe` compiled from C#, is composed of IL code and its corresponding meta data. At runtime, the JIT(Just-In-Compiler) compile the IL code to the native machine code.\\n\\n## What is JIT\\n\\n```sh\\n./ilasm ~/Documents/peggy-foam-wiki/docs/IL/test/test.il -dll\\n./ildasm ~/Documents/peggy-foam-wiki/docs/IL/test/test.dll -t\\ndotnet myapp.dll\\n```"},{"id":"/data-center","metadata":{"permalink":"/blog/data-center","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/data-center.md","source":"@site/../../blog/data-center.md","title":"Data Center","description":"Economic Data","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.045,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"CIL(Common Intermediate Language)","permalink":"/blog/common-intermediate-language"},"nextItem":{"title":"Tools","permalink":"/blog/diagram-tools"}},"content":"## Economic Data\\n\\n[FRED ECONOMIC DATA](https://fred.stlouisfed.org/)\\n\\n[US inflation cpi](https://tradingeconomics.com/united-states/inflation-cpi)"},{"id":"/diagram-tools","metadata":{"permalink":"/blog/diagram-tools","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/diagram-tools.md","source":"@site/../../blog/diagram-tools.md","title":"Tools","description":"Generic Tools","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Data Center","permalink":"/blog/data-center"},"nextItem":{"title":"Dotfiles Guide","permalink":"/blog/dotfiles-guide"}},"content":"## Generic Tools\\n\\n[drawio: draw.io is a JavaScript, client-side editor for general diagramming and whiteboarding](https://github.com/jgraph/drawio)\\n\\n[Intelligent Diagramming | Lucidchart](https://www.lucidchart.com)\\n\\n[The Visual Collaboration Platform for Every Team | Miro](https://miro.com)\\n\\n## Code as Diagram Tools\\n\\n[GitHub - mermaid-js/mermaid: Generation of diagrams like flowcharts or sequence diagrams from text in a similar manner as markdown](https://github.com/mermaid-js/mermaid)\\n\\n[GitHub - plantuml/plantuml: Generate diagrams from textual description](https://github.com/plantuml/plantuml)\\n\\n## ERD Diagram Tools"},{"id":"/dotfiles-guide","metadata":{"permalink":"/blog/dotfiles-guide","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/dotfiles-guide.md","source":"@site/../../blog/dotfiles-guide.md","title":"Dotfiles Guide","description":"Dotfiles Guide","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"dotfiles","permalink":"/blog/tags/dotfiles"}],"readingTime":0.145,"hasTruncateMarker":false,"authors":[],"frontMatter":{"sidebar_label":"Dotfiles Guide","description":"Dotfiles Guide","keywords":["dotfiles"],"image":"https://i.imgur.com/mErPwqL.png","tags":["dotfiles"],"last_update":{"date":"2023-06-26T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"Tools","permalink":"/blog/diagram-tools"},"nextItem":{"title":".NET Finalizer","permalink":"/blog/dotnet-finalizer"}},"content":"[Tutorials - dotfiles.github.io](http://dotfiles.github.io/tutorials/)\\n\\n[Getting started with dotfilesFrontend Ramblings RSS feedThe content of this website on GitHubMy Mastodon profileMy Twitter profileShare this article on TwitterShare this article on Hacker News](https://www.webpro.nl/articles/getting-started-with-dotfiles)"},{"id":"/dotnet-finalizer","metadata":{"permalink":"/blog/dotnet-finalizer","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/dotnet-finalizer.md","source":"@site/../../blog/dotnet-finalizer.md","title":".NET Finalizer","description":"c# - Finalizer launched while its object was still being used - Stack Overflow","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.12,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Dotfiles Guide","permalink":"/blog/dotfiles-guide"},"nextItem":{"title":"FastAPI Best Practices","permalink":"/blog/fastapi-best-practices"}},"content":"[c# - Finalizer launched while its object was still being used - Stack Overflow](https://stackoverflow.com/questions/134653/finalizer-launched-while-its-object-was-still-being-used)\\n\\n## Tips\\n\\n1. finalizers should not be accessing managed objects."},{"id":"/fastapi-best-practices","metadata":{"permalink":"/blog/fastapi-best-practices","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/fastapi-best-practices.mdx","source":"@site/../../blog/fastapi-best-practices.mdx","title":"FastAPI Best Practices","description":"Lock Endpoint Request At A Time","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"fastapi","permalink":"/blog/tags/fastapi"},{"label":"python","permalink":"/blog/tags/python"},{"label":"http","permalink":"/blog/tags/http"}],"readingTime":0.83,"hasTruncateMarker":false,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/lock-http-request.md"},"sidebar_label":"Lock Http Request","description":"Lock Endpoint Request At A Time","keywords":["limit only one access to endpoint at a time","lock access to endpoint at a time"],"image":"https://i.imgur.com/mErPwqL.png","tags":["fastapi","python","http"],"last_update":{"date":"2023-06-21T00:00:00.000Z","author":"frank"}},"prevItem":{"title":".NET Finalizer","permalink":"/blog/dotnet-finalizer"},"nextItem":{"title":"Frequently Asked Questions","permalink":"/blog/frequently-asked-questions"}},"content":"## Limit Only One Access to Endpoint at a Time\\n\\nLimit only one access to an endpoint at a time with `asyncio.Lock` in `asyncio` in **FastAPI**.\\n\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport CodeSource from \'!!raw-loader!../code-snippets/app_request_lock.py\';\\n\\n<CodeBlock language=\\"python\\" title=\\"../code-snippets/app_request_lock.py\\">{CodeSource}</CodeBlock>\\n\\n> NOTE: The `asyncio.Lock` only take effect in the `asyncio` loop level, if using `unicorn` to run server in multiple processes, it can not lock the request! \\n\\nNo limitation.\\n\\nimport CodeSource1 from \'!!raw-loader!../code-snippets/app_request_nolock.py\';\\n\\n<CodeBlock language=\\"python\\" title=\\"../code-snippets/app_request_nolock.py\\">{CodeSource1}</CodeBlock>\\n\\n\\nLimit only one access to an endpoint at a time with `thread.Lock`\\n\\nLimit only one access to an endpoint at a time with `process.Lock`\\n\\n## Attach A Background Service Into the Application\\n\\nRun a background service behind the FastAPI server:\\n\\n- share the same `asyncio` main loop with the server\\n- the service start when the server starts and stop when the server stops\\n- it should be light-weight and non-CPU heavy workload\\n\\n[Coroutines and Tasks \u2014 Python 3.11.4 documentation](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel)\\n[Event Loop \u2014 Python 3.11.4 documentation](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.create_task)\\n\\nimport CodeSourceAppBackgroundService from \'!!raw-loader!../code-snippets/app_background_service.py\';\\n\\n<CodeBlock language=\\"python\\" title=\\"../code-snippets/app_background_service.py\\">{CodeSourceAppBackgroundService}</CodeBlock>"},{"id":"/frequently-asked-questions","metadata":{"permalink":"/blog/frequently-asked-questions","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/frequently-asked-questions.md","source":"@site/../../blog/frequently-asked-questions.md","title":"Frequently Asked Questions","description":"\u26a0\ufe0f Foam is still in preview. Expect the experience to be a little rough.","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":1.2,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"FastAPI Best Practices","permalink":"/blog/fastapi-best-practices"},"nextItem":{"title":"Graphical User Interface(GUI)","permalink":"/blog/graphical-user-interface"}},"content":"> \u26a0\ufe0f Foam is still in preview. Expect the experience to be a little rough.\\n\\n- [Frequently Asked Questions](#frequently-asked-questions)\\n  - [Links/Graphs/BackLinks don\'t work. How do I enable them?](#linksgraphsbacklinks-dont-work-how-do-i-enable-them)\\n  - [I don\'t want Foam enabled for all my workspaces](#i-dont-want-foam-enabled-for-all-my-workspaces)\\n  - [I want to publish the graph view to GitHub pages or Vercel](#i-want-to-publish-the-graph-view-to-github-pages-or-vercel)\\n\\n## Links/Graphs/BackLinks don\'t work. How do I enable them?\\n\\n- Ensure that you have all the [[recommended-extensions]] installed in Visual Studio Code\\n- Reload Visual Studio Code by running `Cmd` + `Shift` + `P` (`Ctrl` + `Shift` + `P` for Windows), type \\"reload\\" and run the **Developer: Reload Window** command to for the updated extensions take effect\\n- Check the formatting rules for links on [[foam-file-format]] and [[wikilinks]]\\n\\n## I don\'t want Foam enabled for all my workspaces\\nAny extension you install in Visual Studio Code is enabled by default. Given the philosophy of Foam, it works out of the box without doing any configuration upfront. In case you want to disable Foam for a specific workspace, or disable Foam by default and enable it for specific workspaces, it is advised to follow the best practices as [documented by Visual Studio Code](https://code.visualstudio.com/docs/editor/extension-marketplace#_manage-extensions)\\n\\n## I want to publish the graph view to GitHub pages or Vercel\\nIf you want a different front-end look to your published foam and a way to see your graph view, we\'d recommend checking out these templates:\\n- [foam-gatsby](https://github.com/mathieudutour/foam-gatsby-template) by [Mathieu Dutour](https://github.com/mathieudutour)\\n- [foam-gatsby-kb](https://github.com/hikerpig/foam-template-gatsby-kb) by [hikerpig](https://github.com/hikerpig)"},{"id":"/graphical-user-interface","metadata":{"permalink":"/blog/graphical-user-interface","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/graphical-user-interface.md","source":"@site/../../blog/graphical-user-interface.md","title":"Graphical User Interface(GUI)","description":"Modern GUI composition of:","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":1.155,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Frequently Asked Questions","permalink":"/blog/frequently-asked-questions"},"nextItem":{"title":"Hello from Docusaurus","permalink":"/blog/doc-with-tags"}},"content":"Modern GUI composition of:\\n\\n- Windowing System/Compositor\\n  - Quartz Compositor(OSX)\\n  - Desktop Window Manager(Windows)\\n  - X11(Linux)\\n  - Wayland(Linux)\\n  - SurfaceFlinger(Android)\\n- Graphic Rendering\\n  - Hardware-Accelerated Rendering\\n    - OpenGL\\n    - Vulkan\\n    - DirectX\\n  - Software Rendering\\n    - QT Rasterization Engine\\n\\nWindowing System\\n\\nIt\'s very essential to apply the `native Windowing System` library for Cross-platform GUI framework in different platforms. Here\'s a cue from [including native windowing system headers from GLFW](https://github.com/glfw/glfw/blob/3a60992a418aad88717db32353bec22e8bb7dab3/include/GLFW/glfw3native.h#L94-L118)\\n\\n```c\\n#if !defined(GLFW_NATIVE_INCLUDE_NONE)\\n #if defined(GLFW_EXPOSE_NATIVE_WIN32) || defined(GLFW_EXPOSE_NATIVE_WGL)\\n  /* This is a workaround for the fact that glfw3.h needs to export APIENTRY (for\\n   * example to allow applications to correctly declare a GL_KHR_debug callback)\\n   * but windows.h assumes no one will define APIENTRY before it does\\n   */\\n  #if defined(GLFW_APIENTRY_DEFINED)\\n   #undef APIENTRY\\n   #undef GLFW_APIENTRY_DEFINED\\n  #endif\\n  #include <windows.h>\\n #elif defined(GLFW_EXPOSE_NATIVE_COCOA) || defined(GLFW_EXPOSE_NATIVE_NSGL)\\n  #if defined(__OBJC__)\\n   #import <Cocoa/Cocoa.h>\\n  #else\\n   #include <ApplicationServices/ApplicationServices.h>\\n   #include <objc/objc.h>\\n  #endif\\n #elif defined(GLFW_EXPOSE_NATIVE_X11) || defined(GLFW_EXPOSE_NATIVE_GLX)\\n  #include <X11/Xlib.h>\\n  #include <X11/extensions/Xrandr.h>\\n #elif defined(GLFW_EXPOSE_NATIVE_WAYLAND)\\n  #include <wayland-client.h>\\n #endif\\n```\\n\\n[Windowing system - Wikipedia](https://en.wikipedia.org/wiki/Windowing_system)\\n\\n[GUI Under Linux | Baeldung on Linux](https://www.baeldung.com/linux/gui)\\n\\n[GTK - Wikipedia](https://en.wikipedia.org/wiki/GTK)\\n\\nGraphic Render APIs/Libraries\\n\\n[A Comparison of Modern Graphics APIs](https://alain.xyz/blog/comparison-of-modern-graphics-apis)\\n\\n## Android graphics\\n\\ntwo core pieces:\\n\\n- SurfaceFlinger\\n- Skia\\n\\n[Graphics \xa0|\xa0 Android Open Source Project](https://source.android.com/devices/graphics)\\n[Android Graphics Internals - Stack Overflow](https://stackoverflow.com/questions/4579573/android-graphics-internals)\\n\\n## WayLand\\n\\n[What is Wayland? \xb7 Writing Wayland clients](https://bugaevc.gitbooks.io/writing-wayland-clients/content/about-this-book/what-is-wayland.html)\\n\\n[The Hello Wayland Tutorial | FLOSS & Cia](https://hdante.wordpress.com/2014/07/08/the-hello-wayland-tutorial/)\\n\\n[How to use Wayland with C to make a Linux app | by Sergey Bugaev | Medium](https://medium.com/@bugaevc/how-to-use-wayland-with-c-to-make-a-linux-app-c2673a35ce05)"},{"id":"doc-with-tags","metadata":{"permalink":"/blog/doc-with-tags","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/greeting.md","source":"@site/../../blog/greeting.md","title":"Hello from Docusaurus","description":"Create a doc page with rich content.","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"Demo","permalink":"/blog/tags/demo"},{"label":"Getting started","permalink":"/blog/tags/getting-started"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[],"frontMatter":{"description":"Create a doc page with rich content.","slug":"doc-with-tags","tags":["Demo","Getting started"],"last_update":{"date":"2023-05-30T00:00:00.000Z","author":"custom author name"}},"prevItem":{"title":"Graphical User Interface(GUI)","permalink":"/blog/graphical-user-interface"},"nextItem":{"title":"IoC","permalink":"/blog/ioc"}},"content":"Are you ready to create the documentation site for your open source project?\\n\\n## Headers\\n\\nwill show up on the table of contents on the upper right\\n\\nSo that your users will know what this page is all about without scrolling down or even without reading too much.\\n\\n## Only h2 and h3 will be in the TOC by default.\\n\\nYou can configure the TOC heading levels either per-document or in the theme configuration.\\n\\nThe headers are well-spaced so that the hierarchy is clear.\\n\\n- lists will help you\\n- present the key points\\n- that you want your users to remember\\n  - and you may nest them\\n    - multiple times"},{"id":"/ioc","metadata":{"permalink":"/blog/ioc","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/ioc.md","source":"@site/../../blog/ioc.md","title":"IoC","description":"Introduction IoC, DIP, DI and IoC Container","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"circular-dependencies","permalink":"/blog/tags/circular-dependencies"},{"label":"inversion-of-control","permalink":"/blog/tags/inversion-of-control"},{"label":"dependency-injection","permalink":"/blog/tags/dependency-injection"}],"readingTime":0.16,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["circular-dependencies","inversion-of-control","dependency-injection"]},"prevItem":{"title":"Hello from Docusaurus","permalink":"/blog/doc-with-tags"},"nextItem":{"title":"Learn CMake","permalink":"/blog/learn-cmake"}},"content":"[Introduction IoC, DIP, DI and IoC Container](https://www.tutorialsteacher.com/ioc/introduction)\\n\\n[Lazily resolving services to fix `circular dependencies` in .NET Core - Thomas Levesque\'s .NET Blog](https://thomaslevesque.com/2020/03/18/lazily-resolving-services-to-fix-circular-dependencies-in-net-core/)\\n\\n[Dealing With `Circular Dependency` Injection References - .NET Core Tutorials](https://dotnetcoretutorials.com/2020/09/14/dealing-with-circular-dependency-injection-references/)"},{"id":"/learn-cmake","metadata":{"permalink":"/blog/learn-cmake","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-cmake.md","source":"@site/../../blog/learn-cmake.md","title":"Learn CMake","description":"Learn CMake","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"cmake","permalink":"/blog/tags/cmake"},{"label":"template","permalink":"/blog/tags/template"}],"readingTime":1.79,"hasTruncateMarker":true,"authors":[],"frontMatter":{"sidebar_label":"Learn CMake","description":"Learn CMake","keywords":["cmake","project structure"],"image":"https://i.imgur.com/mErPwqL.png","tags":["cmake","template"],"last_update":{"date":"2023-06-25T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"IoC","permalink":"/blog/ioc"},"nextItem":{"title":"Learn CUDA","permalink":"/blog/learn-cuda"}},"content":"It\u2019s all about targets and properties\\n\\n\x3c!--truncate--\x3e\\n\\n[[learn-vcpkg]](./learn-vcpkg.md)\\n\\n## CMake Project Structure\\n\\nA typical **CMake** project can be regarded to has three `Tree`:\\n\\n**Source Tree**:\\n\\n```sh\\nproject_root\\n\u251c\u2500\u2500 CMakeLists.txt\\n\u251c\u2500\u2500 simple_example.cpp\\n\u251c\u2500\u2500 simple_lib.cpp\\n\u2514\u2500\u2500 simple_lib.hpp\\n```\\n\\n**Build Tree**:\\n\\n```sh\\nproject_root\\n\u251c\u2500\u2500 CMakeLists.txt\\n\u251c\u2500\u2500 simple_example.cpp\\n\u251c\u2500\u2500 simple_lib.cpp\\n\u251c\u2500\u2500 simple_lib.hpp\\n\u2514\u2500\u2500 build\\n    \u2514\u2500\u2500 CMakeCache.txt\\n```\\n\\n**Install Tree**:\\n\\nThis tree is located in the `CMAKE_INSTALL_PREFIX`, of which default value is platform-dependent. By default, it is set to `/usr/local` on Unix-like systems (Linux, macOS) and `C:/Program Files/<Project Name>` on Windows..\\n\\nTo change it, you can pass `-DCMAKE_INSTALL_PREFIX` argument during CMake `configuration` step, like this:\\n\\n```sh\\ncmake -B build -S . -DCMAKE_INSTALL_PREFIX=/my/custom/installation/path\\n```\\n\\nAlternatively, you can change it by passing `--prefix`(it can be relative path) argument during CMake `install` step, like this:\\n\\n```sh\\ncmake --install build --prefix \\"/my/custom/installation/path\\"\\n```\\n\\nIt\'s recommended to use a default install layout as `GNUInstallDirs`.\\n\\nWhen setting `cmake --install build --prefix \\"./install`, the **install** tree will be like:\\n\\n```sh\\nproject_root\\n\u251c\u2500\u2500 CMakeLists.txt\\n\u251c\u2500\u2500 simple_example.cpp\\n\u251c\u2500\u2500 simple_lib.cpp\\n\u251c\u2500\u2500 simple_lib.hpp\\n\u251c\u2500\u2500 build\\n\u2502   \u2514\u2500\u2500 CMakeCache.txt\\n\u2514\u2500\u2500 install\\n    \u251c\u2500\u2500 bin\\n    \u2502   \u2514\u2500\u2500 executables\\n    \u251c\u2500\u2500 sbin\\n    \u2502   \u2514\u2500\u2500 sysadmin executables\\n    \u251c\u2500\u2500 lib\\n    \u2502   \u251c\u2500\u2500 compiled libraries (*.so (unix) or *.dll (windows))\\n    \u2502   \u2514\u2500\u2500 library archive files (*.lib (windows))\\n    \u251c\u2500\u2500 libexec\\n    \u2502   \u2514\u2500\u2500 executables not directly invoked by user\\n    \u251c\u2500\u2500 include\\n    \u2502   \u2514\u2500\u2500 header files\\n    \u2514\u2500\u2500 doc\\n       \u2514\u2500\u2500 documentation\\n```\\n\\n## How CMake Works\\n\\nA typical workflow of CMake includes `Configure`, `Build` and `Install` steps, combined with the above mentioned `Trees` concepts.\\n\\n`Configure` step will generate a sort of configuration files, the most important ones among them are `CMakeCache.txt`, `cmake_install.cmake` and `Makefile` if using `Make` as building system. With these generated configuration files, the later steps `Build` and `Install` will run according to them.\\n`Build` step will generate the build binary directory.\\n`Install` step will generate the install binary directory.\\n\\n## How to make your package be found by others by `find_package()`\\n\\npackage configuration files: `find_package`\\n\\n[Title](https://cmake.org/cmake/help/latest/guide/importing-exporting/index.html#importing-targets)\\n\\n## RPATH in CMake\\n\\n[^rpath]\\n\\n## CMake Variables\\n\\nThere are some useful and important CMake variables that will be introduced here:\\n\\n`CMAKE_PREFIX_PATH`\\n\\n`CMAKE_IGNORE_PATH`\\n\\n## References\\n\\n[CMake hands-on workshop \u2014 CMake Workshop](https://enccs.github.io/cmake-workshop/)\\n[^rpath]: [RPATH handling from official cmake](https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-handling)"},{"id":"/learn-cuda","metadata":{"permalink":"/blog/learn-cuda","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-cuda.md","source":"@site/../../blog/learn-cuda.md","title":"Learn CUDA","description":"Learn CUDA","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"learn","permalink":"/blog/tags/learn"},{"label":"gpu","permalink":"/blog/tags/gpu"},{"label":"cuda","permalink":"/blog/tags/cuda"}],"readingTime":0.225,"hasTruncateMarker":true,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/learn-cuda.md"},"sidebar_label":"Learn CUDA","description":"Learn CUDA","keywords":["gpu","cuda"],"image":"https://i.imgur.com/mErPwqL.png","tags":["learn","gpu","cuda"],"last_update":{"date":"2023-06-29T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"Learn CMake","permalink":"/blog/learn-cmake"},"nextItem":{"title":"Learn PowerShell","permalink":"/blog/learn-powershell"}},"content":"Ecosystem:\\n\\n- GPU(Hardware)\\n- Nvidia Graphics Driver\\n- CUDA Toolkit\\n- cuDNN\\n\\n\x3c!--truncate--\x3e\\n\\n![CUDA Components](https://docs.nvidia.com/deploy/cuda-compatibility/graphics/CUDA-components.png)\\n\\n## CUDA on WSL\\n\\nNVIDIA CUDA software stack on WSL 2:\\n\\n![NVIDIA CUDA software stack on WSL 2](https://docs.nvidia.com/cuda/wsl-user-guide/_images/wsl-launch-upt-0625-rz.png)\\n\\n\\n## References\\n\\n[CUDA And Nvidia Graphics Driver](https://docs.nvidia.com/deploy/cuda-compatibility/index.html)\\n\\n[CUDA on WSL User Guide](https://docs.nvidia.com/cuda/wsl-user-guide/index.html)"},{"id":"/learn-powershell","metadata":{"permalink":"/blog/learn-powershell","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-powershell.md","source":"@site/../../blog/learn-powershell.md","title":"Learn PowerShell","description":"Learn PowerShell","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"powershell","permalink":"/blog/tags/powershell"},{"label":"learn","permalink":"/blog/tags/learn"}],"readingTime":0.15,"hasTruncateMarker":true,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/learn-powershell.md"},"sidebar_label":"Learn PowerShell","description":"Learn PowerShell","keywords":["learn powershell"],"image":"https://i.imgur.com/mErPwqL.png","tags":["powershell","learn"],"last_update":{"date":"2023-06-26T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"Learn CUDA","permalink":"/blog/learn-cuda"},"nextItem":{"title":"Learn Vcpkg","permalink":"/blog/learn-vcpkg"}},"content":"Set environment variables permanently\\n\\n```powershell\\n[Environment]::SetEnvironmentVariable(\\"VCPKG_ROOT\\", \\"Whatever you need it to be\\", \\"Machine\\")\\n```\\n\\n\x3c!--truncate--\x3e\\n\\nGet environment variables\\n\\n```powershell\\n# Get all variables\\n[Environment]::GetEnvironmentVariable()\\n\\n# Get specific variable\\n[Environment]::GetEnvironmentVariable(\\"VCPKG_ROOT\\")\\n```"},{"id":"/learn-vcpkg","metadata":{"permalink":"/blog/learn-vcpkg","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-vcpkg.md","source":"@site/../../blog/learn-vcpkg.md","title":"Learn Vcpkg","description":"learn vcpkg","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"blog","permalink":"/blog/tags/blog"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":1.045,"hasTruncateMarker":true,"authors":[],"frontMatter":{"sidebar_label":"learn vcpkg","description":"learn vcpkg","keywords":["docs","docusaurus"],"image":"https://i.imgur.com/mErPwqL.png","tags":["blog","docusaurus"],"last_update":{"date":"2023-06-23T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"Learn PowerShell","permalink":"/blog/learn-powershell"},"nextItem":{"title":"LevelDB","permalink":"/blog/leveldb"}},"content":"TODO: Fix qtbase tools/config in release/debug osx  \\n\\nhttps://github.com/microsoft/vcpkg/tree/master/ports/qtbase\\n\\nhttps://learn.microsoft.com/en-us/vcpkg/maintainers/functions/vcpkg_cmake_config_fixup\\n\\n\x3c!--truncate--\x3e\\n\\n## Manifest Mode\\n\\n## Classic Mode\\n\\n## Useful Environment variables\\n\\n`CURRENT_INSTALLED_DIR`\\n`CURRENT_PACKAGES_DIR`\\n\\n```sh\\nset(VCPKG_RELEASE_LIBDIR \\"${CURRENT_INSTALLED_DIR}/lib\\")\\nset(VCPKG_DEBUG_LIBDIR \\"${CURRENT_INSTALLED_DIR}/debug/lib\\")\\nset(VCPKG_TOOLS_DIR \\"${CURRENT_INSTALLED_DIR}/tools\\")\\nset(VCPKG_SHARE_DIR \\"${CURRENT_INSTALLED_DIR}/share\\")\\nset(VCPKG_INCLUDE_DIR \\"${CURRENT_INSTALLED_DIR}/include\\")\\n```\\n\\n## Tips and Tricks\\n\\n### Reinstall packages without caching\\n\\n```sh\\nvcpkg remove icu --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic\\nvcpkg install icu --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --no-binarycaching\\nvcpkg install libpq --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --binarysource=clear\\nvcpkg remove libpq --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic\\n\\nvcpkg remove \\"qtbase[gui,widgets]\\" --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic\\nvcpkg install \\"qtbase[gui,widgets]\\" --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --no-binarycaching\\nvcpkg install \\"qtbase[gui,widgets]\\" --host-triplet=arm64-osx-dynamic --triplet=arm64-osx-dynamic --binarysource=clear\\n```\\n\\n### Clean up all packages\\n\\n```sh\\nrm -rf /opt/vcpkg/installed/\\nrm -rf /opt/vcpkg/packages/\\nrm -rf /opt/vcpkg/buildtrees/\\n```\\n\\n```sh\\n```\\n\\n### Clean up all caching packages\\n\\n```sh\\nrm -rf ~/.cache/vcpkg/archives/\\n```\\n\\n### `INSTALL_RPATH_USE_LINK_PATH` different behaviours in `manifest` and `classic` mode\\n\\n`INSTALL_RPATH_USE_LINK_PATH` will not work properly when being used in the `manifest` mode, because `CMake` will don\'t handle libraries located in `buildtree`:\\n\\n```sh\\nset_target_properties(${PROJECT_NAME} PROPERTIES\\n    INSTALL_RPATH \\"@executable_path/../Frameworks\\"\\n    INSTALL_RPATH_USE_LINK_PATH ON\\n)\\n```\\n\\nAfter `${PROJECT_NAME}` installed, in the `manifest` mode:\\n\\n```sh\\n\u276f otoolll /Users/frankchen/Documents/vcpkg-qt-app/install/./helloworld.app/Contents/MacOS/helloworld\\n          cmd LC_RPATH\\n      cmdsize 48\\n         path @executable_path/../Frameworks (offset 12)\\n```\\n\\nAfter `${PROJECT_NAME}` installed, in the `classic` mode:\\n\\n```sh\\n\u276f otoolll /Users/frankchen/Documents/vcpkg-qt-app/install/./helloworld.app/Contents/MacOS/helloworld\\n          cmd LC_RPATH\\n      cmdsize 56\\n         path /opt/vcpkg/installed/arm64-osx-dynamic/lib (offset 12)\\nLoad command 27\\n      cmd LC_FUNCTION_STARTS\\n--\\n          cmd LC_RPATH\\n      cmdsize 48\\n         path @executable_path/../Frameworks (offset 12)\\n```\\n\\n\\n[[learn-cmake#RPATH in CMake]](./learn-cmake.md#rpath-in-cmake)"},{"id":"/leveldb","metadata":{"permalink":"/blog/leveldb","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/leveldb.md","source":"@site/../../blog/leveldb.md","title":"LevelDB","description":"Principle and use of leveldb - Birost","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.085,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Learn Vcpkg","permalink":"/blog/learn-vcpkg"},"nextItem":{"title":"Your markdown including PlantUML code block","permalink":"/blog/markdown-plantuml"}},"content":"[Principle and use of leveldb - Birost](https://blog.birost.com/a?ID=00650-1d5c18b6-1dac-46da-bbf8-80a5257e7bdd)\\n\\n[SSTable and Log Structured Storage: LevelDB - igvita.com](https://www.igvita.com/2012/02/06/sstable-and-log-structured-storage-leveldb/)\\n\\n[LevelDB Benchmarks](http://www.lmdb.tech/bench/microbench/benchmark.html)"},{"id":"/markdown-plantuml","metadata":{"permalink":"/blog/markdown-plantuml","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/markdown-plantuml.md","source":"@site/../../blog/markdown-plantuml.md","title":"Your markdown including PlantUML code block","description":"","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.665,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"LevelDB","permalink":"/blog/leveldb"},"nextItem":{"title":"Network Diagnosis","permalink":"/blog/network-diagnosis"}},"content":"```plantumlcode\\n@startuml\\n:User: --\x3e (Use)\\n\\"Main Admin\\" as Admin\\n\\"Use the application\\" as (Use)\\nAdmin --\x3e (Admin the application)\\n@enduml\\n```\\n\\n```plantuml\\n@startuml\\nAlice -> Bob: Authentication Request\\nBob --\x3e Alice: Authentication Response\\n\\nAlice -> Bob: Another authentication Request\\nAlice <-- Bob: Another authentication Response\\n@enduml\\n```\\n\\n```plantuml\\n@startuml\\n!include <material/common>\\n\' To import the sprite file you DON\'T need to place a prefix!\\n!include <material/folder_move>\\n\\nMA_FOLDER_MOVE(Black, 1, dir, rectangle, \\"A label\\")\\n\\nfile \\"source code\\\\n<$ma_folder_move>\\" as code\\nfile CMakefiles\\n@enduml\\n```\\n\\n```plantuml\\n@startuml\\n!include <material/common>\\n!include <material/code_braces>\\n!include <material/code_array>\\n!include <material/code_brackets>\\n!include <material/code_parentheses>\\n!include <material/code_tags>\\n\\nMA_CODE_BRACES(Black, 1, source, file, \\"Source Code\\")\\nMA_CODE_ARRAY(Black, 1, cmake, file, \\"CMakefiles.txt\\")\\nMA_CODE_ARRAY(Black, 1, make, file, \\"Makefile\\")\\nMA_CODE_ARRAY(Black, 1, msbuild, file, \\"MSBuild\\") {\\n}\\n\\nfile Source[\\nSource Code\\n<$ma_code_braces>\\n]\\n\\nfile \\"Source Code\\" {\\n    file \\"<$ma_code_braces>\\"\\n}\\n@enduml\\n```"},{"id":"/network-diagnosis","metadata":{"permalink":"/blog/network-diagnosis","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/network-diagnosis.md","source":"@site/../../blog/network-diagnosis.md","title":"Network Diagnosis","description":"Understanding Routing Table Entry | Baeldung on Computer Science","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"network","permalink":"/blog/tags/network"},{"label":"network/diagnosis","permalink":"/blog/tags/network-diagnosis"},{"label":"netstat","permalink":"/blog/tags/netstat"},{"label":"route","permalink":"/blog/tags/route"},{"label":"traceroute","permalink":"/blog/tags/traceroute"}],"readingTime":2.44,"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["network","network/diagnosis","netstat","route","traceroute"]},"prevItem":{"title":"Your markdown including PlantUML code block","permalink":"/blog/markdown-plantuml"},"nextItem":{"title":"OpenCV tips","permalink":"/blog/opencv-tips"}},"content":"[Understanding Routing Table Entry | Baeldung on Computer Science](https://www.baeldung.com/cs/routing-table-entry)\\n> the packs go through the gateway of interface. the same interface can have multiple gateways and different interfaces can have the same gateway.\\n\\n[route diagnosis](https://forums.developer.nvidia.com/t/ssh-enabled-only-if-connected-through-microusb/192708/12)\\n\\n[3 Ways to Find Which Linux Process Listening on a Port](https://www.tecmint.com/find-out-which-process-listening-on-a-particular-port/)\\n\\n[Monitoring Network Status With the netstat Command - System Administration Guide: IP Services](https://docs.oracle.com/cd/E18752_01/html/816-4554/ipconfig-142.html)\\n> System Administration Guide\\n\\n[How to look up the geographic location of an IP address from the command line](https://www.xmodulo.com/geographic-location-ip-address-command-line.html)\\n> #geolocation-of-ip\\n\\n[A tcpdump Tutorial with Examples \u2014 50 Ways to Isolate Traffic - Daniel Miesslersearchmailmailmail](https://danielmiessler.com/study/tcpdump/)\\n\\n[TCPDump cheatsheet](https://resource.nvidia.com/cheatsheets/linux-networking-cheatsheet-tcpdump)\\n\\n[An introduction to using tcpdump at the Linux command line | Opensource.com](https://opensource.com/article/18/10/introduction-tcpdump)\\n\\nKnowing `simultaneously` these three things for failing and working circumstances would be quite useful.\\n\\n## Show IP Address\\n\\n  ```sh\\n  ifconfig\\n  ```\\n\\n## Show Routing Table\\n  \\n  ```sh\\n  # linux\\n  route\\n  # osx\\n  netstat -rn\\n  ```\\n\\nThe `-r` flag means to show routes.\\n\\nThe `-n` flag means to not resolve IPs to hostnames.\\n\\n## Find Gateway Used for Routing\\n\\n```sh\\n# linux\\nip route get 8.8.8.8\\n# osx\\nroute get 8.8.8.8\\n```\\n\\n## Show Routes across Network\\n\\n  ```sh\\n  traceroute\\n  # en0 interface\\n  traceroute -i en0\\n  ```\\n\\n## Ping Through Specific Interface\\n\\n```sh\\n# linux\\nping -I en0 sslvpn.astri.org\\n# osx\\nping -b en0 sslvpn.astri.org\\n```\\n\\n## Find Out Address Used by Which Process\\n\\n  ```sh\\n  # osx\\n  netstat -avn -p tcp\\n  ```\\n\\n## Add a Route\\n\\n  ```sh\\n  # osx\\n  route -n add 10.0.0.0/24 10.0.0.1\\n  # linux\\n  route -n add -net 10.0.0.0/24 gw 10.0.0.1\\n  ```\\n\\n## FireWall Rule\\n\\nosx:\\n\\n```sh\\n# show all information/stats\\nsudo pfctl -sa\\n# show rules\\nsudo pfctl -sr\\n# sanity check edited configuration file\\nsudo pfctl -v -n -f /etc/pf.conf\\n# load pf with new rules\\nsudo pfctl -f /etc/pf.conf\\n# enable pf\\nsudo pfctl -e\\n# disable pf\\nsudo pfctl -d\\n# add information on the fly\\nsudo pfctl -t localsub -T add 127.0.0.0/24\\n# flush added rules later\\nsudo pfctl -Fa -f /etc/pf.conf\\n\\nsudo pfctl -si\\nsudo pfctl -q\\n```\\n\\n## Get Geolocation of IP Address\\n\\n  ```sh\\n  curl ipinfo.io/103.216.223.161\\n  ```\\n\\n## Packet Analyzer\\n\\n```sh\\n# list which interfaces are available for capture\\ntcpdump --list-interfaces\\n# capture all packets in any interface\\nsudo tcpdump --interface any\\n# limit the number of packets captured then stop `-c number`\\nsudo tcpdump -i any -c 5\\n# disable name resolution with using `-n` and port resolution with `-nn` \\nsudo tcpdump -i any -c5 -nn\\n# filter packets by protocol, only capture `ICMP` packets\\nsudo tcpdump -i any -c5 icmp\\n# capture packets related with host `8.8.8.8`\\nsudo tcpdump -i any -c5 -nn host 8.8.8.8\\n# capture packets related with port `80`\\nsudo tcpdump -i any -c5 -nn port 80\\n# capture packets with source address 192.168.0.1\\nsudo tcpdump -i any -c5 -nn src 192.168.0.1\\n# capture packets with destination address 8.8.8.8\\nsudo tcpdump -i any -c5 -nn dst 8.8.8.8\\n```\\n\\n## USB Virtual Ethernet\\n\\n[An explanation on the USB virtual ethernet](https://forums.developer.nvidia.com/t/provide-internet-through-micro-usb-while-doing-ssh/111326/14)"},{"id":"/opencv-tips","metadata":{"permalink":"/blog/opencv-tips","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/opencv-tips.md","source":"@site/../../blog/opencv-tips.md","title":"OpenCV tips","description":"Q: Whether the image/frame from VideoCapture is in BGR or YUV pixels format?","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.19,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Network Diagnosis","permalink":"/blog/network-diagnosis"},"nextItem":{"title":"Python Module","permalink":"/blog/py-module"}},"content":"Q: Whether the image/frame from VideoCapture is in `BGR` or `YUV` pixels format?\\nA:\\nVideoCapture will convert the image automatically to BGR colorspace.\\nyou can disable this conversion (and receive YUV) by setting the CAP_PROP_CONVERT_RGB property to false."},{"id":"/py-module","metadata":{"permalink":"/blog/py-module","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/py-module.md","source":"@site/../../blog/py-module.md","title":"Python Module","description":"Python Module Search Path","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.075,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"OpenCV tips","permalink":"/blog/opencv-tips"},"nextItem":{"title":"Python Benchmark","permalink":"/blog/python-benchmark"}},"content":"## Python Module Search Path\\n\\n[The Module Search Path](https://docs.python.org/3/tutorial/modules.html#the-module-search-path)\\n\\n[Introduction to Python module search path](https://www.pythontutorial.net/python-basics/python-module-search-path/)"},{"id":"/python-benchmark","metadata":{"permalink":"/blog/python-benchmark","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/python-benchmark.md","source":"@site/../../blog/python-benchmark.md","title":"Python Benchmark","description":"Ok, here is the cost of acquiring and releasing an uncontended lock","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":1.06,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Python Module","permalink":"/blog/py-module"},"nextItem":{"title":"Python Package Management","permalink":"/blog/python-package-management"}},"content":"Ok, here is the cost of acquiring and releasing an uncontended lock\\nunder Linux, with Python 3.2:\\n\\n```sh\\n$ ./python -m timeit \\\\\\n  -s \\"from threading import Lock; l=Lock(); a=l.acquire; r=l.release\\" \\\\\\n  \\"a(); r()\\"\\n10000000 loops, best of 3: 0.127 usec per loop\\n```\\n\\nAnd here is the cost of calling a dummy Python function:\\n\\n```sh\\n$ ./python -m timeit -s \\"def a(): pass\\" \\"a(); a()\\"\\n1000000 loops, best of 3: 0.221 usec per loop\\n```\\n\\nAnd here is the cost of calling a trivial C function (which returns the\\nFalse singleton):\\n\\n```sh\\n$ ./python -m timeit -s \\"a=bool\\" \\"a(); a()\\"\\n10000000 loops, best of 3: 0.164 usec per loop\\n```\\n\\nAlso, note that using the lock as a context manager is actually slower,\\nnot faster as you might imagine:\\n\\n```sh\\n$ ./python -m timeit -s \\"from threading import Lock; l=Lock()\\" \\\\\\n  \\"with l: pass\\"\\n1000000 loops, best of 3: 0.242 usec per loop\\n```\\n\\nAt least under Linux, there doesn\'t seem to be a lot of room for\\nimprovement in lock performance, to say the least.\\n\\nPS: RLock is now as fast as Lock:\\n\\n```sh\\n$ ./python -m timeit \\\\\\n-s \\"from threading import RLock; l=RLock(); a=l.acquire; r=l.release\\" \\\\\\n\\"a(); r()\\"\\n10000000 loops, best of 3: 0.114 usec per loop\\n```"},{"id":"/python-package-management","metadata":{"permalink":"/blog/python-package-management","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/python-package-management.md","source":"@site/../../blog/python-package-management.md","title":"Python Package Management","description":"Python Package Management","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"blog","permalink":"/blog/tags/blog"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.64,"hasTruncateMarker":true,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/python-package-management.md"},"sidebar_label":"Python Package Management","description":"Python Package Management","keywords":["docs","docusaurus"],"image":"https://i.imgur.com/mErPwqL.png","tags":["blog","docusaurus"],"last_update":{"date":"2023-06-26T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"Python Benchmark","permalink":"/blog/python-benchmark"},"nextItem":{"title":"RPC vs MQ","permalink":"/blog/rpc_vs_mq"}},"content":"Foam includes note templates!\\nThis allows you to easily create notes that have similar structure without having to use copy/paste :)\\n\\nTemplates support the [VS Code\'s Snippet Syntax](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax), which means you can:\\n\\n- add variables to the newly created note\\n- add tabstop to automatically navigate to the key parts of the note, just like a form\\nBelow you can see an example showing a todo list and a timestamp.\\n\\n\x3c!--truncate--\x3e\\n\\n\\n## Todo List\\n\\n1. First tabstop\\n2. A second tabstop\\n3. A third tabstop\\n\\nNote Created: 2023-06-26\\n\\n---\\n\\nTry out the above example by running the `Foam: Create New Note From Template` command and selecting the `your-first-template` template. Notice what happens when your new note is created!\\n\\nTo remove this template, simply delete the `.foam/templates/your-first-template.md` file.\\n\\nEnjoy!"},{"id":"/rpc_vs_mq","metadata":{"permalink":"/blog/rpc_vs_mq","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/rpc_vs_mq.md","source":"@site/../../blog/rpc_vs_mq.md","title":"RPC vs MQ","description":"RPC: synchronous, client needs to preserve the request until the client receives response.","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.305,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Python Package Management","permalink":"/blog/python-package-management"},"nextItem":{"title":"Serialization","permalink":"/blog/serialization"}},"content":"RPC: synchronous, client needs to preserve the request until the client receives response.\\nMQ(Message Queue): asynchronous, there is no need for client to wait for the response.\\n\\n[RPC vs. Messaging \u2013 which is faster?](https://particular.net/blog/rpc-vs-messaging-which-is-faster)\\n\\n\\n[Low-latency communication of micro-services in remote, IPC and threading scenarios](https://stackoverflow.com/questions/54091672/low-latency-communication-of-micro-services-in-remote-ipc-and-threading-scenari)\\n\\n## RPC\\n\\n## IPC\\n\\nIPC: (local)Inter-Process Communication\\n\\n[Using gRPC for (local) inter-process communication](https://www.mpi-hd.mpg.de/personalhomes/fwerner/research/2021/09/grpc-for-ipc/)\\n\\n\\n[IPC Benchmark](https://github.com/goldsborough/ipc-bench)\\n\\n## MQ"},{"id":"/serialization","metadata":{"permalink":"/blog/serialization","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/serialization.md","source":"@site/../../blog/serialization.md","title":"Serialization","description":"Serialization","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.49,"hasTruncateMarker":false,"authors":[],"frontMatter":{"type":"data-structure","keywords":["MessagePack","msgpack","json","serialization","Protocol Buffers","Protobuf"],"tag":["msgpack","data structure"]},"prevItem":{"title":"RPC vs MQ","permalink":"/blog/rpc_vs_mq"},"nextItem":{"title":"Skia","permalink":"/blog/skia"}},"content":"[Serialization](https://en.wikipedia.org/wiki/Serialization)\\n\\n[The need for speed \u2014 Experimenting with message serialization](https://medium.com/@hugovs/the-need-for-speed-experimenting-with-message-serialization-93d7562b16e4)\\n\\n[MessagePack, Json, Protobuf](https://github.com/neuecc/MessagePack-CSharp/issues/819#issuecomment-586125191)\\n\\nIn computing, `serialization` is the process of translating a data structure or object into a format that can be stored(for example, in a file or memory buffer) or transmitted(for example, over a computer network) and reconstructed later (possibly in a different computer environment).\\n\\n## Json\\n\\n## MessagePack\\n\\n[msgpack GitHub](https://github.com/msgpack/msgpack)\\n\\n## Protocol Buffers\\n\\n[Protocol Buffers](https://developers.google.com/protocol-buffers)\\n\\n## Supported Features\\n\\n| Protocol    | Discriminator Property & Polymorphism |\\n| ----------- | :-----------------------------------: |\\n| Json        |                   \u2714\ufe0f                   |\\n| MessagePack |                   \u2714\ufe0f                   |\\n| Protobuf    |                   \u2716\ufe0f                   |"},{"id":"/skia","metadata":{"permalink":"/blog/skia","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/skia.md","source":"@site/../../blog/skia.md","title":"Skia","description":"What the difference between SkImage/SkPicture/SkCanvas/SkSurface?","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":0.54,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Serialization","permalink":"/blog/serialization"},"nextItem":{"title":"VPN","permalink":"/blog/vpn"}},"content":"[What the difference between SkImage/SkPicture/SkCanvas/SkSurface?](https://groups.google.com/g/skia-discuss/c/rNWV-oYtps)\\n\\n[SkBitmap based SkCanvas very slow... How to improve draw speeds?](https://groups.google.com/g/skia-discuss/c/zatUu89s5_I)\\n\\n[How to move SkImage from CPU to GPU?](https://groups.google.com/g/skia-discuss/c/M6G_bQd8Vf8)\\n\\n[How to control the SkImage GPU back cache size?](https://groups.google.com/g/skia-discuss/c/EqvExXnEUbI)\\n\\nAs far as I understand when I load SkImage from file or SkBitmap the SkImage lives in CPU side memory. Then the moment I draw this SkImage on a GPU backed canvas it will make a copy of the CPU data into a GPU backed texture. So now we technically have two copies available on the SkImage. Then each time I draw that SkImage it will do it quickly cause it\'s already in the GPU side."},{"id":"/vpn","metadata":{"permalink":"/blog/vpn","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/vpn.md","source":"@site/../../blog/vpn.md","title":"VPN","description":"OpenVPN: how secure virtual private networks really work","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"network","permalink":"/blog/tags/network"},{"label":"network/vpn","permalink":"/blog/tags/network-vpn"},{"label":"network/router","permalink":"/blog/tags/network-router"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[],"frontMatter":{"keywords":["vpn"],"tags":["network","network/vpn","network/router"],"more_data":["Can be provided",{"as":"objects","or":"arrays"}]},"prevItem":{"title":"Skia","permalink":"/blog/skia"},"nextItem":{"title":"WiFi AutoSwitch Windows","permalink":"/blog/wifi-autoswitch-windows"}},"content":"[OpenVPN: how secure virtual private networks really work](https://cloudacademy.com/blog/openvpn-how-secure-virtual-private-networks-really-work/)\\n> !!!Favorite explanation\\n\\n[ip - How do VPN\'s forward network traffic? (Layer 3) - Network Engineering Stack Exchange](https://networkengineering.stackexchange.com/questions/51159/how-do-vpns-forward-network-traffic-layer-3)\\n\\n## Routers Support for VPN(OpenVPN) Client\\n\\n[How to set up a router with Surfshark? \u2013 Surfshark Customer Support](https://support.surfshark.com/hc/en-us/articles/360003103833-How-to-set-up-a-router-with-Surfshark-)\\n\\n[Routers Supporting VPN Client - Home Network Community](https://community.tp-link.com/en/home/forum/topic/272492)\\n\\n## Kill Switch\\n\\nKillSwitch could be used to block outgoing traffic when the VPN connection drops and crashes.\\n\\n## PF(packet filter) MacOS\\n\\n[Setting up correctly Packet Filter (pf) firewall on any macOS](https://iyanmv.medium.com/setting-up-correctly-packet-filter-pf-firewall-on-any-macos-from-sierra-to-big-sur-47e70e062a0e)\\n\\n[Prevent outgoing traffic unless OpenVPN connection is active using pf.conf on Mac OS X](https://superuser.com/questions/468919/prevent-outgoing-traffic-unless-openvpn-connection-is-active-using-pf-conf-on-ma)\\n\\n[Quick and easy pf (packet filter) firewall rules on macOS](https://blog.neilsabol.site/post/quickly-easily-adding-pf-packet-filter-firewall-rules-macos-osx/)\\n\\n[A Cheat Sheet For Using pf in OS X Lion and Up](https://krypted.com/mac-security/a-cheat-sheet-for-using-pf-in-os-x-lion-and-up/)\\n\\n[OS X PF Manual](https://murusfirewall.com/Documentation/OS%20X%20PF%20Manual.pdf)\\n\\n## Set Up Firewall to Allow Access Only via VPN(KillSwitch)\\n\\n[ENABLING VPN-ONLY ACCESS TO THE INTERNET WITH WINDOWS FIREWALL](https://zorrovpn.com/articles/windows-firewall-vpn-only?lang=en)\\n\\n[KillSwitch for macOS](https://github.com/vpn-kill-switch/killswitch)\\n\\n[Prevent outgoing traffic unless OpenVPN connection is active using pf.conf on Mac OS X](https://superuser.com/questions/468919/prevent-outgoing-traffic-unless-openvpn-connection-is-active-using-pf-conf-on-ma)"},{"id":"/wifi-autoswitch-windows","metadata":{"permalink":"/blog/wifi-autoswitch-windows","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/wifi-autoswitch-windows.md","source":"@site/../../blog/wifi-autoswitch-windows.md","title":"WiFi AutoSwitch Windows","description":"WiFi AutoSwitch Windows","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[{"label":"autoswitch","permalink":"/blog/tags/autoswitch"},{"label":"wifi","permalink":"/blog/tags/wifi"},{"label":"windows","permalink":"/blog/tags/windows"}],"readingTime":0.855,"hasTruncateMarker":false,"authors":[],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/wifi-autoswitch-windows.md"},"sidebar_label":"WiFi AutoSwitch Windows","description":"WiFi AutoSwitch Windows","keywords":["autoswitch","wifi","windows"],"image":"https://i.imgur.com/mErPwqL.png","tags":["autoswitch","wifi","windows"],"last_update":{"date":"2023-06-01T00:00:00.000Z","author":"frank"}},"prevItem":{"title":"VPN","permalink":"/blog/vpn"},"nextItem":{"title":"WPF","permalink":"/blog/wpf"}},"content":"If **autoSwitch** is turned on, it allows Windows to continue looking for other auto-connected wireless networks while connected to the current wireless network. If a higher priority auto-connected wireless network than the currently connected wireless network comes in range, Windows will automatically connect to it instead.\\n\\nIt also needs to work along with `priority` setting.\\n\\nFor example:\\n\\nThere\'re 3 networks of profile name: `TP-Link-1`, `TP-Link-2` and `TP-Link-3`. PC(windows) will try to connect `TP-Link-3` if it\'s in range when it\'s already connected to `TP-Link-1` or `TP-Link-2`.\\n\\n1. Setup `autoswitch`:\\n\\n```sh\\nnetsh wlan set profileparameter name=\\"TP-Link-1\\" autoswitch=Yes\\nnetsh wlan set profileparameter name=\\"TP-Link-2\\" autoswitch=Yes\\nnetsh wlan set profileparameter name=\\"TP-Link-3\\" autoswitch=No\\n```\\n\\n2. Setup `priority`:\\n\\n```sh\\nnetsh wlan set profileorder name=\\"TP-Link-1\\" interface=\\"Wi-Fi\\" priority=3\\nnetsh wlan set profileorder name=\\"TP-Link-2\\" interface=\\"Wi-Fi\\" priority=2\\nnetsh wlan set profileorder name=\\"TP-Link-3\\" interface=\\"Wi-Fi\\" priority=1\\n```\\n\\nother tools:\\n\\nList profile name:\\n\\n```sh\\nnetsh wlan show profiles\\n```\\n\\nList connected WiFi:\\n\\n```sh\\nnetsh wlan show interfaces\\n```\\n\\n[Enable Auto Switch for Wireless Network Connection in Windows 10](https://winaero.com/enable-auto-switch-for-wireless-network-connection-in-windows-10/)\\n\\n[Change WiFi network priority in Windows 10](https://winaero.com/change-wifi-network-priority-in-windows-10/)"},{"id":"/wpf","metadata":{"permalink":"/blog/wpf","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/wpf.md","source":"@site/../../blog/wpf.md","title":"WPF","description":"GitHub - SingletonSean/wpf-tutorials: Tutorial source code for WPF concepts.","date":"2023-08-14T08:55:33.000Z","formattedDate":"August 14, 2023","tags":[],"readingTime":1.19,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"WiFi AutoSwitch Windows","permalink":"/blog/wifi-autoswitch-windows"},"nextItem":{"title":"Keyboard Shortcut Collection","permalink":"/blog/keyboard-shortcut-collection"}},"content":"[GitHub - SingletonSean/wpf-tutorials: Tutorial source code for WPF concepts.](https://github.com/SingletonSean/wpf-tutorials)\\n\\n[GitHub - liviaerxin/WPF-MVVM-EFC-Example: \ud83d\udcf2 MVVM (WPF) application built with EFCore, Abstract Factory pattern and dependency injection (Microsoft Unity)](https://github.com/liviaerxin/WPF-MVVM-EFC-Example)\\n\\n## MVVM\\n\\n[MVVM Pattern Made Simple - CodeProject](https://www.codeproject.com/Articles/278901/MVVM-Pattern-Made-Simple)\\n\\n[MVVM in Depth - CodeProject](https://www.codeproject.com/Articles/659614/MVVM-in-Depth)\\n\\n[My attempt to understand MVVM pattern and questions raised during it : csharp](https://www.reddit.com/r/csharp/comments/i3pbmt/my_attempt_to_understand_mvvm_pattern_and/)\\n\\n[Patterns - WPF Apps With The Model-View-ViewModel Design Pattern | Microsoft Docs](https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/february/patterns-wpf-apps-with-the-model-view-viewmodel-design-pattern)\\n\\n[Introduction to the MVVM Toolkit - Windows Community Toolkit | Microsoft Docs](https://docs.microsoft.com/en-us/windows/communitytoolkit/mvvm/introduction)\\n\\n## Features\\n\\n- IoC, Inversion of Control\\n- DI, Dependency Injection\\n- Navigation\\n- ViewModel-to-ViewModel Communication\\n  - [MVVM Light Messenger](https://dotnetpattern.com/mvvm-light-messenger/)\\n  - [Event Aggregator | Prism](https://prismlibrary.com/docs/event-aggregator.html)\\n  - [ReactiveUI - Message Bus](https://www.reactiveui.net/docs/handbook/message-bus/)\\n- Observable Object in ViewModel\\n  - Wrapping a non-observable model\\n\\n    ```C#\\n    // https://docs.microsoft.com/en-us/windows/communitytoolkit/mvvm/observableobject#wrapping-a-non-observable-model\\n    public class ObservableUser : ObservableObject\\n    {\\n        private readonly User user;\\n\\n        public ObservableUser(User user) => this.user = user;\\n\\n        public string Name\\n        {\\n            get => user.Name;\\n            set => SetProperty(user.Name, value, user, (u, n) => u.Name = n);\\n        }\\n    }\\n    ```\\n\\n## Principles\\n\\n![MVVM Application](../img/mvvm-application.png)\\n\\n- View-to-ViewModel one-to-one/many-to-one mapping\\n- ViewModel-to-ViewModel communication\\n- ViewModel-to-Model one-to-one/one-to-many binding\\n\\n## Access Database\\n\\nDAO or Repository\\n\\nEntity\\nDB Context\\n\\n## ReactiveUI\\n\\n[To property - pasoft-share/ReactiveUI](https://pasoft-sharereactiveui.readthedocs.io/en/stable/basics/to-property/)\\n\\nOne of the core features of ReactiveUI is to be able to convert properties to Observables, via WhenAny , and to convert Observables into Properties, via a method called ToProperty . These properties are called Output Properties in ReactiveUI, and they are a huge part of using the framework effectively."},{"id":"/keyboard-shortcut-collection","metadata":{"permalink":"/blog/keyboard-shortcut-collection","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/keyboard-shortcut-collection.md","source":"@site/../../blog/keyboard-shortcut-collection.md","title":"Keyboard Shortcut Collection","description":"Keyboard Shortcut Collection","date":"2023-08-13T00:00:00.000Z","formattedDate":"August 13, 2023","tags":[{"label":"best practice","permalink":"/blog/tags/best-practice"}],"readingTime":0.05,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["best practice"],"description":"Keyboard Shortcut Collection","keywords":["Keyboard Shortcut Collection"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-13T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"WPF","permalink":"/blog/wpf"},"nextItem":{"title":"Set Up Samba Server in Docker","permalink":"/blog/docker-setup-samba-server"}},"content":"[VS Code Keyboard Shortcuts Macos](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf)\\n\\n[VS Code Keyboard Shortcuts Windows](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf)"},{"id":"/docker-setup-samba-server","metadata":{"permalink":"/blog/docker-setup-samba-server","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docker-setup-samba-server.mdx","source":"@site/../../blog/docker-setup-samba-server.mdx","title":"Set Up Samba Server in Docker","description":"Set Up Samba Server in Docker","date":"2023-08-12T00:00:00.000Z","formattedDate":"August 12, 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"samba","permalink":"/blog/tags/samba"}],"readingTime":3.01,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["docker","samba"],"description":"Set Up Samba Server in Docker","keywords":["Set Up Samba Server in Docker"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-12T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Keyboard Shortcut Collection","permalink":"/blog/keyboard-shortcut-collection"},"nextItem":{"title":"Set Up NFS Sever In Docker","permalink":"/blog/docker-setup-nfs-sever"}},"content":"**!IMPORTANT**: Permission setting is very annoying but critical, sometimes you need take long time to fine tune it and debug.\\n**!IMPORTANT**: When setting up a Samba server in Docker in OSX, you will encounter problems such as `Operation not suppored` when using `bind mount`. Roughly saying, the reason is Docker run in a light VM in Mac and your Mac host uses a different file system(HFS+) compared to Linux(ext4 or similar). So switching to `volume mount` will solve this potential problem.\\n\\nSome takeaways about Permission:\\n\\n- Creating and deleting files is controlled by permissions on the directory.\\n- Modifying the file is controlled by permissions on the file. You may have a mask which is removing the write privilege from the file.\\n\\nWhen I turned to set up Samba server locally, the main purpose is that I would like to integrate the Samba server into my Docker Compose project to mock a real remote Samba server, which will facilitate your local development in Docker environment.\\n\\nSo this blog will illustrate to set up a Samba server and a client, and test interaction between them.\\n\\n## Start Samba Server in Docker\\n\\nHere, we use Samba server image from [dperson/samba](https://hub.docker.com/r/dperson/samba). Although there is an alternative from [ghcr.io/servercontainers/samba](https://hub.docker.com/r/servercontainers/samba) or [crazymax/samba](https://github.com/crazy-max/docker-samba)\\n\\nIn OSX, it\'s critical to use `volume mount` and avoid using `bind mount` as we mentioned above.\\n\\n:::note\\nIn OSX, due to the docker desktop itself is running in VM, it will cause some error like `Operation not supported` when binding a local file folder via `bind mount` even you set `777` mask on the folder. So it\'s recommended to use `volume mount` to bind to `/mnt` in Samba server in OSX.\\n\\nFurthermore, the Samba server will log such message: `error reading meta xattr: Not supported`.\\n:::\\n\\nIn Linux, it\'s okay to use either `volume mount` or `bind mount`.  \\n\\n```sh\\ndocker run -it --rm \\\\\\n    --name samba \\\\\\n    -p 139:139 -p 445:445 \\\\\\n    -v mnt:/mnt:z \\\\\\n    dperson/samba \\\\\\n    -p -s \\"Mount;/mnt;yes;no;yes\\" -u \\"bob;bobspasswd\\" -g \\"log level = 5\\"\\n```\\n\\n:::note\\n`-s \\"<Mount;/mnt>;yes;no;yes\\"` means [browsable:yes;readonly:no;guest:yes]\\", which will allow the guest to `read` and the user to `read/write`!\\n:::\\n\\n\\nGet the samba server IP address:\\n\\n```sh\\n$ docker inspect \\\\\\n    -f \'{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' \\\\\\n    samba\\n172.17.0.2\\n```\\n\\n## Start Samba Client in Docker\\n\\nUse `dperson/samba` or `busybox` image,\\n\\n```sh\\ndocker run -it --rm --privileged dperson/samba bash\\n```\\n\\nor\\n\\n```sh\\ndocker run -it --rm --privileged busybox sh\\n```\\n\\nInside the container:\\n\\n```sh\\nmkdir /smb_share\\n\\n# mount -t cifs //[server-ip]/[share-path] /[mount-point]\\nmount -t cifs //172.17.0.2/Mount /smb_share -o rw,username=bob,password=bobspasswd\\n\\n# write file\\necho \\"xxxx\\" > /smb_share/f.txt\\n```\\n\\n## Start Samba Client which Create Volume in Docker\\n\\n1. Create a CIFS/Samba Volume\\n\\n```sh\\ndocker volume create \\\\\\n    --driver local \\\\\\n    --opt type=cifs \\\\\\n    --opt device=//172.17.0.2/Mount \\\\\\n    --opt o=username=bob,password=bobspasswd \\\\\\n    --name samba-volume\\n```\\n\\n```sh\\n$ docker inspect samba-volume\\n[\\n    {\\n        \\"CreatedAt\\": \\"2023-08-13T16:24:03Z\\",\\n        \\"Driver\\": \\"local\\",\\n        \\"Labels\\": null,\\n        \\"Mountpoint\\": \\"/var/lib/docker/volumes/samba-volume/_data\\",\\n        \\"Name\\": \\"samba-volume\\",\\n        \\"Options\\": {\\n            \\"device\\": \\"//172.17.0.2/Mount\\",\\n            \\"o\\": \\"addr=username=bob,password=bobspasswd\\",\\n            \\"type\\": \\"cifs\\"\\n        },\\n        \\"Scope\\": \\"local\\"\\n    }\\n]\\n```\\n\\n2. Start a container using the created volume `samba-volume`.\\n\\n```sh\\ndocker run -it --rm \\\\\\n    -v samba-volume:/mnt \\\\\\n    busybox \\\\\\n    sh\\n```\\n\\n## Use Case in Docker Compose\\n\\n[](../code-snippets/docker-compose/samba/docker-compose.yml)\\n\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport CodeSource from \'!!raw-loader!../code-snippets/docker-compose/samba/docker-compose.yml\';\\n\\n<CodeBlock language=\\"yaml\\" title=\\"docker-compose-samba.yml\\">{CodeSource}</CodeBlock>\\n\\n\\n## Troubleshooting\\n\\nWhen you mount an Samba Share in Linux, you may encounter error like `failed: Invalid argument`,\\n\\n```sh\\nbash-5.1# mount -t cifs //172.17.0.2/Mount /mnt/smb_share -o iocharset=utf8,rw,vers=1.0\\nmount: mounting //172.17.0.2/Mount on /mnt/smb_share failed: Invalid argument\\n```\\n\\nYou can use `dmesg` to debug,\\n\\n```sh\\nbash-5.1# dmesg\\n[317258.750535] CIFS: Attempting to mount \\\\\\\\172.17.0.2\\\\Mount\\n[317258.752956] CIFS: VFS: No username specified\\n[317336.240984] cifs: Unknown parameter \'passwd\'\\n[317344.451345] CIFS: Attempting to mount \\\\\\\\172.17.0.2\\\\Mount\\n```"},{"id":"/docker-setup-nfs-sever","metadata":{"permalink":"/blog/docker-setup-nfs-sever","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docker-setup-nfs-sever.mdx","source":"@site/../../blog/docker-setup-nfs-sever.mdx","title":"Set Up NFS Sever In Docker","description":"Setup NFS Sever","date":"2023-08-11T00:00:00.000Z","formattedDate":"August 11, 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"nfs","permalink":"/blog/tags/nfs"}],"readingTime":2.705,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/setup-nfs-sever.md"},"authors":["frank"],"tags":["docker","nfs"],"description":"Setup NFS Sever","keywords":["Setup NFS Sever"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-11T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Set Up Samba Server in Docker","permalink":"/blog/docker-setup-samba-server"},"nextItem":{"title":"Docker Useful Commands","permalink":"/blog/docker-useful-commands"}},"content":"To set up a **NFS server** in your Host, you can check [NFS server installed and configured](https://phoenixnap.com/kb/ubuntu-nfs-server).\\n\\n## Start Up NFS Server\\n\\nUse docker image [gists/nfs-server](https://hub.docker.com/r/gists/nfs-server) to start up a **NFS server** container.\\n\\nIn OSX, it\'s critical to use `volume mount` and avoid using `bind mount` as we mentioned above.\\n\\nIn Linux, it\'s okay to use either `volume mount` or `bind mount`.  \\n\\n```sh\\ndocker run --rm -d \\\\\\n    --name nfs \\\\\\n    --privileged \\\\\\n    -p 2049:2049 \\\\\\n    -v /tmp/volume:/nfs-share \\\\\\n    -e NFS_DIR=/nfs-share \\\\\\n    -e NFS_OPTION=\\"rw,fsid=0,async,no_subtree_check,no_auth_nlm,insecure,no_root_squash\\" \\\\\\n    gists/nfs-server\\n```\\n\\n:::note\\nBefore we use an old nfs server image [itsthenetwork/nfs-server-alpine](https://hub.docker.com/r/itsthenetwork/nfs-server-alpine/) which was not maintained more than 4 years and not supported natively in platform `linux/arm/v6`.\\n\\n```sh\\ndocker run -it --rm \\\\\\n    --name nfs \\\\\\n    --privileged \\\\\\n    -v /tmp/volume:/nfs-share \\\\\\n    -e SHARED_DIRECTORY=/nfs-share \\\\\\n    -p 2049:2049 \\\\\\n    itsthenetwork/nfs-server-alpine:latest\\n```\\n\\n:::\\n\\n:::note\\nIn OSX, due to the docker desktop itself is running in VM, it will cause some error like `Operation not supported` when binding a local file folder via `bind mount` even you set `777` mask on the folder. So it\'s recommended to use `volume` to bind to `/mnt` in Samba server in OSX.\\n\\nFurthermore, the Samba server will log such message: `error reading meta xattr: Not supported`.\\n:::\\n\\nGet the ip address of the **NFS** server, which will be used later to connect the **NFS** server when mounting in a Docker container client. If you only want to mount the **NFS** server from the host, you can just know the ip address of your host.\\n\\n\\n```sh\\ndocker inspect \\\\\\n    -f \'{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' \\\\\\n    nfs\\n```\\n\\nHere the output is\\n\\n```sh\\n172.17.0.2\\n```\\n\\n## Use NFS Client in Docker\\n\\nLet\'s make use of a Docker container to act in a NFS client to access shared data in the running-up NFS server.\\n\\n:::note\\nrun container as root by option `--privileged` or `--cap-add SYS_ADMIN` when permissions denied inside the container:\\n:::\\n\\n```sh\\ndocker run -it --rm --privileged busybox sh\\n```\\n\\nInside the container:\\n\\n:::note\\nDue to the fsid=0 parameter set in the /etc/exports file, there\'s no need to specify the folder name when mounting from a client. For example, this works fine even though the folder being mounted and shared is /nfs-share:\\n:::\\n\\n```sh\\n# In the container\\n\\nmkdir /mnt\\n# nfs v4\\nmount -v -o vers=4,loud 172.17.0.2:/ /mnt\\n\\n# create a file to test\\necho \\"some text here\\" > /mnt/file1.txt\\n```\\n\\nThen go to the Host to list directory `/data/volume/test`, where you will find the `file1.txt` is sitting.\\n\\n```sh\\n# In the host\\ncat /data/volume/test/file1.txt\\n```\\n\\n## Use NFS Client With Volume Mount in Docker\\n\\n1. Create a NFS volume in Docker\\n\\n```sh\\ndocker volume create --driver local \\\\\\n    --opt type=nfs \\\\\\n    --opt o=addr=172.17.0.2,nfsvers=4 \\\\\\n    --opt device=:/ \\\\\\n    nfs-volume\\n```\\n\\n```sh\\ndocker inspect nfs-volume\\n```\\n\\n2. Run the container with the created volume `nfs-volume`.\\n\\n```sh\\ndocker run -it --rm \\\\\\n    --privileged \\\\\\n    --name nfs-test \\\\\\n    -v nfs-volume:/mnt \\\\\\n    busybox \\\\\\n    sh\\n```\\n\\nAlternative, you can use the combined one command which will create a volume `nfsvolume`, \\n\\n```sh\\ndocker run -it --rm \\\\\\n    --privileged \\\\\\n    --name nfs-test \\\\\\n    --mount \'type=volume,source=nfsvolume,volume-driver=local,volume-opt=type=nfs,volume-opt=device=:/,\\"volume-opt=o=addr=172.17.0.2,rw,nfsvers=4,async\\",target=/mnt\' \\\\\\n    busybox \\\\\\n    sh\\n```\\n\\n## Setup a NFS Server and Mount NFS Volume int Docker Compose\\n\\n\\n\\n## About NFS Options\\n\\n[Understanding the /etc/exports File \u2013 The Geek Diary](https://www.thegeekdiary.com/understanding-the-etc-exports-file/)"},{"id":"/docker-useful-commands","metadata":{"permalink":"/blog/docker-useful-commands","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docker-useful-commands.md","source":"@site/../../blog/docker-useful-commands.md","title":"Docker Useful Commands","description":"Docker Useful Commands","date":"2023-08-11T00:00:00.000Z","formattedDate":"August 11, 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"best practice","permalink":"/blog/tags/best-practice"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["docker","best practice"],"description":"Docker Useful Commands","keywords":["Docker Useful Commands"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-11T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Set Up NFS Sever In Docker","permalink":"/blog/docker-setup-nfs-sever"},"nextItem":{"title":"FastAPI Celery Serving ML Model","permalink":"/blog/fastapi-celery-serving-ml-model"}},"content":"## Docker\\n\\n- Famous `busybox` image that provide many common UNIX utilities for testing.\\n\\n```sh\\ndocker run -it --rm --privileged busybox sh\\n```\\n\\n- Find the IP address of Docker container\\n\\n```sh\\ndocker inspect \\\\\\n    -f \'{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' \\\\\\n    nfs\\n```\\n\\n- Delete all containers(include all status of running, stopped, created)\\n\\n```sh\\ndocker rm -f $(docker ps -a -q)\\n```\\n\\n- Delete all volumes\\n\\n```sh\\ndocker volume rm $(docker volume ls -q)\\n```\\n\\n## Docker Compose\\n\\nRebuild image and restart a service which you specified,\\n\\n```sh\\ndocker-compose up --no-deps web-app -d\\n```\\n\\nRemove a service,\\n\\n```sh\\ndocker-compose rm -s -v web-auth\\n```"},{"id":"/fastapi-celery-serving-ml-model","metadata":{"permalink":"/blog/fastapi-celery-serving-ml-model","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/fastapi-celery-serving-ml-model.md","source":"@site/../../blog/fastapi-celery-serving-ml-model.md","title":"FastAPI Celery Serving ML Model","description":"FastAPI Celery Serving ML Model","date":"2023-08-09T00:00:00.000Z","formattedDate":"August 9, 2023","tags":[{"label":"fastapi","permalink":"/blog/tags/fastapi"},{"label":"celery","permalink":"/blog/tags/celery"},{"label":"machine learning","permalink":"/blog/tags/machine-learning"}],"readingTime":3.34,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/fastapi-celery-serving-ml-model.md"},"authors":["frank"],"tags":["fastapi","celery","machine learning"],"description":"FastAPI Celery Serving ML Model","keywords":["FastAPI Celery Serving ML Model"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-09T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Docker Useful Commands","permalink":"/blog/docker-useful-commands"},"nextItem":{"title":"Git Best Practices","permalink":"/blog/git-best-practices"}},"content":"## Celery Worker\\n\\nCelery Worker Mechanism:\\n\\nTo start a Celery worker will start a main process that will spawn child processes or threads(based on the `--pool` option): the main process will handle receiving task/sending task result the and these child processes/threads(a.k.a `execution pool`) execute the actual tasks.\\n\\nTo increase the number of child processes/threads(via `--concurrency` option) will increase the number of tasks the Celery worker can process in parallel. More processes are usually better.\\n\\nHowever, in reality, there are some situations in following modes:\\n\\n1. Run N workers with M child processes each.\\n2. Run 1 worker with N*M child processes.\\n3. Run N workers with only 1 main process each.\\n4. Run N workers with M child threads each.\\n5. Run 1 worker with N*M child threads.\\n\\nWhether to use `processes` or `threads` depends on what your tasks will actually do and whether they are GPU bound or IO bound.\\n\\n### Option --pool=prefork\\n\\nIt spawns multiple processes.\\n\\nWhen start a Celery worker via `celery -A tasks worker --loglevel INFO --concurrency 3 --pool=prefork`, what will happen underneath?\\n\\n1. Celery start a main process.\\n2. The main process will then spawn 3 child processes. The default `concurrency` is based on the number of `CPU` available on the machine. The default `pool` is `prefork` which uses `multiprocessing` library from Python.\\n3. These child processes will execute the tasks assigned from the main process.\\n\\n### Option --pool=eventlet or --pool=gevent\\n\\nIt creates multiple threads.\\n\\nWhen start a Celery worker via `celery -A tasks worker --loglevel INFO --concurrency 3 --pool=eventlet`\\n\\n### Option --pool=solo\\n\\nIt will not create any child process or thread to run task. The tasks will be executed in main process, which causes the main process to be blocked.\\n\\nIt seems as: Run 1 worker with 1 process, however `--concurrency` will not take any effect when `--pool=solo`!\\n\\nWhen coming to a microservices environment, this option becomes useful and practical especially running CPU intensive tasks. The container manager such as `Docker` can increase the task processing capabilities through managing the number of worker containers instead of managing the number of pool processes per worker.\\n\\nWhen start a Celery worker via `celery -A tasks worker --loglevel INFO --pool=solo`\\n\\n## Celery Task\\n\\n### What is Task in Celery\\n\\n### How Task be Executed\\n\\n```py\\nfrom celery import Celery, Task\\n\\napp = Celery(...)\\n\\n@app.task(base=Task)\\ndef add(x, y):\\n  return x + y\\n\\n@app.task(base=Task)\\ndef mul(x, y):\\n  return x * y\\n```\\n\\nThe `@app.task` decoration will use `Task` class in default if you don\'t specify explicitly.\\n\\nWhen a worker start by `celery -A tasks worker`,\\n\\n1. Worker will spawn child Processes, the number of child Processes is based on CPU cores in default.\\n2. Each child Process will initialize a `Task` instance for every decorated function. Here `add()` has its own `Task` instance and `mul()` also has its own `Task` instance respectively.\\n\\nWhen a client call `add.delay(1, 2)`,\\n  \\n1. Worker receive a Task in Queue.\\n2. Worker assign the Task to a child Process, which will determine to use which `Task` instance to execute. A `Task` instance is initialized in each decorated function and registered with a task name using function name in default(such as `add`, `mul`). Here is the `Task` instance with name `add()` should be picked up to run the task.\\n3. When be decorated in `add()`, the `Task` instance `run()` method will be `add()` original function body. The child Process will use the `Task` instance\'s `__call__()` method to run task, and `__call__()` will invoke the `run()` within itself.  \\n\\n## Known Issues\\n\\n[Result state is always PENDING in windows](https://github.com/celery/celery/issues/2146)\\n\\n> FIX: use `--pool=solo` instead of `--pool=prefork` in default. `multiprocessing` may cause this problem as its some defect in windows!\\n\\n\\n## References\\n\\n[Celery Execution Pools: What is it all about?](https://distributedpython.com/posts/celery-execution-pools-what-is-it-all-about/)\\n\\n[Celery Exececution Pool: The worker and the pool - separation of concerns](https://distributedpython.com/posts/celery-pool-types-part-1-the-worker-and-the-pool/)\\n\\n[Serving ML Models in Production with FastAPI and Celery | by Jonathan Readshaw | Towards Data Science](https://towardsdatascience.com/deploying-ml-models-in-production-with-fastapi-and-celery-7063e539a5db)\\n\\n[GitHub - liviaerxin/FastAPISpamDetection: Code for my Medium article: \\"How you can quickly deploy your ML models with\xa0FastAPI\\"](https://github.com/liviaerxin/FastAPISpamDetection)"},{"id":"/git-best-practices","metadata":{"permalink":"/blog/git-best-practices","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/git-best-practices.md","source":"@site/../../blog/git-best-practices.md","title":"Git Best Practices","description":"Git Submodules","date":"2023-08-02T00:00:00.000Z","formattedDate":"August 2, 2023","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"git submodules","permalink":"/blog/tags/git-submodules"},{"label":"best practice","permalink":"/blog/tags/best-practice"}],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/git-submodules.md"},"authors":["frank"],"tags":["git","git submodules","best practice"],"description":"Git Submodules","keywords":["Git Submodules"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-08-02T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"FastAPI Celery Serving ML Model","permalink":"/blog/fastapi-celery-serving-ml-model"},"nextItem":{"title":"Share Data between Docker Containers","permalink":"/blog/docker-containers-data-sharing"}},"content":"Global configuration\\n\\n```sh\\ngit config --global --list\\ngit config --local --list\\n```\\n\\n**GIT** two popular authentication methods: [SSH Key](#git-ssh-key) and [Credentials](#git-credentials)\\n\\n## Git SSH Key\\n\\n[How to Authenticate Your Git to GitHub with SSH Keys](https://hackernoon.com/how-to-authenticate-your-git-to-github-with-ssh-keys)\\n\\n## Git Credentials\\n\\nStore username/password instead of ssh for multiple remotes\\n\\nTo enable git credentials\\n\\n```sh\\n# local\\ngit config credential.helper store\\n# global\\ngit config --global credential.helper store\\n```\\n\\nEach credential is stored in `~/.git-credentials` file on its own line as a URL like:\\n\\n```sh\\nhttps://<USERNAME>:<PASSWORD>@github.com\\n```\\n\\nConfigure credentials,\\n\\n```sh\\n# Global\\ngit config --global credential.https://github.com.username <your_username>\\n\\n# Or \\ngit config --local user.name <your_username>\\ngit config --local user.email <your_useremail>\\n# Then git pull or git push to let it cache your username/password after it prompt you to input password in the first time\\n```\\n\\n\\nAlternatively, we can directly edit our global Git config file `~/.gitconfig`,\\n\\n```sh\\n[credential \\"https://github.com\\"]\\n\\tusername = <username>\\n```\\n\\n[Git - Config Username & Password - Store Credentials - ShellHacks](https://www.shellhacks.com/git-config-username-password-store-credentials/)\\n\\n[Configuring Git Credentials](https://www.baeldung.com/ops/git-configure-credentials)\\n\\n## Git Submodules\\n\\n1. Pull the repo and its all submodules in **the first time**.\\n\\n```sh\\ngit clone http://10.6.64.66:30000/mtr/mtr.git\\n\\ncd mtr\\n\\ngit submodule update --init --recursive --progress\\n```\\n\\nOr just one command to clone with all the submodules.\\n\\n```sh\\ngit clone --recursive http://10.6.64.66:30000/mtr/mtr.git\\n```\\n\\n2. Pull the repo and its all submodules later\\n\\n```sh\\ngit submodule update --recursive --progress\\n```\\n\\n3. Pull the latest of `main` branch in each repository, when the parent repo does point to the latest branch of its submodules!\\n\\n```sh\\ngit submodule foreach git pull origin main\\n```\\n\\n```sh\\ngit submodule update --recursive --remote\\n```"},{"id":"/docker-containers-data-sharing","metadata":{"permalink":"/blog/docker-containers-data-sharing","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docker-containers-data-sharing.md","source":"@site/../../blog/docker-containers-data-sharing.md","title":"Share Data between Docker Containers","description":"Docker Containers Data Sharing","date":"2023-07-19T00:00:00.000Z","formattedDate":"July 19, 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"dev-ops","permalink":"/blog/tags/dev-ops"},{"label":"docker-volume","permalink":"/blog/tags/docker-volume"},{"label":"data","permalink":"/blog/tags/data"}],"readingTime":1.69,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/docker-containers-data-sharing.md"},"authors":["frank"],"tags":["docker","dev-ops","docker-volume","data"],"description":"Docker Containers Data Sharing","keywords":["Docker Containters Data Sharing"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-19T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Git Best Practices","permalink":"/blog/git-best-practices"},"nextItem":{"title":"REST API Filtering, Sorting and Pagination","permalink":"/blog/rest-api-filtering-sorting-pagination"}},"content":"There are three types of data to manage data in Docker,\\n\\n- bind mount\\n- volume mount\\n- tmpfs mount\\n\\n![](../img/types-of-mounts-volume.png)\\n\\nRead [Manage data in Docker](https://docs.docker.com/storage/) for more information, it\'s a great official documentation!\\n\\nHere, this page demonstrates some use cases in practices that you maybe face. As the official documentation says, **Volume** is alway the first choice and preferred mechanism for persisting and sharing data between containers, as one of the biggest advantages is that **volume** is thoroughly managed by Docker. That means:\\n\\n- You can manage **volume** using Docker CLI commands ir the Docker API.\\n- **Volume** is easier to back up and migrate than **bind mounts**.\\n- **Volume** work the same interface in Linux and Windows, such as no need to worry about `POSIX` file path style in Windows.\\n- **Volume** driver features support you to store data on remote hosts or cloud storage easily.\\n- **Volume** on Docker Desktop have much higher performance than bind mount from Mac and Windows hosts.\\n\\nLet\'s look at some use cases that leverage volume **driver** features\\n\\n## Use a volume to bind a local folder\\n\\nIn default, the volume is created by Docker and its corresponding folder resides in Docker managed folder like `/var/lib/docker/volumes/`:\\n\\n```sh\\n$ docker create volume xxx\\n```\\n\\n```sh\\n$ docker volume inspect xxx\\n[\\n    {\\n        \\"CreatedAt\\": \\"2023-07-19T14:41:18+08:00\\",\\n        \\"Driver\\": \\"local\\",\\n        \\"Labels\\": {},\\n        \\"Mountpoint\\": \\"/var/lib/docker/volumes/xxx/_data\\",\\n        \\"Name\\": \\"xxx\\",\\n        \\"Options\\": {},\\n        \\"Scope\\": \\"local\\"\\n    }\\n]\\n```\\n\\nHowever, sometimes you would like to bind the volume into a specified local folder(like `/data/volumes/testvol`) in hosts(only available in `Linux`)\\n\\n```sh\\n$ docker volume create --opt type=none --opt o=bind --opt device=/data/volumes/testvol testvol\\n```\\n\\n```sh\\n$ docker inspect testvol\\n[\\n    {\\n        \\"CreatedAt\\": \\"2023-07-13T04:36:16Z\\",\\n        \\"Driver\\": \\"local\\",\\n        \\"Labels\\": {},\\n        \\"Mountpoint\\": \\"/var/lib/docker/volumes/testvol/_data\\",\\n        \\"Name\\": \\"testvol\\",\\n        \\"Options\\": {\\n            \\"device\\": \\"/data/volumes/testvol\\",\\n            \\"o\\": \\"bind\\",\\n            \\"type\\": \\"none\\"\\n        },\\n        \\"Scope\\": \\"local\\"\\n    }\\n```\\n\\nIn Docker compose yaml,\\n\\n```yml\\nservices:\\n  frontend:\\n    image: node:lts\\n    volumes:\\n      - testvol:/home/node/app\\nvolumes:\\n  db-data:\\n  testvol:\\n    driver: local\\n    driver_opts:\\n      type: none\\n      o: bind\\n      device: /data/volumes/testvol\\n```\\n\\n## Use NFS volume\\n\\n## Use Samba volume\\n\\n## References\\n\\n[Volumes | Docker Documentation](https://docs.docker.com/storage/volumes/#share-data-between-machines)"},{"id":"/rest-api-filtering-sorting-pagination","metadata":{"permalink":"/blog/rest-api-filtering-sorting-pagination","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/rest-api-filtering-sorting-pagination.md","source":"@site/../../blog/rest-api-filtering-sorting-pagination.md","title":"REST API Filtering, Sorting and Pagination","description":"REST API Filtering, Sorting and Pagination","date":"2023-07-18T00:00:00.000Z","formattedDate":"July 18, 2023","tags":[{"label":"backend","permalink":"/blog/tags/backend"},{"label":"best practice","permalink":"/blog/tags/best-practice"},{"label":"rest api","permalink":"/blog/tags/rest-api"},{"label":"filtering","permalink":"/blog/tags/filtering"},{"label":"sorting","permalink":"/blog/tags/sorting"},{"label":"pagination","permalink":"/blog/tags/pagination"}],"readingTime":0.205,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["backend","best practice","rest api","filtering","sorting","pagination"],"description":"REST API Filtering, Sorting and Pagination","keywords":["rest api","filtering, sorting and pagination"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-18T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Share Data between Docker Containers","permalink":"/blog/docker-containers-data-sharing"},"nextItem":{"title":"Learn ASGI","permalink":"/blog/learn-asgi"}},"content":"[api-guidelines/Guidelines.md at vNext \xb7 microsoft/api-guidelines \xb7 GitHub](https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#971-filter-operations)\\n\\n[REST API Design: Filtering, Sorting, and Pagination | Moesif Blog](https://www.moesif.com/blog/technical/api-design/REST-API-Design-Filtering-Sorting-and-Pagination/)\\n\\n[How we write our query filter engine on our REST API (part 1) | by Adam Ben Aharon | Melio\u2019s R&D blog | Medium](https://medium.com/meliopayments/how-we-write-our-query-filter-engine-on-our-rest-api-part-1-441cb13dcc15)"},{"id":"/learn-asgi","metadata":{"permalink":"/blog/learn-asgi","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-asgi.md","source":"@site/../../blog/learn-asgi.md","title":"Learn ASGI","description":"Learn ASGI","date":"2023-07-11T00:00:00.000Z","formattedDate":"July 11, 2023","tags":[{"label":"backend","permalink":"/blog/tags/backend"},{"label":"asgi","permalink":"/blog/tags/asgi"}],"readingTime":0.895,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/learn-asgi.md"},"authors":["frank"],"tags":["backend","asgi"],"description":"Learn ASGI","keywords":["Learn ASGI"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-11T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"REST API Filtering, Sorting and Pagination","permalink":"/blog/rest-api-filtering-sorting-pagination"},"nextItem":{"title":"Avalonia","permalink":"/blog/avalonia"}},"content":"Nowadays as web server framework is getting easy to use and work with. In Python areas, FastAPI obtains nearly 60k stars and becomes the most popular web framework for Pythoners.\\n\\nLooking at the advantage of `FastAPI`, it simplifies everything from parsing http requests, middleware processing, authentication, database manipulation and more.\\n\\nLet\'s dive into the behind-the-scenes technique stacks of `FastAPI`.\\n\x3c!--truncate--\x3e\\nBefore research, there are some common questions around the web server development:\\n\\n- How to process messages on `HTTP` protocol on `TCP` protocol? What\'re the favorite library used to do that?\\n- What are the differences between `WSGI` and `ASGI`?\\n- Data model used for database and users\\n\\n\\nstacks from low-level to high-level\\n\\nUvicorn:\\n\\n- ASGI web server implementation/interface\\n  - scope\\n  - receive\\n  - send\\n- h11 to process HTTP messages\\n- websocket to process websocket messages\\n\\nStarlette:\\n\\n- ASGI framework\\n- abstract Request class for receive in `Uvicorn`\\n- abstract Response class for send in `Uvicorn`\\n- provide middleware\\n\\nFastAPI:\\n\\n- Fast to code\\n- OpenAPI docs\\n- Pydantic native model\\n\\n`APIRoute`\\n\\n`APIRouter`\\n\\n`Application` <-- `APIRouter` <-- `APIRoute`"},{"id":"/avalonia","metadata":{"permalink":"/blog/avalonia","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/avalonia.md","source":"@site/../../blog/avalonia.md","title":"Avalonia","description":"Learn Avalonia","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"practice","permalink":"/blog/tags/practice"},{"label":"avalonia","permalink":"/blog/tags/avalonia"}],"readingTime":0.42,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["practice","avalonia"],"description":"Learn Avalonia","keywords":["practice","avalonia"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-07T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Learn ASGI","permalink":"/blog/learn-asgi"},"nextItem":{"title":"C/C++ Build System","permalink":"/blog/c-build-system"}},"content":"\x3c!--truncate--\x3e\\n\\n[skiasharp - Is it possible to create a Skia Canvas element in an Avalonia application? - Stack Overflow](https://stackoverflow.com/questions/61627374/is-it-possible-to-create-a-skia-canvas-element-in-an-avalonia-application)\\n\\n[Poor rendering performance of Image control \xb7 Issue #2849 \xb7 AvaloniaUI/Avalonia \xb7 GitHub](https://github.com/AvaloniaUI/Avalonia/issues/2849)\\n\\n[How to render a window with an OpenGlControl to RenderTargetBitmap? \xb7 Discussion #7772 \xb7 AvaloniaUI/Avalonia \xb7 GitHub](https://github.com/AvaloniaUI/Avalonia/discussions/7772)\\n\\n[Missing WriteableBitmap.WritePixels? \xb7 Discussion #7661 \xb7 AvaloniaUI/Avalonia \xb7 GitHub](https://github.com/AvaloniaUI/Avalonia/discussions/7661)\\n\\n[Enable GPU-backed images for the Skia backend by mstr2 \xb7 Pull Request #2858 \xb7 AvaloniaUI/Avalonia \xb7 GitHub](https://github.com/AvaloniaUI/Avalonia/pull/2858)\\n\\n## SkiaSharp\\n\\n[SkiaSharp/GRContextTest.cs at main \xb7 mono/SkiaSharp \xb7 GitHub](https://github.com/mono/SkiaSharp/blob/main/tests/Tests/GRContextTest.cs)"},{"id":"/c-build-system","metadata":{"permalink":"/blog/c-build-system","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/c-build-system.md","source":"@site/../../blog/c-build-system.md","title":"C/C++ Build System","description":"Learn Avalonia","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"make","permalink":"/blog/tags/make"},{"label":"ninja","permalink":"/blog/tags/ninja"},{"label":"msbuild","permalink":"/blog/tags/msbuild"},{"label":"cmake","permalink":"/blog/tags/cmake"},{"label":"meson","permalink":"/blog/tags/meson"},{"label":"ci-cd","permalink":"/blog/tags/ci-cd"}],"readingTime":0.685,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"tags":["make","ninja","msbuild","cmake","meson","ci-cd"],"description":"Learn Avalonia","keywords":["practice","avalonia"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-07T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Avalonia","permalink":"/blog/avalonia"},"nextItem":{"title":"Resumable Upload","permalink":"/blog/resumable-upload"}},"content":"[List of build automation software - Wikipedia](https://en.wikipedia.org/wiki/List_of_build_automation_software)\\n\\n\x3c!--truncate--\x3e\\n\\n```plantuml\\n@startuml\\nskinparam nodesep 50\\nskinparam ranksep 100\\n\\n!include <material/common>\\n!include <material/code_braces>\\n!include <material/code_array>\\n!include <material/code_brackets>\\n!include <material/code_parentheses>\\n!include <material/code_tags>\\n\\ntogether {\\nfolder \\"Project\\" as source <<Source Code>> {\\n    file sourcefile[\\n        *.cpp\\n        *.c\\n        *.h\\n        <$ma_code_braces>\\n    ]\\n}\\n\\ncomponent \\"CMake\\" as cmake {\\n    file cmakefiles[\\n        CMakefiles.txt\\n        <$ma_code_braces>\\n    ]\\n}\\n}\\n\\ncomponent \\"Make\\" as make {\\n    file makefile[\\n        Makefile\\n        <$ma_code_braces>\\n    ]\\n}\\n\\ncomponent \\"MSBuild\\" as msbuild {\\n    file msbuildfile[\\n        .vcproj\\n        <$ma_code_braces>\\n    ]\\n}\\n\\npackage \\"Windows Application\\" as wa <<.exe>> <<*.DLL>> {\\n}\\n\\npackage \\"Unix Application\\" as ua <<.>> <<*.so>> {\\n}\\n\\n\\n\\ncmake --\x3e make: Generator: Make\\ncmake --\x3e msbuild : Generator: Visual Studio 2022\\n\\nsource --\x3e wa\\nmsbuild --\x3e wa\\n\\nsource --\x3e ua\\nmake --\x3e ua\\n```\\n\\n## Build System\\n\\nMake\\n\\nNinja\\n\\nMSBuild\\n\\n## Build System Generator\\n\\nCMake\\n\\nMeson\\n\\n## CI"},{"id":"/resumable-upload","metadata":{"permalink":"/blog/resumable-upload","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/resumable-upload.md","source":"@site/../../blog/resumable-upload.md","title":"Resumable Upload","description":"Resumable Upload","date":"2023-07-07T00:00:00.000Z","formattedDate":"July 7, 2023","tags":[{"label":"fastapi","permalink":"/blog/tags/fastapi"},{"label":"backend","permalink":"/blog/tags/backend"},{"label":"protocol","permalink":"/blog/tags/protocol"},{"label":"tus","permalink":"/blog/tags/tus"}],"readingTime":0.71,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/resumable-upload.md"},"authors":["frank"],"tags":["fastapi","backend","protocol","tus"],"description":"Resumable Upload","keywords":["file upload","resumable"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-07T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"C/C++ Build System","permalink":"/blog/c-build-system"},"nextItem":{"title":"MDX Features of Docusaurus","permalink":"/blog/docusaurus-mdx-features"}},"content":"To implement a resumable file upload, it is necessary to contain three parts:\\n\\n- Protocol: provide a mechanism for resumable file uploads\\n- Upload Server: receive an interrupted upload and store it in local machine or in cloud storage\\n- Upload Client: upload the file which may be interrupted\\n\\n\x3c!--truncate--\x3e\\n\\n## A Basic Resumable Upload\\n\\n```js reference\\nhttps://github.com/liviaerxin/liviaerxin.github.io/blob/master/code-snippets/app_resumable_upload.py\\n```\\n\\n## TUS Resumable Upload\\n\\nFastAPI implementing tus v1.0.0 server in Python\\n\\n```js reference\\nhttps://github.com/liviaerxin/liviaerxin.github.io/blob/master/code-snippets/app_tusd.py\\n```\\n\\n\\n[Implementations | tus.io](https://tus.io/implementations)\\n\\n[Resumable file upload](https://javascript.info/resume-upload)\\n\\n[GitHub - tus/tus-js-client: A pure JavaScript client for the tus resumable upload protocol](https://github.com/tus/tus-js-client)\\n\\n[GitHub - tus/tusd: Reference server implementation in Go of tus: the open protocol for resumable file uploads](https://github.com/tus/tusd)\\n\\nIO, StreamIO, FileIO\\n\\nhigh-level used by asyncio.io in socket/tcp/http\\n\\n[Streams \u2014 Python 3.11.4 documentation](https://docs.python.org/3/library/asyncio-stream.html#streamreader)\\n\\nstarlette.Request.stream = http Request Body\\n\\nlow-level:  \\n[io \u2014 Core tools for working with streams \u2014 Python 3.11.4 documentation](https://docs.python.org/3/library/io.html#io.RawIOBase)"},{"id":"/docusaurus-mdx-features","metadata":{"permalink":"/blog/docusaurus-mdx-features","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docusaurus-mdx-features.mdx","source":"@site/../../blog/docusaurus-mdx-features.mdx","title":"MDX Features of Docusaurus","description":"MDX Features","date":"2023-07-06T00:00:00.000Z","formattedDate":"July 6, 2023","tags":[{"label":"mdx","permalink":"/blog/tags/mdx"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"react","permalink":"/blog/tags/react"},{"label":"best practice","permalink":"/blog/tags/best-practice"}],"readingTime":4.01,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"description":"MDX Features","authors":["frank"],"tags":["mdx","docusaurus","react","best practice"],"keywords":["mdx features in docusaurus"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-06T00:00:00.000Z","last_update":"2023-08-13T00:00:00.000Z"},"prevItem":{"title":"Resumable Upload","permalink":"/blog/resumable-upload"},"nextItem":{"title":"Learn FFmpeg","permalink":"/blog/learn-ffmpeg"}},"content":"\x3c!--truncate--\x3e\\n\\n## React Component\\n\\nCode as:\\n\\n```jsx title=\\"docs/mdx-features.mdx\\"\\nexport const Highlight = ({children, color}) => (\\n  <span\\n    style={{\\n      backgroundColor: color,\\n      borderRadius: \'2px\',\\n      color: \'#fff\',\\n      padding: \'0.2rem\',\\n    }}>\\n    {children}\\n  </span>\\n);\\n\\n<Highlight color=\\"#25c2a0\\">Docusaurus green</Highlight> and <Highlight color=\\"#1877F2\\">Facebook blue</Highlight> are my favorite colors.\\n```\\n\\nRender as:\\n\\nexport const Highlight = ({children, color}) => (\\n  <span\\n    style={{\\n      backgroundColor: color,\\n      borderRadius: \'2px\',\\n      color: \'#fff\',\\n      padding: \'0.2rem\',\\n    }}>\\n    {children}\\n  </span>\\n);\\n\\n<Highlight color=\\"#25c2a0\\">Docusaurus green</Highlight> and <Highlight color=\\"#1877F2\\">Facebook blue</Highlight> are my favorite colors.\\n\\n<br/><br/><br/>\\n\\nCode as:\\n\\n```jsx title=\\"src/components/Highlight\\"\\nimport React from \'react\';\\n\\nexport default function SharedHighlight({children, color}) {\\n  return (\\n    <span\\n      style={{\\n        backgroundColor: color,\\n        borderRadius: \'2px\',\\n        color: \'#fff\',\\n        padding: \'0.2rem\',\\n      }}>\\n      {children}\\n    </span>\\n  );\\n}\\n```\\nWith:\\n```jsx title=\\"docs/mdx-features.mdx\\"\\nimport SharedHighlight from \'@site/src/components/Highlight\';\\n\\n<SharedHighlight color=\\"#25c2a0\\">Docusaurus green</SharedHighlight>\\nI can write **Markdown** alongside my _JSX_!\\n```\\n\\nRender as:\\n\\nimport SharedHighlight from \'@site/src/components/Highlight\';\\n\\n<SharedHighlight color=\\"#25c2a0\\">Docusaurus green</SharedHighlight>\\n\\nI can write **Markdown** alongside my _JSX_!\\n\\n## Tabs\\n\\nCode as:\\n\\n```jsx title=\\"docs/mdx-features.mdx\\"\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n<Tabs>\\n  <TabItem value=\\"apple\\" label=\\"Apple\\" default>\\n    This is an apple \ud83c\udf4e\\n  </TabItem>\\n  <TabItem value=\\"orange\\" label=\\"Orange\\">\\n    This is an orange \ud83c\udf4a\\n  </TabItem>\\n  <TabItem value=\\"banana\\" label=\\"Banana\\">\\n    This is a banana \ud83c\udf4c\\n  </TabItem>\\n</Tabs>\\n```\\n\\nRender as:\\n\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n<Tabs>\\n  <TabItem value=\\"apple\\" label=\\"Apple\\" default>\\n    This is an apple \ud83c\udf4e\\n  </TabItem>\\n  <TabItem value=\\"orange\\" label=\\"Orange\\">\\n    This is an orange \ud83c\udf4a\\n  </TabItem>\\n  <TabItem value=\\"banana\\" label=\\"Banana\\">\\n    This is a banana \ud83c\udf4c\\n  </TabItem>\\n</Tabs>\\n\\n## NOTES\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\n\x3c!-- Prettier doesn\'t change this --\x3e\\n:::note\\n\\nHello world\\n\\n:::\\n```\\n\\n:::note\\n\\nHello world\\n\\n:::\\n\\n```md\\n\x3c!-- Prettier changes this --\x3e\\n:::note\\nHello world\\n:::\\n```\\n\\n```md\\n\x3c!-- to this --\x3e\\n::: note Hello world:::\\n```\\n\\n```md title=\\"docs/mdx-features.mdx\\"\\n:::note Your Title\\n\\nSome **content** with _Markdown_ `syntax`.\\n\\n:::\\n```\\n\\n:::note Your Title\\n\\nSome **content** with _Markdown_ `syntax`.\\n\\n:::\\n\\n\\n```md title=\\"docs/mdx-features.mdx\\"\\n:::tip Use tabs in admonitions\\n\\n<Tabs>\\n  <TabItem value=\\"apple\\" label=\\"Apple\\">This is an apple \ud83c\udf4e</TabItem>\\n  <TabItem value=\\"orange\\" label=\\"Orange\\">This is an orange \ud83c\udf4a</TabItem>\\n  <TabItem value=\\"banana\\" label=\\"Banana\\">This is a banana \ud83c\udf4c</TabItem>\\n</Tabs>\\n\\n:::\\n```\\n\\n:::tip Use tabs in admonitions\\n\\n<Tabs>\\n  <TabItem value=\\"apple\\" label=\\"Apple\\">This is an apple \ud83c\udf4e</TabItem>\\n  <TabItem value=\\"orange\\" label=\\"Orange\\">This is an orange \ud83c\udf4a</TabItem>\\n  <TabItem value=\\"banana\\" label=\\"Banana\\">This is a banana \ud83c\udf4c</TabItem>\\n</Tabs>\\n\\n:::\\n\\n## Math\\n\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\nLet $f\\\\colon[a,b]\\\\to\\\\R$ be Riemann integrable. Let $F\\\\colon[a,b]\\\\to\\\\R$ be\\n$F(x)=\\\\int_{a}^{x} f(t)\\\\,dt$. Then $F$ is continuous, and at all $x$ such that\\n$f$ is continuous at $x$, $F$ is differentiable at $x$ with $F\'(x)=f(x)$.\\n```\\n\\nLet $f\\\\colon[a,b]\\\\to\\\\R$ be Riemann integrable. Let $F\\\\colon[a,b]\\\\to\\\\R$ be\\n$F(x)=\\\\int_{a}^{x} f(t)\\\\,dt$. Then $F$ is continuous, and at all $x$ such that\\n$f$ is continuous at $x$, $F$ is differentiable at $x$ with $F\'(x)=f(x)$.\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\n$$\\nI = \\\\int_0^{2\\\\pi} \\\\sin(x)\\\\,dx\\n$$\\n```\\n\\n$$\\nI = \\\\int_0^{2\\\\pi} \\\\sin(x)\\\\,dx\\n$$\\n\\n## Diagrams\\n\\n````md title=\\"Example Mermaid diagram\\"\\n```mermaid\\ngraph TD;\\n    A--\x3eB;\\n    A--\x3eC;\\n    B--\x3eD;\\n    C--\x3eD;\\n```\\n````\\n\\n```mermaid\\ngraph TD;\\n    A--\x3eB;\\n    A--\x3eC;\\n    B--\x3eD;\\n    C--\x3eD;\\n```\\n\\n## Code Block\\n\\n````md\\n```jsx title=\\"/src/components/HelloCodeTitle.js\\"\\nfunction HelloCodeTitle(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n```\\n````\\n\\n```jsx title=\\"/src/components/HelloCodeTitle.js\\"\\nfunction HelloCodeTitle(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n```\\n\\n````md\\n```js\\nfunction HighlightSomeText(highlight) {\\n  if (highlight) {\\n    // highlight-next-line\\n    return \'This text is highlighted!\';\\n  }\\n\\n  return \'Nothing highlighted\';\\n}\\n\\nfunction HighlightMoreText(highlight) {\\n  // highlight-start\\n  if (highlight) {\\n    return \'This range is highlighted!\';\\n  }\\n  // highlight-end\\n\\n  return \'Nothing highlighted\';\\n}\\n```\\n````\\n\\n```js\\nfunction HighlightSomeText(highlight) {\\n  if (highlight) {\\n    // highlight-next-line\\n    return \'This text is highlighted!\';\\n  }\\n\\n  return \'Nothing highlighted\';\\n}\\n\\nfunction HighlightMoreText(highlight) {\\n  // highlight-start\\n  if (highlight) {\\n    return \'This range is highlighted!\';\\n  }\\n  // highlight-end\\n\\n  return \'Nothing highlighted\';\\n}\\n```\\n\\n````md\\n```jsx {1,4-6,11}\\nimport React from \'react\';\\n\\nfunction MyComponent(props) {\\n  if (props.isBar) {\\n    return <div>Bar</div>;\\n  }\\n\\n  return <div>Foo</div>;\\n}\\n\\nexport default MyComponent;\\n```\\n````\\n\\n\\n```jsx {1,4-6,11}\\nimport React from \'react\';\\n\\nfunction MyComponent(props) {\\n  if (props.isBar) {\\n    return <div>Bar</div>;\\n  }\\n\\n  return <div>Foo</div>;\\n}\\n\\nexport default MyComponent;\\n```\\n\\n\\n````md\\n```jsx {1,4-6,11} showLineNumbers\\nimport React from \'react\';\\n\\nfunction MyComponent(props) {\\n  if (props.isBar) {\\n    return <div>Bar</div>;\\n  }\\n\\n  return <div>Foo</div>;\\n}\\n\\nexport default MyComponent;\\n```\\n````\\n\\n```jsx {1,4-6,11} showLineNumbers\\nimport React from \'react\';\\n\\nfunction MyComponent(props) {\\n  if (props.isBar) {\\n    return <div>Bar</div>;\\n  }\\n\\n  return <div>Foo</div>;\\n}\\n\\nexport default MyComponent;\\n```\\n\\n\\n<Tabs>\\n<TabItem value=\\"js\\" label=\\"JavaScript\\">\\n\\n```js\\nfunction helloWorld() {\\n  console.log(\'Hello, world!\');\\n}\\n```\\n\\n</TabItem>\\n<TabItem value=\\"py\\" label=\\"Python\\">\\n\\n```py\\ndef hello_world():\\n  print(\\"Hello, world!\\")\\n```\\n\\n</TabItem>\\n<TabItem value=\\"java\\" label=\\"Java\\">\\n\\n```java\\nclass HelloWorld {\\n  public static void main(String args[]) {\\n    System.out.println(\\"Hello, World\\");\\n  }\\n}\\n```\\n\\n</TabItem>\\n</Tabs>\\n\\n## Importing Code \\n\\n```sh\\nnpm install --save raw-loader\\n```\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport MyComponentSource from \'!!raw-loader!./myComponent\';\\n\\n<CodeBlock language=\\"jsx\\">{MyComponentSource}</CodeBlock>\\n```\\n\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport MyComponentSource from \'!!raw-loader!./myComponent\';\\n\\n<CodeBlock language=\\"jsx\\">{MyComponentSource}</CodeBlock>\\n\\n## Importing Markdown\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\nimport PartialExample from \'./_markdown-partial-example.mdx\';\\n\\n<PartialExample name=\\"Sebastien\\" />\\n```\\n\\nimport PartialExample from \'./_markdown-partial-example.mdx\';\\n\\n<PartialExample name=\\"Sebastien\\" />\\n\\n```mdx title=\\"docs/mdx-features.mdx\\"\\nimport PartialExample1 from \'./skia.md\';\\n\\n<PartialExample1 />\\n```\\n\\nIt imports file from [skia.md](./skia.md):\\n\\nimport PartialExample1 from \'./skia.md\';\\n\\n<PartialExample1 />\\n\\n## Import Code Snippets from GitHub Repositories\\n\\n[A Docusaurus v2 plugin that supports referencing code examples from public GitHub repositories.](https://github.com/saucelabs/docusaurus-theme-github-codeblock)\\n\\n```js reference\\nhttps://github.com/saucelabs/docusaurus-theme-github-codeblock/blob/main/src/theme/ReferenceCodeBlock/index.tsx#L105-L108\\n```\\n\\n```js reference\\nhttps://github.com/liviaerxin/liviaerxin.github.io/blob/560ce03e8dbf5d32b197ccf307ca36af25b5dacd/code-snippets/XKeyIn.cpp#L55-L72\\n```"},{"id":"/learn-ffmpeg","metadata":{"permalink":"/blog/learn-ffmpeg","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/learn-ffmpeg.md","source":"@site/../../blog/learn-ffmpeg.md","title":"Learn FFmpeg","description":"Learn FFmpeg","date":"2023-07-06T00:00:00.000Z","formattedDate":"July 6, 2023","tags":[{"label":"learn","permalink":"/blog/tags/learn"},{"label":"ffmpeg","permalink":"/blog/tags/ffmpeg"}],"readingTime":2.455,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Docs Docusaurus Template","description":"Creates Docusaurus docs/slip","filepath":"docs/learn-ffmpeg.md"},"authors":["frank"],"description":"Learn FFmpeg","keywords":["learn","ffmpeg"],"image":"https://i.imgur.com/mErPwqL.png","tags":["learn","ffmpeg"],"date":"2023-07-06T00:00:00.000Z","last_update":"2023-07-06T00:00:00.000Z"},"prevItem":{"title":"MDX Features of Docusaurus","permalink":"/blog/docusaurus-mdx-features"},"nextItem":{"title":"Communication Between Docker Containers","permalink":"/blog/docker-containers-communication"}},"content":"Examples of Container and Codec lists in Chrome[^chrome]:\\n\\nVideo Container Format:\\n\\n- MP4 [`.mp4` file extension]\\n- Ogg\\n- WebM\\n- WAV\\n- HLS [`.m3u8` file extension]\\n\\n\x3c!--truncate--\x3e\\n\\nVideo Codec Format:\\n\\n- VP8\\n- VP9\\n- H.264 [Chrome only]\\n- H.265 [Chrome only and also only with the underlying OS support]\\n- MPEG-4 [Chrome OS only, aka **Xvid**, **DivX**]\\n\\n\\n## FFmpeg Command Samples\\n\\nIt\'s note worthing to look over FFmpeg Wiki [^ffmpeg]\\n\\nList all available `container` formats:\\n\\n```sh\\nffmpeg -formats\\n```\\n\\nList all available `codec` formats:\\n\\n```sh\\nffmpeg -codecs\\n```\\n\\nList private options of the `codec`:\\n\\n```sh\\n# Show available `presets`\\nffmpeg -h encoder=h264_nvenc\\n```\\n\\nList all frames timestamp:\\n\\n```sh\\nffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -i input.mp4\\n```\\n\\nList all keyframe(I-frame) timestamp:\\n\\n```sh\\nffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -skip_frame nokey -i input.mp4\\n```\\n\\nConvert video:\\n\\nyou can convert either the `container formats` or the `codecs formats`, such as:\\n\\n```sh\\n# To `mp4` container and `h.264` codecs(the lower crf, the higher quality)\\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 output.mp4\\n\\n# To `mp4` container and `mpeg4` codecs\\nffmpeg -i input.avi -c:v libxvid -preset fast output.mp4\\n\\n# To be friendly for streaming, adding necessary metadata to begin playback faster! \\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -movflags +faststart output.mp4\\n\\n# Remove audio\\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -an output.mp4\\n\\n# Use NVIDIA GPU\\nffmpeg -i input.avi -c:v h264_nvenc -preset fast output.avi\\n\\n# keep quality\\nffmpeg -i input.avi -c:v h264_nvenc -preset fast -rc constqp -cq 19 output.avi\\n```\\n\\nSet keyframe interval:\\n\\n```sh\\n# mpeg4\\nffmpeg -i input.avi -vcodec libxvid -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi \\n\\n# NVIDIA GPU\\n# This sets the I-frame interval at 10 and ensures that no I-frames will be inserted in scene changes\\nffmpeg -i input.avi -vcodec h264_nvenc -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi\\n```\\n\\nTrim video:\\n\\n```sh\\n# Fast clip with stream copy and faster seeking(700x)\\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v copy output.mp4\\n\\n# Fast clip with stream copy and slower seeking(600x)\\nffmpeg -i video.mp4 -ss 00:00:10 -to 00:00:50 -c:v copy output.mp4\\n\\n# Slow clip with re-encoding and faster seeking(1x)\\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v libx264 output.mp4\\n```\\n\\n>NOTE: Cutting video with stream copy will lead the start frame is not precise!\\n\\nSlow down/Speed up video:\\n\\n```sh\\n# Slow down to 1/2x in fast way\\nffmpeg -y -itsscale 2 -i video.mp4 -c:v copy output.mp4\\n\\n# Speed up to 2x in fast way\\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v copy output.mp4\\n\\n# Speed up to 2x with re-encoding in slow way\\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v libx264 output.mp4\\n\\n# Speed up to 2x with `setpts filter`(which requires re-encoding) in slow way\\nffmpeg -i video.mp4 -filter:v \\"setpts=0.5*PTS\\" output.mp4\\n\\n# Change fps to slow down/speed up but keeping duration\\nffmpeg -i video.mp4 -filter:v \\"fps=30\\" output.mp4\\n```\\n\\n## References\\n\\n[^ffmpeg]: [FFmpeg Wiki](https://trac.ffmpeg.org/wiki)\\n[^chrome]: [Chrome Audio/Video Support](https://www.chromium.org/audio-video/)"},{"id":"/docker-containers-communication","metadata":{"permalink":"/blog/docker-containers-communication","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/docker-containers-communication.mdx","source":"@site/../../blog/docker-containers-communication.mdx","title":"Communication Between Docker Containers","description":"Communication Between Docker Containers","date":"2023-06-08T00:00:00.000Z","formattedDate":"June 8, 2023","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"docker-network","permalink":"/blog/tags/docker-network"},{"label":"postgres","permalink":"/blog/tags/postgres"},{"label":"dev-ops","permalink":"/blog/tags/dev-ops"}],"readingTime":2.155,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"authors":["frank"],"description":"Communication Between Docker Containers","image":"https://i.imgur.com/mErPwqL.png","tags":["docker","docker-network","postgres","dev-ops"],"date":"2023-06-08T00:00:00.000Z","draft":false},"prevItem":{"title":"Learn FFmpeg","permalink":"/blog/learn-ffmpeg"},"nextItem":{"title":"Inspect Shared Library","permalink":"/blog/inspect-shared-library"}},"content":"Sometimes between docker containers, we need connect container B from container A to do fast test, etc. For most well-known example, we have `FastAPI` app container connect to `postgres` db container. In addition, it\'s likely to do some sql test on `PostgreSQL` db container in a third container.\\n\\nHere some methods we can use.\\n\\n\x3c!--truncate--\x3e\\n\\n## Using `--link` flag(Legacy)\\n\\nStart a `postgres db` container:\\n\\n```sh\\ndocker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\\n```\\n\\nRun a `postgres client` container to connect the `db` container with user `postgres` and password `mysecretpassword`:\\n\\n```sh\\ndocker run -it --rm --link postgres-db:db postgres psql -h db -U postgres\\npsql (14.3)\\nType \\"help\\" for help.\\n\\npostgres=# SELECT 1;\\n ?column? \\n----------\\n        1\\n(1 row)\\n```\\n\\nOr run a utility container:\\n\\n```sh\\ndocker run -it --rm --link postgres-db:db busybox sh\\n# in `busybox`\\nping db\\n```\\n\\n## Using Default Bridge Network\\n\\nIf you are running your container without specifying attached `network`, it will use the docker `default bridge network`.\\n\\nHowever The `default bridge network` allows container-to-container communication by `IP address` only. To use `hostname` or `alias name` in connecting rather than IP address, see the following methods.\\n\\n> So before connecting, we need get the container IP address by `docker inspect`.\\n\\nStart a `postgres db` container:\\n\\n```sh\\ndocker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\\n```\\n\\nGet the IP address of the `postgres db` container:\\n\\n```sh\\ndocker inspect mynginx | grep IPAddress\\n            \\"IPAddress\\": \\"172.17.0.2\\",\\n```\\n\\nRun a `postgres client` container to connect the `db` container:\\n\\n```sh\\ndocker run -it --rm postgres psql -h \\"172.17.0.2\\" -U postgres\\npsql (14.3)\\nType \\"help\\" for help.\\n\\npostgres=# SELECT 1;\\n ?column? \\n----------\\n        1\\n(1 row)\\n```\\n\\n## Using Private Defined Bridge Network\\n\\nThe `private defined bridge network` will give you more privacy that it only allows only containers belonging to it can talk to each other.\\n\\nMoreover, you can use `hostname` or `alias name` to connect without regard of `IP address` changing due to re-start.\\n\\nCreate a `private bridge network`:\\n\\n```sh\\ndocker network create postgres-net\\n```\\n\\nStart a `postgres db` container:\\n\\n```sh\\ndocker run --rm --net postgres-net --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\\n```\\n\\nRun a `postgres client` container to connect the `db` container:\\n\\n```sh\\ndocker run -it --rm --net postgres-net postgres psql -h postgres-db -U postgres\\npsql (14.3)\\nType \\"help\\" for help.\\n\\npostgres=# SELECT 1;\\n ?column? \\n----------\\n        1\\n(1 row)\\n```\\n\\n## Use Case in Docker Compose\\n\\nActually, `docker compose` will create its `private bridge network`, and when it start containers, containers will be attached to that network in default.\\n\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport CodeSource from \'!!raw-loader!./docker-compose-postgres.yml\';\\n\\n<CodeBlock language=\\"yaml\\" title=\\"docker-compose-postgres.yml\\">{CodeSource}</CodeBlock>"},{"id":"/inspect-shared-library","metadata":{"permalink":"/blog/inspect-shared-library","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/inspect-shared-library.md","source":"@site/../../blog/inspect-shared-library.md","title":"Inspect Shared Library","description":"Test Dynamic Library","date":"2023-06-02T00:00:00.000Z","formattedDate":"June 2, 2023","tags":[{"label":"debug","permalink":"/blog/tags/debug"},{"label":"shared library","permalink":"/blog/tags/shared-library"},{"label":"osx","permalink":"/blog/tags/osx"},{"label":"windows","permalink":"/blog/tags/windows"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":1.955,"hasTruncateMarker":false,"authors":[{"name":"Frank Chen","title":"Maintainer of Docusaurus","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank"}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/test-dynamic-library.md"},"authors":["frank"],"description":"Test Dynamic Library","keywords":["debug","dynamic library","shared library"],"image":"https://i.imgur.com/mErPwqL.png","tags":["debug","shared library","osx","windows","linux"],"date":"2023-06-02T00:00:00.000Z","draft":false,"enableComments":true},"prevItem":{"title":"Communication Between Docker Containers","permalink":"/blog/docker-containers-communication"}},"content":"Concepts:\\n\\n- Show shared libraries dependencies(detect what shared libraries an executable or a another shared libraries depend on)\\n- Check/Test dependent shared libraries loaded successfully\\n\\n## Using `ldd` Command\\n\\nAvailable in Linux:\\n\\n```sh\\nldd /usr/bin/vim\\n\\tlinux-vdso.so.1 (0x00007ffc75fb1000)\\n\\tlibgtk-3.so.0 => /usr/lib/libgtk-3.so.0 (0x00007fa4dcb5e000)\\n\\tlibgdk-3.so.0 => /usr/lib/libgdk-3.so.0 (0x00007fa4dca64000)\\t\\n\\tlibXau.so.6 => /usr/lib/libXau.so.6 (0x00007fa4db7a9000)\\n        ....\\n\\tliblzma.so.5 => /usr/lib/liblzma.so.5 (0x00007fa4db63f000)\\n\\tliblz4.so.1 => /usr/lib/liblz4.so.1 (0x00007fa4db61d000)\\n\\tlibgcrypt.so.20 => /usr/lib/libgcrypt.so.20 (0x00007fa4db4ff000)\\n\\tlibgpg-error.so.0 => /usr/lib/libgpg-error.so.0 (0x00007fa4db4d8000)\\n```\\n\\n## Using `objdump` Command\\n\\nAvailable in Linux:\\n\\n```sh\\nobjdump -p /usr/bin/vim | grep \'NEEDED\'\\n  NEEDED               libpython3.7m.so.1.0\\n  NEEDED               libcrypt.so.2\\n  NEEDED               libpthread.so.0\\n  NEEDED               libdl.so.2\\n  NEEDED               libutil.so.1\\n  NEEDED               libm.so.6\\n  NEEDED               libselinux.so.1\\n  NEEDED               libtinfo.so.6\\n  NEEDED               libacl.so.1\\n  NEEDED               libgpm.so.2\\n  NEEDED               libc.so.6\\n```\\n\\n## Using `readelf` Command\\n\\nAvailable in Linux:\\n\\n```sh\\nreadelf --dynamic /usr/bin/vim | grep NEEDED\\n 0x0000000000000001 (NEEDED)             Shared library: [libpython3.7m.so.1.0]\\n 0x0000000000000001 (NEEDED)             Shared library: [libcrypt.so.2]\\n 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]\\n 0x0000000000000001 (NEEDED)             Shared library: [libdl.so.2]\\n 0x0000000000000001 (NEEDED)             Shared library: [libutil.so.1]\\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\\n 0x0000000000000001 (NEEDED)             Shared library: [libselinux.so.1]\\n 0x0000000000000001 (NEEDED)             Shared library: [libtinfo.so.6]\\n 0x0000000000000001 (NEEDED)             Shared library: [libacl.so.1]\\n 0x0000000000000001 (NEEDED)             Shared library: [libgpm.so.2]\\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\\n```\\n\\n## Using `otool` Command\\n\\nAvailable in OSX:\\n\\n```sh\\notool -L libOpenCvSharpExtern.dylib\\n```\\n\\n## Reading the `/proc/<pid>/maps` File\\n\\nAvailable in Linux:\\n\\n```sh\\ncat /proc/179015/maps \\n...\\n7f2cb67c3000-7f2cb67c6000 r--p 00000000 08:13 3810274                    /usr/lib/libnss_files-2.31.so\\n7f2cb67c6000-7f2cb67cd000 r-xp 00003000 08:13 3810274                    /usr/lib/libnss_files-2.31.so\\n..\\n7f2cb6a89000-7f2cb6a8a000 r--p 00002000 08:13 3810903                    /usr/lib/libutil-2.31.so\\n7f2cb6a8a000-7f2cb6a8b000 r--p 00002000 08:13 3810903                    /usr/lib/libutil-2.31.so\\n...\\n7f2cb9802000-7f2cb9803000 rw-p 00000000 00:00 0 \\n7ffe77658000-7ffe7767a000 rw-p 00000000 00:00 0                          [stack]\\n7ffe776c8000-7ffe776cc000 r--p 00000000 00:00 0                          [vvar]\\n7ffe776cc000-7ffe776ce000 r-xp 00000000 00:00 0                          [vdso]\\nffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]\\n```\\n\\n```sh\\nawk \'$NF!~/\\\\.so/{next} {$0=$NF} !a[$0]++\' /proc/179015/maps\\n...\\n/usr/lib/libpython3.8.so.1.0\\n/usr/lib/libgpg-error.so.0.29.0\\n/usr/lib/libgcrypt.so.20.2.5\\n/usr/lib/liblz4.so.1.9.2\\n/usr/lib/liblzma.so.5.2.5\\n/usr/lib/libsystemd.so.0.28.0\\n/usr/lib/libogg.so.0.8.4\\n/usr/lib/libvorbis.so.0.4.8\\n/usr/lib/libblkid.so.1.1.0\\n/usr/lib/libXdmcp.so.6.0.0\\n/usr/lib/libXau.so.6.0.0\\n/usr/lib/libdatrie.so.1.3.5\\n...\\n```\\n\\n## Using `vmmap` Command\\n\\n## Using `ctypes` in Python\\n\\n```py\\nimport ctypes\\nctypes.cdll.LoadLibrary(\\"libOpenCvSharpExtern.so\\")\\nctypes.CDLL(\\"libOpenCvSharpExtern.so\\")\\n```\\n\\n```c\\ndlopen()\\nDYLD_PRINT_LIBRARIES=1 dlopen_test.out /opt/vcpkg/installed/arm64-osx-dynamic/lib/libpng16.dylib\\n```\\n\\n```sh\\nobjdump -p /usr/local/lib/libOpenCvSharpExtern.so\\n```\\n\\n### Using `nm`\\n\\nShow list of symbols:\\n\\n```sh\\n\u276f nm -g /opt/vcpkg/installed/arm64-osx-dynamic/lib/libintl.8.dylib\\n                 U _CFArrayGetCount\\n                 U _CFArrayGetValueAtIndex\\n                 U _CFGetTypeID\\n                 U _CFLocaleCopyPreferredLanguages\\n                 U _CFPreferencesCopyAppValue\\n                 U _CFRelease\\n                 U _CFStringGetCString\\n                 U _CFStringGetTypeID\\n                 U __DefaultRuneLocale\\n                 U ___CFConstantStringClassReference\\n```\\n\\n### Using `dumpbin`\\n\\nAvailable in Windows\\n\\nShow dependent dynamic libraries(`DLL`):\\n\\n```powershell\\ndumpbin /dependents your_dll_file.dll\\n```\\n\\n### Using `Microsoft.PowerShell`\\n\\n```powershell\\n(Get-Command \\"C:\\\\Path\\\\To\\\\Thing.dll\\").FileVersionInfo\\n(Get-Item \\"C:\\\\Windows\\\\System32\\\\nvcuda.dll\\").VersionInfo\\n```\\n\\n## Useful Environment Variables\\n\\nOSX:\\n\\n- `DYLD_LIBRARY_PATH`\\n- `DYLD_PRINT_LIBRARIES`\\n- `DYLD_PRINT_STATISTICS`\\n\\nLinux:\\n\\n- `LD_LIBRARY_PATH`\\n- `LD_DEBUG=libs`\\n\\n## References\\n\\n[Additional MSVC Build Tools](https://learn.microsoft.com/en-us/cpp/build/reference/c-cpp-build-tools)\\n\\n[How to Show All Shared Libraries Used by Executables in Linux](https://www.baeldung.com/linux/show-shared-libraries-executables)"}]}')}}]);