"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9017],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=i,h=c["".concat(u,".").concat(d)]||c[d]||p[d]||r;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},33892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const r={authors:["frank"],tags:["wiki","qemu"],description:"Wiki QEMU",keywords:["Wiki QEMU"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-09-19T00:00:00.000Z"),draft:!1,enableComments:!0},o="QEMU",l={permalink:"/blog/wiki-qemu",editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../blog/wiki-qemu.mdx",source:"@site/../../blog/wiki-qemu.mdx",title:"QEMU",description:"Wiki QEMU",date:"2023-09-19T00:00:00.000Z",formattedDate:"September 19, 2023",tags:[{label:"wiki",permalink:"/blog/tags/wiki"},{label:"qemu",permalink:"/blog/tags/qemu"}],readingTime:3.28,hasTruncateMarker:!0,authors:[{name:"Frank Chen",title:"Maintainer of Docusaurus",url:"https://github.com/liviaerxin",imageURL:"https://github.com/liviaerxin.png",key:"frank"}],frontMatter:{authors:["frank"],tags:["wiki","qemu"],description:"Wiki QEMU",keywords:["Wiki QEMU"],image:"https://i.imgur.com/mErPwqL.png",date:"2023-09-19T00:00:00.000Z",draft:!1,enableComments:!0},prevItem:{title:"Learn Vcpkg",permalink:"/blog/wiki-vcpkg"},nextItem:{title:"Coral",permalink:"/blog/wiki-coral"}},u={authorsImageUrls:[void 0]},s=[{value:"Mount ISO file on Linux",id:"mount-iso-file-on-linux",level:2},{value:"Mount ISO file on macOS",id:"mount-iso-file-on-macos",level:2},{value:"QEMU",id:"qemu",level:2}],m={toc:s},c="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://medium.com/@ThyCrow/compiling-the-linux-kernel-and-creating-a-bootable-iso-from-it-6afb8d23ba22"},"https://medium.com/@ThyCrow/compiling-the-linux-kernel-and-creating-a-bootable-iso-from-it-6afb8d23ba22")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://levelup.gitconnected.com/probably-the-simplest-way-to-install-debian-ubuntu-in-qemu-2db6afde27ef"},"https://levelup.gitconnected.com/probably-the-simplest-way-to-install-debian-ubuntu-in-qemu-2db6afde27ef")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://krinkinmu.github.io/2020/11/21/EFI-aarch64.html"},"https://krinkinmu.github.io/2020/11/21/EFI-aarch64.html")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://wiki.debian.org/Arm64Qemu"},"https://wiki.debian.org/Arm64Qemu")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://cdn.kernel.org/pub/linux/kernel/people/will/docs/qemu/qemu-arm64-howto.html"},"http://cdn.kernel.org/pub/linux/kernel/people/will/docs/qemu/qemu-arm64-howto.html")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://futurewei-cloud.github.io/ARM-Datacenter/qemu/how-to-launch-aarch64-vm/"},"https://futurewei-cloud.github.io/ARM-Datacenter/qemu/how-to-launch-aarch64-vm/")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://xryan.net/p/212"},"https://xryan.net/p/212")),(0,i.kt)("p",null,"OS Image Resources:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cdimage.ubuntu.com/"},"Ubuntu OS Images")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cdimage.debian.org/"},"Debian OS Images"))),(0,i.kt)("h2",{id:"mount-iso-file-on-linux"},"Mount ISO file on Linux"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.cyberciti.biz/tips/how-to-mount-iso-image-under-linux.html"},"https://www.cyberciti.biz/tips/how-to-mount-iso-image-under-linux.html")),(0,i.kt)("h2",{id:"mount-iso-file-on-macos"},"Mount ISO file on macOS"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://unix.stackexchange.com/questions/298685/can-a-mac-mount-a-debian-install-cd"},"https://unix.stackexchange.com/questions/298685/can-a-mac-mount-a-debian-install-cd")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Attaching as a block device")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# the '-nomount' option avoids the 'mount failed' error\n\u276f hdiutil attach -nomount mantic-mini-iso-amd64.iso\n/dev/disk6              GUID_partition_scheme           \n/dev/disk6s1            Microsoft Basic Data            \n/dev/disk6s2            EFI                             \n/dev/disk6s3            Microsoft Basic Data  \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u276f diskutil info /dev/disk6s2\n   Device Identifier:         disk6s2\n   Device Node:               /dev/disk6s2\n   Whole:                     No\n   Part of Whole:             disk6\n\n   Volume Name:               ESP\n   Mounted:                   No\n\n   Partition Type:            EFI\n   File System Personality:   MS-DOS FAT12\n   Type (Bundle):             msdos\n   Name (User Visible):       MS-DOS (FAT12)\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Load CD9660")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# Load the kext module\n\u276f sudo kmutil load -p /System/Library/Extensions/cd9660.kext\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Mount the disk with cd9660 (aka ISO9660) file system")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# create mount point\n\u276f mkdir -p /tmp/ubuntu-mantic-iso\n\n# mount the disk\n\u276f mount -t cd9660 /dev/disk6 /tmp/ubuntu-mantic-iso\n")),(0,i.kt)("p",null,"View the ",(0,i.kt)("inlineCode",{parentName:"p"},"iso")," files,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u276f tree -h -L 3 /tmp/ubuntu-mantic-iso\n[2.0K]  /tmp/ubuntu-mantic-iso\n\u251c\u2500\u2500 [2.0K]  EFI\n\u2502\xa0\xa0 \u2514\u2500\u2500 [2.0K]  boot\n\u2502\xa0\xa0     \u251c\u2500\u2500 [938K]  bootx64.efi\n\u2502\xa0\xa0     \u251c\u2500\u2500 [2.2M]  grubx64.efi\n\u2502\xa0\xa0     \u2514\u2500\u2500 [841K]  mmx64.efi\n\u251c\u2500\u2500 [2.0K]  boot\n\u2502\xa0\xa0 \u2514\u2500\u2500 [2.0K]  grub\n\u2502\xa0\xa0     \u251c\u2500\u2500 [2.0K]  fonts\n\u2502\xa0\xa0     \u251c\u2500\u2500 [ 169]  grub.cfg\n\u2502\xa0\xa0     \u251c\u2500\u2500 [ 38K]  i386-pc\n\u2502\xa0\xa0     \u2514\u2500\u2500 [ 36K]  x86_64-efi\n\u251c\u2500\u2500 [2.0K]  boot.catalog\n\u2514\u2500\u2500 [2.0K]  casper\n    \u251c\u2500\u2500 [ 56M]  initrd\n    \u2514\u2500\u2500 [ 13M]  vmlinuz\n\n9 directories, 7 files\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Umount the disk")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u276f umount /dev/disk6\n")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Detach the disk")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u276f hdiutil detach /dev/disk6\n")),(0,i.kt)("h2",{id:"qemu"},"QEMU"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-img create -f raw ubuntu-latest.raw 10G\nqemu-img create -f qcow2 ubuntu-latest.qcow2 10G\n")),(0,i.kt)("p",null,"QEMU boot from 3 method:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"BIOS in default"),(0,i.kt)("li",{parentName:"ul"},"Linux kernel and initrad"),(0,i.kt)("li",{parentName:"ul"},"UEFI, you must provide the UEFI firmware to help QEMU enter UEFI boot like ",(0,i.kt)("inlineCode",{parentName:"li"},"OVMF.fd"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/tianocore/tianocore.github.io/wiki/OVMF"},"https://github.com/tianocore/tianocore.github.io/wiki/OVMF")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"efi=/Users/frankchen/Documents/qemu/aarch64/QEMU_EFI.fd\nefi=QEMU_EFI.fd\niso=ubuntu-22.04-live-server-arm64.iso\niso=ubuntu-core-22-arm64+raspi.img\n\n# It will enter monitor console in default.\n# Holding down the Ctrl and Alt keys, and pressing Ctrl-Alt-2. Once in the monitor, Ctrl-Alt-1 switches back to the guest OS\n# `-monitor stdio` will enter the guest os in force.\nqemu-system-aarch64 \\\n    -monitor stdio \\\n    -machine virt \\\n    -cpu cortex-a57 \\\n    -m 1G \\\n    -bios $efi\n\nqemu-system-aarch64 \\\n    -machine virt \\\n    -cpu cortex-a57 \\\n    -m 1G \\\n    -nographic \\\n    -bios $efi\n\nqemu-system-aarch64 \\\n    -machine virt \\\n    -cpu cortex-a57 \\\n    -m 1G \\\n    -nographic \\\n    -bios $efi \\\n    -cdrom $iso\n\nqemu-system-aarch64 \\\n    -monitor stdio \\\n    -machine virt \\\n    -accel hvf \\\n    -cpu host \\\n    -m 4G \\\n    -smp 4 \\\n    -display default,show-cursor=on \\\n    -bios $efi \\\n    -cdrom $iso\n\nqemu-system-aarch64 \\\n    -monitor stdio \\\n    -machine virt \\\n    -accel hvf \\\n    -cpu host \\\n    -m 4G \\\n    -smp 4 \\\n    -display default,show-cursor=on \\\n    -bios $efi \\\n    -drive file=ubuntu-latest.raw,format=raw,if=virtio \\\n    -cdrom $iso\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"efi=/Users/frankchen/Documents/qemu/ovmf-x64/OVMF_CODE-pure-efi.fd\n\nqemu-system-x86_64 \\\n    -m 1G \\\n    -nographic \\\n    -bios $efi\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 \\\n    -cpu cortex-a57 \\\n   -nographic \\\n   -M virt\\\n   -smp 4 \\\n   -m 3000 \\\n   -bios QEMU_EFI1.fd \\\n   -device qemu-xhci \\\n   -device usb-kbd \\\n   -device usb-tablet \\\n   -device intel-hda \\\n   -device hda-duplex \\\n   -drive file=ubuntu-latest.img,format=raw,if=virtio,cache=writethrough \\\n   -cdrom ubuntu-core-22-arm64+raspi.img\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 \\\n   -monitor stdio \\\n   -cpu cortex-a57 \\\n   -M virt,highmem=off \\\n   -accel hvf \\\n   -cpu host \\\n   -smp 4 \\\n   -m 3000 \\\n   -bios QEMU_EFI1.fd \\\n   -device virtio-gpu-pci \\\n   -display default,show-cursor=on \\\n   -device qemu-xhci \\\n   -device usb-kbd \\\n   -device usb-tablet \\\n   -device intel-hda \\\n   -device hda-duplex \\\n   -drive file=ubuntu-latest.img,format=raw \\\n   -drive if=none,file=ubuntu-22.04-live-server-arm64.iso,media=cdrom,id=cdrom\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 \\\n   -monitor stdio \\\n    -cpu cortex-a57 \\\n   -M virt,highmem=off \\\n   -accel hvf \\\n   -cpu host \\\n   -smp 4 \\\n   -m 3000 \\\n   -bios QEMU_EFI1.fd \\\n   -device virtio-gpu-pci \\\n   -display default,show-cursor=on \\\n   -device qemu-xhci \\\n   -device usb-kbd \\\n   -device usb-tablet \\\n   -device intel-hda \\\n   -device hda-duplex \\\n   -drive file=ubuntu-latest.img,format=raw,if=virtio,cache=writethrough \\\n   -cdrom ubuntu-22.04-live-server-arm64.iso\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-x86_64 \\\n   -m 3000 \\\n   -bios QEMU_EFI.fd \\\n   -cdrom mantic-mini-iso-amd64.iso\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 -machine virt -serial stdio -cpu cortex-a53 -bios QEMU_EFI.fd\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 -machine virt -serial stdio -cpu cortex-a53 -bios QEMU_EFI1.fd\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"qemu-system-aarch64 -machine virt -cpu cortex-a53 -bios QEMU_EFI.fd -m 3000 -cdrom ubuntu-core-22-arm64+raspi.img\n")))}p.isMDXComponent=!0}}]);